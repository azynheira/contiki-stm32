                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:15 2013
                              5 ;--------------------------------------------------------
                              6 	.module abc
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _rime_output
                             13 	.globl _channel_close
                             14 	.globl _channel_open
                             15 	.globl _channel_set_attributes
                             16 	.globl _IRCON2_P2IF
                             17 	.globl _IRCON2_UTX0IF
                             18 	.globl _IRCON2_UTX1IF
                             19 	.globl _IRCON2_P1IF
                             20 	.globl _IRCON2_WDTIF
                             21 	.globl _CY
                             22 	.globl _AC
                             23 	.globl _F0
                             24 	.globl _RS1
                             25 	.globl _RS0
                             26 	.globl _OV
                             27 	.globl _F1
                             28 	.globl _P
                             29 	.globl _IRCON_DMAIF
                             30 	.globl _IRCON_T1IF
                             31 	.globl _IRCON_T2IF
                             32 	.globl _IRCON_T3IF
                             33 	.globl _IRCON_T4IF
                             34 	.globl _IRCON_P0IF
                             35 	.globl _IRCON_STIF
                             36 	.globl _IEN1_DMAIE
                             37 	.globl _IEN1_T1IE
                             38 	.globl _IEN1_T2IE
                             39 	.globl _IEN1_T3IE
                             40 	.globl _IEN1_T4IE
                             41 	.globl _IEN1_P0IE
                             42 	.globl _IEN0_RFERRIE
                             43 	.globl _IEN0_ADCIE
                             44 	.globl _IEN0_URX0IE
                             45 	.globl _IEN0_URX1IE
                             46 	.globl _IEN0_ENCIE
                             47 	.globl _IEN0_STIE
                             48 	.globl _IEN0_EA
                             49 	.globl _EA
                             50 	.globl _P2_4
                             51 	.globl _P2_3
                             52 	.globl _P2_2
                             53 	.globl _P2_1
                             54 	.globl _P2_0
                             55 	.globl _S0CON_ENCIF_0
                             56 	.globl _S0CON_ENCIF_1
                             57 	.globl _P1_7
                             58 	.globl _P1_6
                             59 	.globl _P1_5
                             60 	.globl _P1_4
                             61 	.globl _P1_3
                             62 	.globl _P1_2
                             63 	.globl _P1_1
                             64 	.globl _P1_0
                             65 	.globl _TCON_IT0
                             66 	.globl _TCON_RFERRIF
                             67 	.globl _TCON_IT1
                             68 	.globl _TCON_URX0IF
                             69 	.globl _TCON_ADCIF
                             70 	.globl _TCON_URX1IF
                             71 	.globl _P0_0
                             72 	.globl _P0_1
                             73 	.globl _P0_2
                             74 	.globl _P0_3
                             75 	.globl _P0_4
                             76 	.globl _P0_5
                             77 	.globl _P0_6
                             78 	.globl _P0_7
                             79 	.globl _P2DIR
                             80 	.globl _P1DIR
                             81 	.globl _P0DIR
                             82 	.globl _U1GCR
                             83 	.globl _U1UCR
                             84 	.globl _U1BAUD
                             85 	.globl _U1BUF
                             86 	.globl _U1CSR
                             87 	.globl _P2INP
                             88 	.globl _P1INP
                             89 	.globl _P2SEL
                             90 	.globl _P1SEL
                             91 	.globl _P0SEL
                             92 	.globl _ADCCFG
                             93 	.globl _PERCFG
                             94 	.globl _B
                             95 	.globl _T4CC1
                             96 	.globl _T4CCTL1
                             97 	.globl _T4CC0
                             98 	.globl _T4CCTL0
                             99 	.globl _T4CTL
                            100 	.globl _T4CNT
                            101 	.globl _RFIF
                            102 	.globl _IRCON2
                            103 	.globl _T1CCTL2
                            104 	.globl _T1CCTL1
                            105 	.globl _T1CCTL0
                            106 	.globl _T1CTL
                            107 	.globl _T1CNTH
                            108 	.globl _T1CNTL
                            109 	.globl _RFST
                            110 	.globl _ACC
                            111 	.globl _T1CC2H
                            112 	.globl _T1CC2L
                            113 	.globl _T1CC1H
                            114 	.globl _T1CC1L
                            115 	.globl _T1CC0H
                            116 	.globl _T1CC0L
                            117 	.globl _RFD
                            118 	.globl _TIMIF
                            119 	.globl _DMAREQ
                            120 	.globl _DMAARM
                            121 	.globl _DMA0CFGH
                            122 	.globl _DMA0CFGL
                            123 	.globl _DMA1CFGH
                            124 	.globl _DMA1CFGL
                            125 	.globl _DMAIRQ
                            126 	.globl _PSW
                            127 	.globl _T3CC1
                            128 	.globl _T3CCTL1
                            129 	.globl _T3CC0
                            130 	.globl _T3CCTL0
                            131 	.globl _T3CTL
                            132 	.globl _T3CNT
                            133 	.globl _WDCTL
                            134 	.globl _T2CON
                            135 	.globl _MEMCTR
                            136 	.globl _CLKCON
                            137 	.globl _U0GCR
                            138 	.globl _U0UCR
                            139 	.globl _T2CNF
                            140 	.globl _U0BAUD
                            141 	.globl _U0BUF
                            142 	.globl _IRCON
                            143 	.globl _SLEEP
                            144 	.globl _RNDH
                            145 	.globl _RNDL
                            146 	.globl _ADCH
                            147 	.globl _ADCL
                            148 	.globl _IP1
                            149 	.globl _IEN1
                            150 	.globl _RCCTL
                            151 	.globl _ADCCON3
                            152 	.globl _ADCCON2
                            153 	.globl _ADCCON1
                            154 	.globl _ENCCS
                            155 	.globl _ENCDO
                            156 	.globl _ENCDI
                            157 	.globl _FWDATA
                            158 	.globl _FCTL
                            159 	.globl _FADDRH
                            160 	.globl _FADDRL
                            161 	.globl _FWT
                            162 	.globl _IP0
                            163 	.globl _IEN0
                            164 	.globl _IE
                            165 	.globl _T2THD
                            166 	.globl _T2TLD
                            167 	.globl _T2CAPHPH
                            168 	.globl _T2CAPLPL
                            169 	.globl _T2OF2
                            170 	.globl _T2OF1
                            171 	.globl _T2OF0
                            172 	.globl _P2
                            173 	.globl _PSBANK
                            174 	.globl _FMAP
                            175 	.globl _T2PEROF2
                            176 	.globl _T2PEROF1
                            177 	.globl _T2PEROF0
                            178 	.globl _S1CON
                            179 	.globl _IEN2
                            180 	.globl _HSRC
                            181 	.globl _S0CON
                            182 	.globl _ST2
                            183 	.globl _ST1
                            184 	.globl _ST0
                            185 	.globl _T2CMP
                            186 	.globl __XPAGE
                            187 	.globl _DPS
                            188 	.globl _RFIM
                            189 	.globl _P1
                            190 	.globl _P0INP
                            191 	.globl _P1IEN
                            192 	.globl _PICTL
                            193 	.globl _P2IFG
                            194 	.globl _P1IFG
                            195 	.globl _P0IFG
                            196 	.globl _TCON
                            197 	.globl _PCON
                            198 	.globl _U0CSR
                            199 	.globl _DPH1
                            200 	.globl _DPL1
                            201 	.globl _DPH0
                            202 	.globl _DPL0
                            203 	.globl _SP
                            204 	.globl _P0
                            205 	.globl _ADC_SHADOW
                            206 	.globl _U1BUF_SHADOW
                            207 	.globl _RFD_SHADOW
                            208 	.globl _U0BUF_SHADOW
                            209 	.globl _RFSTATUS
                            210 	.globl _CHIPID
                            211 	.globl _CHVER
                            212 	.globl _FSMTC1
                            213 	.globl _RXFIFOCNT
                            214 	.globl _IOCFG3
                            215 	.globl _IOCFG2
                            216 	.globl _IOCFG1
                            217 	.globl _IOCFG0
                            218 	.globl _SHORTADDRL
                            219 	.globl _SHORTADDRH
                            220 	.globl _PANIDL
                            221 	.globl _PANIDH
                            222 	.globl _IEEE_ADDR7
                            223 	.globl _IEEE_ADDR6
                            224 	.globl _IEEE_ADDR5
                            225 	.globl _IEEE_ADDR4
                            226 	.globl _IEEE_ADDR3
                            227 	.globl _IEEE_ADDR2
                            228 	.globl _IEEE_ADDR1
                            229 	.globl _IEEE_ADDR0
                            230 	.globl _DACTSTL
                            231 	.globl _DACTSTH
                            232 	.globl _ADCTSTL
                            233 	.globl _ADCTSTH
                            234 	.globl _FSMSTATE
                            235 	.globl _AGCCTRLL
                            236 	.globl _AGCCTRLH
                            237 	.globl _MANORL
                            238 	.globl _MANORH
                            239 	.globl _MANANDL
                            240 	.globl _MANANDH
                            241 	.globl _FSMTCL
                            242 	.globl _FSMTCH
                            243 	.globl _RFPWR
                            244 	.globl _CSPT
                            245 	.globl _CSPCTRL
                            246 	.globl _CSPZ
                            247 	.globl _CSPY
                            248 	.globl _CSPX
                            249 	.globl _FSCTRLL
                            250 	.globl _FSCTRLH
                            251 	.globl _RXCTRL1L
                            252 	.globl _RXCTRL1H
                            253 	.globl _RXCTRL0L
                            254 	.globl _RXCTRL0H
                            255 	.globl _TXCTRLL
                            256 	.globl _TXCTRLH
                            257 	.globl _SYNCWORDL
                            258 	.globl _SYNCWORDH
                            259 	.globl _RSSIL
                            260 	.globl _RSSIH
                            261 	.globl _MDMCTRL1L
                            262 	.globl _MDMCTRL1H
                            263 	.globl _MDMCTRL0L
                            264 	.globl _MDMCTRL0H
                            265 	.globl _abc_open
                            266 	.globl _abc_close
                            267 	.globl _abc_send
                            268 	.globl _abc_input
                            269 	.globl _abc_sent
                            270 ;--------------------------------------------------------
                            271 ; special function registers
                            272 ;--------------------------------------------------------
                            273 	.area RSEG    (ABS,DATA)
   0000                     274 	.org 0x0000
                    0080    275 _P0	=	0x0080
                    0081    276 _SP	=	0x0081
                    0082    277 _DPL0	=	0x0082
                    0083    278 _DPH0	=	0x0083
                    0084    279 _DPL1	=	0x0084
                    0085    280 _DPH1	=	0x0085
                    0086    281 _U0CSR	=	0x0086
                    0087    282 _PCON	=	0x0087
                    0088    283 _TCON	=	0x0088
                    0089    284 _P0IFG	=	0x0089
                    008A    285 _P1IFG	=	0x008a
                    008B    286 _P2IFG	=	0x008b
                    008C    287 _PICTL	=	0x008c
                    008D    288 _P1IEN	=	0x008d
                    008F    289 _P0INP	=	0x008f
                    0090    290 _P1	=	0x0090
                    0091    291 _RFIM	=	0x0091
                    0092    292 _DPS	=	0x0092
                    0093    293 __XPAGE	=	0x0093
                    0094    294 _T2CMP	=	0x0094
                    0095    295 _ST0	=	0x0095
                    0096    296 _ST1	=	0x0096
                    0097    297 _ST2	=	0x0097
                    0098    298 _S0CON	=	0x0098
                    0099    299 _HSRC	=	0x0099
                    009A    300 _IEN2	=	0x009a
                    009B    301 _S1CON	=	0x009b
                    009C    302 _T2PEROF0	=	0x009c
                    009D    303 _T2PEROF1	=	0x009d
                    009E    304 _T2PEROF2	=	0x009e
                    009F    305 _FMAP	=	0x009f
                    009F    306 _PSBANK	=	0x009f
                    00A0    307 _P2	=	0x00a0
                    00A1    308 _T2OF0	=	0x00a1
                    00A2    309 _T2OF1	=	0x00a2
                    00A3    310 _T2OF2	=	0x00a3
                    00A4    311 _T2CAPLPL	=	0x00a4
                    00A5    312 _T2CAPHPH	=	0x00a5
                    00A6    313 _T2TLD	=	0x00a6
                    00A7    314 _T2THD	=	0x00a7
                    00A8    315 _IE	=	0x00a8
                    00A8    316 _IEN0	=	0x00a8
                    00A9    317 _IP0	=	0x00a9
                    00AB    318 _FWT	=	0x00ab
                    00AC    319 _FADDRL	=	0x00ac
                    00AD    320 _FADDRH	=	0x00ad
                    00AE    321 _FCTL	=	0x00ae
                    00AF    322 _FWDATA	=	0x00af
                    00B1    323 _ENCDI	=	0x00b1
                    00B2    324 _ENCDO	=	0x00b2
                    00B3    325 _ENCCS	=	0x00b3
                    00B4    326 _ADCCON1	=	0x00b4
                    00B5    327 _ADCCON2	=	0x00b5
                    00B6    328 _ADCCON3	=	0x00b6
                    00B7    329 _RCCTL	=	0x00b7
                    00B8    330 _IEN1	=	0x00b8
                    00B9    331 _IP1	=	0x00b9
                    00BA    332 _ADCL	=	0x00ba
                    00BB    333 _ADCH	=	0x00bb
                    00BC    334 _RNDL	=	0x00bc
                    00BD    335 _RNDH	=	0x00bd
                    00BE    336 _SLEEP	=	0x00be
                    00C0    337 _IRCON	=	0x00c0
                    00C1    338 _U0BUF	=	0x00c1
                    00C2    339 _U0BAUD	=	0x00c2
                    00C3    340 _T2CNF	=	0x00c3
                    00C4    341 _U0UCR	=	0x00c4
                    00C5    342 _U0GCR	=	0x00c5
                    00C6    343 _CLKCON	=	0x00c6
                    00C7    344 _MEMCTR	=	0x00c7
                    00C8    345 _T2CON	=	0x00c8
                    00C9    346 _WDCTL	=	0x00c9
                    00CA    347 _T3CNT	=	0x00ca
                    00CB    348 _T3CTL	=	0x00cb
                    00CC    349 _T3CCTL0	=	0x00cc
                    00CD    350 _T3CC0	=	0x00cd
                    00CE    351 _T3CCTL1	=	0x00ce
                    00CF    352 _T3CC1	=	0x00cf
                    00D0    353 _PSW	=	0x00d0
                    00D1    354 _DMAIRQ	=	0x00d1
                    00D2    355 _DMA1CFGL	=	0x00d2
                    00D3    356 _DMA1CFGH	=	0x00d3
                    00D4    357 _DMA0CFGL	=	0x00d4
                    00D5    358 _DMA0CFGH	=	0x00d5
                    00D6    359 _DMAARM	=	0x00d6
                    00D7    360 _DMAREQ	=	0x00d7
                    00D8    361 _TIMIF	=	0x00d8
                    00D9    362 _RFD	=	0x00d9
                    00DA    363 _T1CC0L	=	0x00da
                    00DB    364 _T1CC0H	=	0x00db
                    00DC    365 _T1CC1L	=	0x00dc
                    00DD    366 _T1CC1H	=	0x00dd
                    00DE    367 _T1CC2L	=	0x00de
                    00DF    368 _T1CC2H	=	0x00df
                    00E0    369 _ACC	=	0x00e0
                    00E1    370 _RFST	=	0x00e1
                    00E2    371 _T1CNTL	=	0x00e2
                    00E3    372 _T1CNTH	=	0x00e3
                    00E4    373 _T1CTL	=	0x00e4
                    00E5    374 _T1CCTL0	=	0x00e5
                    00E6    375 _T1CCTL1	=	0x00e6
                    00E7    376 _T1CCTL2	=	0x00e7
                    00E8    377 _IRCON2	=	0x00e8
                    00E9    378 _RFIF	=	0x00e9
                    00EA    379 _T4CNT	=	0x00ea
                    00EB    380 _T4CTL	=	0x00eb
                    00EC    381 _T4CCTL0	=	0x00ec
                    00ED    382 _T4CC0	=	0x00ed
                    00EE    383 _T4CCTL1	=	0x00ee
                    00EF    384 _T4CC1	=	0x00ef
                    00F0    385 _B	=	0x00f0
                    00F1    386 _PERCFG	=	0x00f1
                    00F2    387 _ADCCFG	=	0x00f2
                    00F3    388 _P0SEL	=	0x00f3
                    00F4    389 _P1SEL	=	0x00f4
                    00F5    390 _P2SEL	=	0x00f5
                    00F6    391 _P1INP	=	0x00f6
                    00F7    392 _P2INP	=	0x00f7
                    00F8    393 _U1CSR	=	0x00f8
                    00F9    394 _U1BUF	=	0x00f9
                    00FA    395 _U1BAUD	=	0x00fa
                    00FB    396 _U1UCR	=	0x00fb
                    00FC    397 _U1GCR	=	0x00fc
                    00FD    398 _P0DIR	=	0x00fd
                    00FE    399 _P1DIR	=	0x00fe
                    00FF    400 _P2DIR	=	0x00ff
                            401 ;--------------------------------------------------------
                            402 ; special function bits
                            403 ;--------------------------------------------------------
                            404 	.area RSEG    (ABS,DATA)
   0000                     405 	.org 0x0000
                    0087    406 _P0_7	=	0x0087
                    0086    407 _P0_6	=	0x0086
                    0085    408 _P0_5	=	0x0085
                    0084    409 _P0_4	=	0x0084
                    0083    410 _P0_3	=	0x0083
                    0082    411 _P0_2	=	0x0082
                    0081    412 _P0_1	=	0x0081
                    0080    413 _P0_0	=	0x0080
                    008F    414 _TCON_URX1IF	=	0x008f
                    008D    415 _TCON_ADCIF	=	0x008d
                    008B    416 _TCON_URX0IF	=	0x008b
                    008A    417 _TCON_IT1	=	0x008a
                    0089    418 _TCON_RFERRIF	=	0x0089
                    0088    419 _TCON_IT0	=	0x0088
                    0090    420 _P1_0	=	0x0090
                    0091    421 _P1_1	=	0x0091
                    0092    422 _P1_2	=	0x0092
                    0093    423 _P1_3	=	0x0093
                    0094    424 _P1_4	=	0x0094
                    0095    425 _P1_5	=	0x0095
                    0096    426 _P1_6	=	0x0096
                    0097    427 _P1_7	=	0x0097
                    0099    428 _S0CON_ENCIF_1	=	0x0099
                    0098    429 _S0CON_ENCIF_0	=	0x0098
                    00A0    430 _P2_0	=	0x00a0
                    00A1    431 _P2_1	=	0x00a1
                    00A2    432 _P2_2	=	0x00a2
                    00A3    433 _P2_3	=	0x00a3
                    00A4    434 _P2_4	=	0x00a4
                    00AF    435 _EA	=	0x00af
                    00AF    436 _IEN0_EA	=	0x00af
                    00AD    437 _IEN0_STIE	=	0x00ad
                    00AC    438 _IEN0_ENCIE	=	0x00ac
                    00AB    439 _IEN0_URX1IE	=	0x00ab
                    00AA    440 _IEN0_URX0IE	=	0x00aa
                    00A9    441 _IEN0_ADCIE	=	0x00a9
                    00A8    442 _IEN0_RFERRIE	=	0x00a8
                    00BD    443 _IEN1_P0IE	=	0x00bd
                    00BC    444 _IEN1_T4IE	=	0x00bc
                    00BB    445 _IEN1_T3IE	=	0x00bb
                    00BA    446 _IEN1_T2IE	=	0x00ba
                    00B9    447 _IEN1_T1IE	=	0x00b9
                    00B8    448 _IEN1_DMAIE	=	0x00b8
                    00C7    449 _IRCON_STIF	=	0x00c7
                    00C5    450 _IRCON_P0IF	=	0x00c5
                    00C4    451 _IRCON_T4IF	=	0x00c4
                    00C3    452 _IRCON_T3IF	=	0x00c3
                    00C2    453 _IRCON_T2IF	=	0x00c2
                    00C1    454 _IRCON_T1IF	=	0x00c1
                    00C0    455 _IRCON_DMAIF	=	0x00c0
                    00D0    456 _P	=	0x00d0
                    00D1    457 _F1	=	0x00d1
                    00D2    458 _OV	=	0x00d2
                    00D3    459 _RS0	=	0x00d3
                    00D4    460 _RS1	=	0x00d4
                    00D5    461 _F0	=	0x00d5
                    00D6    462 _AC	=	0x00d6
                    00D7    463 _CY	=	0x00d7
                    00EC    464 _IRCON2_WDTIF	=	0x00ec
                    00EB    465 _IRCON2_P1IF	=	0x00eb
                    00EA    466 _IRCON2_UTX1IF	=	0x00ea
                    00E9    467 _IRCON2_UTX0IF	=	0x00e9
                    00E8    468 _IRCON2_P2IF	=	0x00e8
                            469 ;--------------------------------------------------------
                            470 ; overlayable register banks
                            471 ;--------------------------------------------------------
                            472 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     473 	.ds 8
                            474 ;--------------------------------------------------------
                            475 ; internal ram data
                            476 ;--------------------------------------------------------
                            477 	.area DSEG    (DATA)
                            478 ;--------------------------------------------------------
                            479 ; overlayable items in internal ram 
                            480 ;--------------------------------------------------------
                            481 	.area OSEG    (OVR,DATA)
                            482 ;--------------------------------------------------------
                            483 ; indirectly addressable internal ram data
                            484 ;--------------------------------------------------------
                            485 	.area ISEG    (DATA)
                            486 ;--------------------------------------------------------
                            487 ; absolute internal ram data
                            488 ;--------------------------------------------------------
                            489 	.area IABS    (ABS,DATA)
                            490 	.area IABS    (ABS,DATA)
                            491 ;--------------------------------------------------------
                            492 ; bit data
                            493 ;--------------------------------------------------------
                            494 	.area BSEG    (BIT)
                            495 ;--------------------------------------------------------
                            496 ; paged external ram data
                            497 ;--------------------------------------------------------
                            498 	.area PSEG    (PAG,XDATA)
                            499 ;--------------------------------------------------------
                            500 ; external ram data
                            501 ;--------------------------------------------------------
                            502 	.area XSEG    (XDATA)
                    DF02    503 _MDMCTRL0H	=	0xdf02
                    DF03    504 _MDMCTRL0L	=	0xdf03
                    DF04    505 _MDMCTRL1H	=	0xdf04
                    DF05    506 _MDMCTRL1L	=	0xdf05
                    DF06    507 _RSSIH	=	0xdf06
                    DF07    508 _RSSIL	=	0xdf07
                    DF08    509 _SYNCWORDH	=	0xdf08
                    DF09    510 _SYNCWORDL	=	0xdf09
                    DF0A    511 _TXCTRLH	=	0xdf0a
                    DF0B    512 _TXCTRLL	=	0xdf0b
                    DF0C    513 _RXCTRL0H	=	0xdf0c
                    DF0D    514 _RXCTRL0L	=	0xdf0d
                    DF0E    515 _RXCTRL1H	=	0xdf0e
                    DF0F    516 _RXCTRL1L	=	0xdf0f
                    DF10    517 _FSCTRLH	=	0xdf10
                    DF11    518 _FSCTRLL	=	0xdf11
                    DF12    519 _CSPX	=	0xdf12
                    DF13    520 _CSPY	=	0xdf13
                    DF14    521 _CSPZ	=	0xdf14
                    DF15    522 _CSPCTRL	=	0xdf15
                    DF16    523 _CSPT	=	0xdf16
                    DF17    524 _RFPWR	=	0xdf17
                    DF20    525 _FSMTCH	=	0xdf20
                    DF21    526 _FSMTCL	=	0xdf21
                    DF22    527 _MANANDH	=	0xdf22
                    DF23    528 _MANANDL	=	0xdf23
                    DF24    529 _MANORH	=	0xdf24
                    DF25    530 _MANORL	=	0xdf25
                    DF26    531 _AGCCTRLH	=	0xdf26
                    DF27    532 _AGCCTRLL	=	0xdf27
                    DF39    533 _FSMSTATE	=	0xdf39
                    DF3A    534 _ADCTSTH	=	0xdf3a
                    DF3B    535 _ADCTSTL	=	0xdf3b
                    DF3C    536 _DACTSTH	=	0xdf3c
                    DF3D    537 _DACTSTL	=	0xdf3d
                    DF43    538 _IEEE_ADDR0	=	0xdf43
                    DF44    539 _IEEE_ADDR1	=	0xdf44
                    DF45    540 _IEEE_ADDR2	=	0xdf45
                    DF46    541 _IEEE_ADDR3	=	0xdf46
                    DF47    542 _IEEE_ADDR4	=	0xdf47
                    DF48    543 _IEEE_ADDR5	=	0xdf48
                    DF49    544 _IEEE_ADDR6	=	0xdf49
                    DF4A    545 _IEEE_ADDR7	=	0xdf4a
                    DF4B    546 _PANIDH	=	0xdf4b
                    DF4C    547 _PANIDL	=	0xdf4c
                    DF4D    548 _SHORTADDRH	=	0xdf4d
                    DF4E    549 _SHORTADDRL	=	0xdf4e
                    DF4F    550 _IOCFG0	=	0xdf4f
                    DF50    551 _IOCFG1	=	0xdf50
                    DF51    552 _IOCFG2	=	0xdf51
                    DF52    553 _IOCFG3	=	0xdf52
                    DF53    554 _RXFIFOCNT	=	0xdf53
                    DF54    555 _FSMTC1	=	0xdf54
                    DF60    556 _CHVER	=	0xdf60
                    DF61    557 _CHIPID	=	0xdf61
                    DF62    558 _RFSTATUS	=	0xdf62
                    DFC1    559 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    560 _RFD_SHADOW	=	0xdfd9
                    DFF9    561 _U1BUF_SHADOW	=	0xdff9
                    DFBA    562 _ADC_SHADOW	=	0xdfba
                            563 ;--------------------------------------------------------
                            564 ; absolute external ram data
                            565 ;--------------------------------------------------------
                            566 	.area XABS    (ABS,XDATA)
                            567 ;--------------------------------------------------------
                            568 ; external initialized ram data
                            569 ;--------------------------------------------------------
                            570 	.area XISEG   (XDATA)
                            571 	.area HOME    (CODE)
                            572 	.area GSINIT0 (CODE)
                            573 	.area GSINIT1 (CODE)
                            574 	.area GSINIT2 (CODE)
                            575 	.area GSINIT3 (CODE)
                            576 	.area GSINIT4 (CODE)
                            577 	.area GSINIT5 (CODE)
                            578 	.area GSINIT  (CODE)
                            579 	.area GSFINAL (CODE)
                            580 	.area CSEG    (CODE)
                            581 ;--------------------------------------------------------
                            582 ; global & static initialisations
                            583 ;--------------------------------------------------------
                            584 	.area HOME    (CODE)
                            585 	.area GSINIT  (CODE)
                            586 	.area GSFINAL (CODE)
                            587 	.area GSINIT  (CODE)
                            588 ;--------------------------------------------------------
                            589 ; Home
                            590 ;--------------------------------------------------------
                            591 	.area HOME    (CODE)
                            592 	.area HOME    (CODE)
                            593 ;--------------------------------------------------------
                            594 ; code
                            595 ;--------------------------------------------------------
                            596 	.area CSEG    (CODE)
                            597 ;------------------------------------------------------------
                            598 ;Allocation info for local variables in function 'abc_open'
                            599 ;------------------------------------------------------------
                            600 ;channelno                 Allocated to stack - _bp -4
                            601 ;callbacks                 Allocated to stack - _bp -7
                            602 ;c                         Allocated to registers r5 r6 r7 
                            603 ;------------------------------------------------------------
                            604 ;	../../core/net/rime/abc.c:66: abc_open(struct abc_conn *c, uint16_t channelno,
                            605 ;	-----------------------------------------
                            606 ;	 function abc_open
                            607 ;	-----------------------------------------
   0000                     608 _abc_open:
                    0007    609 	ar7 = 0x07
                    0006    610 	ar6 = 0x06
                    0005    611 	ar5 = 0x05
                    0004    612 	ar4 = 0x04
                    0003    613 	ar3 = 0x03
                    0002    614 	ar2 = 0x02
                    0001    615 	ar1 = 0x01
                    0000    616 	ar0 = 0x00
   0000 C0*00               617 	push	_bp
   0002 85 81*00            618 	mov	_bp,sp
   0005 AD 82               619 	mov	r5,dpl
   0007 AE 83               620 	mov	r6,dph
   0009 AF F0               621 	mov	r7,b
                            622 ;	../../core/net/rime/abc.c:69: channel_open(&c->channel, channelno);
   000B C0 07               623 	push	ar7
   000D C0 06               624 	push	ar6
   000F C0 05               625 	push	ar5
   0011 E5*00               626 	mov	a,_bp
   0013 24 FC               627 	add	a,#0xfc
   0015 F8                  628 	mov	r0,a
   0016 E6                  629 	mov	a,@r0
   0017 C0 E0               630 	push	acc
   0019 08                  631 	inc	r0
   001A E6                  632 	mov	a,@r0
   001B C0 E0               633 	push	acc
   001D 8D 82               634 	mov	dpl,r5
   001F 8E 83               635 	mov	dph,r6
   0021 8F F0               636 	mov	b,r7
   0023 12s00r00            637 	lcall	_channel_open
   0026 15 81               638 	dec	sp
   0028 15 81               639 	dec	sp
   002A D0 05               640 	pop	ar5
   002C D0 06               641 	pop	ar6
   002E D0 07               642 	pop	ar7
                            643 ;	../../core/net/rime/abc.c:70: c->u = callbacks;
   0030 74 09               644 	mov	a,#0x09
   0032 2D                  645 	add	a,r5
   0033 FD                  646 	mov	r5,a
   0034 E4                  647 	clr	a
   0035 3E                  648 	addc	a,r6
   0036 FE                  649 	mov	r6,a
   0037 8D 82               650 	mov	dpl,r5
   0039 8E 83               651 	mov	dph,r6
   003B 8F F0               652 	mov	b,r7
   003D E5*00               653 	mov	a,_bp
   003F 24 F9               654 	add	a,#0xf9
   0041 F8                  655 	mov	r0,a
   0042 E6                  656 	mov	a,@r0
   0043 12s00r00            657 	lcall	__gptrput
   0046 A3                  658 	inc	dptr
   0047 08                  659 	inc	r0
   0048 E6                  660 	mov	a,@r0
   0049 12s00r00            661 	lcall	__gptrput
   004C A3                  662 	inc	dptr
   004D 08                  663 	inc	r0
   004E E6                  664 	mov	a,@r0
   004F 12s00r00            665 	lcall	__gptrput
                            666 ;	../../core/net/rime/abc.c:71: channel_set_attributes(channelno, attributes);
   0052 74r00               667 	mov	a,#_attributes
   0054 C0 E0               668 	push	acc
   0056 74s00               669 	mov	a,#(_attributes >> 8)
   0058 C0 E0               670 	push	acc
   005A 74 80               671 	mov	a,#0x80
   005C C0 E0               672 	push	acc
   005E E5*00               673 	mov	a,_bp
   0060 24 FC               674 	add	a,#0xfc
   0062 F8                  675 	mov	r0,a
   0063 86 82               676 	mov	dpl,@r0
   0065 08                  677 	inc	r0
   0066 86 83               678 	mov	dph,@r0
   0068 12s00r00            679 	lcall	_channel_set_attributes
   006B 15 81               680 	dec	sp
   006D 15 81               681 	dec	sp
   006F 15 81               682 	dec	sp
   0071 D0*00               683 	pop	_bp
   0073 22                  684 	ret
                            685 ;------------------------------------------------------------
                            686 ;Allocation info for local variables in function 'abc_close'
                            687 ;------------------------------------------------------------
                            688 ;c                         Allocated to registers r5 r6 r7 
                            689 ;------------------------------------------------------------
                            690 ;	../../core/net/rime/abc.c:75: abc_close(struct abc_conn *c)
                            691 ;	-----------------------------------------
                            692 ;	 function abc_close
                            693 ;	-----------------------------------------
   0074                     694 _abc_close:
                            695 ;	../../core/net/rime/abc.c:77: channel_close(&c->channel);
   0074 02s00r00            696 	ljmp	_channel_close
                            697 ;------------------------------------------------------------
                            698 ;Allocation info for local variables in function 'abc_send'
                            699 ;------------------------------------------------------------
                            700 ;c                         Allocated to registers r5 r6 r7 
                            701 ;------------------------------------------------------------
                            702 ;	../../core/net/rime/abc.c:81: abc_send(struct abc_conn *c)
                            703 ;	-----------------------------------------
                            704 ;	 function abc_send
                            705 ;	-----------------------------------------
   0077                     706 _abc_send:
                            707 ;	../../core/net/rime/abc.c:86: return rime_output(&c->channel);
   0077 02s00r00            708 	ljmp	_rime_output
                            709 ;------------------------------------------------------------
                            710 ;Allocation info for local variables in function 'abc_input'
                            711 ;------------------------------------------------------------
                            712 ;channel                   Allocated to registers r5 r6 r7 
                            713 ;c                         Allocated to registers r5 r6 r7 
                            714 ;------------------------------------------------------------
                            715 ;	../../core/net/rime/abc.c:90: abc_input(struct channel *channel)
                            716 ;	-----------------------------------------
                            717 ;	 function abc_input
                            718 ;	-----------------------------------------
   007A                     719 _abc_input:
   007A AD 82               720 	mov	r5,dpl
   007C AE 83               721 	mov	r6,dph
   007E AF F0               722 	mov	r7,b
                            723 ;	../../core/net/rime/abc.c:92: struct abc_conn *c = (struct abc_conn *)channel;
                            724 ;	../../core/net/rime/abc.c:97: c->u->recv(c);
   0080 74 09               725 	mov	a,#0x09
   0082 2D                  726 	add	a,r5
   0083 FA                  727 	mov	r2,a
   0084 E4                  728 	clr	a
   0085 3E                  729 	addc	a,r6
   0086 FB                  730 	mov	r3,a
   0087 8F 04               731 	mov	ar4,r7
   0089 8A 82               732 	mov	dpl,r2
   008B 8B 83               733 	mov	dph,r3
   008D 8C F0               734 	mov	b,r4
   008F 12s00r00            735 	lcall	__gptrget
   0092 FA                  736 	mov	r2,a
   0093 A3                  737 	inc	dptr
   0094 12s00r00            738 	lcall	__gptrget
   0097 FB                  739 	mov	r3,a
   0098 A3                  740 	inc	dptr
   0099 12s00r00            741 	lcall	__gptrget
   009C FC                  742 	mov	r4,a
   009D 8A 82               743 	mov	dpl,r2
   009F 8B 83               744 	mov	dph,r3
   00A1 8C F0               745 	mov	b,r4
   00A3 12s00r00            746 	lcall	__gptrget
   00A6 FA                  747 	mov	r2,a
   00A7 A3                  748 	inc	dptr
   00A8 12s00r00            749 	lcall	__gptrget
   00AB FB                  750 	mov	r3,a
   00AC C0 03               751 	push	ar3
   00AE C0 02               752 	push	ar2
   00B0 74rC3               753 	mov	a,#00103$
   00B2 C0 E0               754 	push	acc
   00B4 74s00               755 	mov	a,#(00103$ >> 8)
   00B6 C0 E0               756 	push	acc
   00B8 C0 02               757 	push	ar2
   00BA C0 03               758 	push	ar3
   00BC 8D 82               759 	mov	dpl,r5
   00BE 8E 83               760 	mov	dph,r6
   00C0 8F F0               761 	mov	b,r7
   00C2 22                  762 	ret
   00C3                     763 00103$:
   00C3 D0 02               764 	pop	ar2
   00C5 D0 03               765 	pop	ar3
   00C7 22                  766 	ret
                            767 ;------------------------------------------------------------
                            768 ;Allocation info for local variables in function 'abc_sent'
                            769 ;------------------------------------------------------------
                            770 ;status                    Allocated to stack - _bp -4
                            771 ;num_tx                    Allocated to stack - _bp -6
                            772 ;channel                   Allocated to registers r5 r6 r7 
                            773 ;c                         Allocated to registers r5 r6 r7 
                            774 ;------------------------------------------------------------
                            775 ;	../../core/net/rime/abc.c:101: abc_sent(struct channel *channel, int status, int num_tx)
                            776 ;	-----------------------------------------
                            777 ;	 function abc_sent
                            778 ;	-----------------------------------------
   00C8                     779 _abc_sent:
   00C8 C0*00               780 	push	_bp
   00CA 85 81*00            781 	mov	_bp,sp
   00CD AD 82               782 	mov	r5,dpl
   00CF AE 83               783 	mov	r6,dph
   00D1 AF F0               784 	mov	r7,b
                            785 ;	../../core/net/rime/abc.c:103: struct abc_conn *c = (struct abc_conn *)channel;
                            786 ;	../../core/net/rime/abc.c:108: if(c->u->sent) {
   00D3 74 09               787 	mov	a,#0x09
   00D5 2D                  788 	add	a,r5
   00D6 FA                  789 	mov	r2,a
   00D7 E4                  790 	clr	a
   00D8 3E                  791 	addc	a,r6
   00D9 FB                  792 	mov	r3,a
   00DA 8F 04               793 	mov	ar4,r7
   00DC 8A 82               794 	mov	dpl,r2
   00DE 8B 83               795 	mov	dph,r3
   00E0 8C F0               796 	mov	b,r4
   00E2 12s00r00            797 	lcall	__gptrget
   00E5 FA                  798 	mov	r2,a
   00E6 A3                  799 	inc	dptr
   00E7 12s00r00            800 	lcall	__gptrget
   00EA FB                  801 	mov	r3,a
   00EB A3                  802 	inc	dptr
   00EC 12s00r00            803 	lcall	__gptrget
   00EF FC                  804 	mov	r4,a
   00F0 74 02               805 	mov	a,#0x02
   00F2 2A                  806 	add	a,r2
   00F3 FA                  807 	mov	r2,a
   00F4 E4                  808 	clr	a
   00F5 3B                  809 	addc	a,r3
   00F6 FB                  810 	mov	r3,a
   00F7 8A 82               811 	mov	dpl,r2
   00F9 8B 83               812 	mov	dph,r3
   00FB 8C F0               813 	mov	b,r4
   00FD 12s00r00            814 	lcall	__gptrget
   0100 FB                  815 	mov	r3,a
   0101 A3                  816 	inc	dptr
   0102 12s00r00            817 	lcall	__gptrget
   0105 FC                  818 	mov	r4,a
   0106 4B                  819 	orl	a,r3
   0107 60 39               820 	jz	00103$
                            821 ;	../../core/net/rime/abc.c:109: c->u->sent(c, status, num_tx);
   0109 C0 04               822 	push	ar4
   010B C0 03               823 	push	ar3
   010D E5*00               824 	mov	a,_bp
   010F 24 FA               825 	add	a,#0xfa
   0111 F8                  826 	mov	r0,a
   0112 E6                  827 	mov	a,@r0
   0113 C0 E0               828 	push	acc
   0115 08                  829 	inc	r0
   0116 E6                  830 	mov	a,@r0
   0117 C0 E0               831 	push	acc
   0119 E5*00               832 	mov	a,_bp
   011B 24 FC               833 	add	a,#0xfc
   011D F8                  834 	mov	r0,a
   011E E6                  835 	mov	a,@r0
   011F C0 E0               836 	push	acc
   0121 08                  837 	inc	r0
   0122 E6                  838 	mov	a,@r0
   0123 C0 E0               839 	push	acc
   0125 74r38               840 	mov	a,#00108$
   0127 C0 E0               841 	push	acc
   0129 74s01               842 	mov	a,#(00108$ >> 8)
   012B C0 E0               843 	push	acc
   012D C0 03               844 	push	ar3
   012F C0 04               845 	push	ar4
   0131 8D 82               846 	mov	dpl,r5
   0133 8E 83               847 	mov	dph,r6
   0135 8F F0               848 	mov	b,r7
   0137 22                  849 	ret
   0138                     850 00108$:
   0138 E5 81               851 	mov	a,sp
   013A 24 FC               852 	add	a,#0xfc
   013C F5 81               853 	mov	sp,a
   013E D0 03               854 	pop	ar3
   0140 D0 04               855 	pop	ar4
   0142                     856 00103$:
   0142 D0*00               857 	pop	_bp
   0144 22                  858 	ret
                            859 	.area CSEG    (CODE)
                            860 	.area CONST   (CODE)
   0000                     861 _attributes:
   0000 00                  862 	.db #0x00	; 0
   0001 00                  863 	.db #0x00	; 0
                            864 	.area XINIT   (CODE)
                            865 	.area CABS    (ABS,CODE)
