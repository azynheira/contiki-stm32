                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:25 2013
                              5 ;--------------------------------------------------------
                              6 	.module ifft
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ifft
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'bitrev'
                             93 ;------------------------------------------------------------
                             94 ;nu                        Allocated to stack - _bp -4
                             95 ;j                         Allocated to stack - _bp +1
                             96 ;k                         Allocated to registers r7 r6 
                             97 ;sloc0                     Allocated to stack - _bp +5
                             98 ;------------------------------------------------------------
                             99 ;	../../core/lib/ifft.c:62: static uint16_t bitrev(uint16_t j, uint16_t nu)
                            100 ;	-----------------------------------------
                            101 ;	 function bitrev
                            102 ;	-----------------------------------------
   0000                     103 _bitrev:
                    0007    104 	ar7 = 0x07
                    0006    105 	ar6 = 0x06
                    0005    106 	ar5 = 0x05
                    0004    107 	ar4 = 0x04
                    0003    108 	ar3 = 0x03
                    0002    109 	ar2 = 0x02
                    0001    110 	ar1 = 0x01
                    0000    111 	ar0 = 0x00
   0000 C0*00               112 	push	_bp
   0002 85 81*00            113 	mov	_bp,sp
   0005 C0 82               114 	push	dpl
   0007 C0 83               115 	push	dph
                            116 ;	../../core/lib/ifft.c:65: k = 0;
   0009 E4                  117 	clr	a
   000A FF                  118 	mov	r7,a
   000B FE                  119 	mov	r6,a
   000C E5*00               120 	mov	a,_bp
   000E 24 FC               121 	add	a,#0xfc
   0010 F8                  122 	mov	r0,a
   0011 86 02               123 	mov	ar2,@r0
   0013 08                  124 	inc	r0
   0014 86 03               125 	mov	ar3,@r0
   0016                     126 00101$:
                            127 ;	../../core/lib/ifft.c:66: for (; nu > 0; nu--) {
   0016 EA                  128 	mov	a,r2
   0017 4B                  129 	orl	a,r3
   0018 60 02               130 	jz	00107$
   001A 74 01               131 	mov	a,#0x01
   001C                     132 00107$:
   001C FD                  133 	mov	r5,a
   001D ED                  134 	mov	a,r5
   001E 60 2E               135 	jz	00104$
                            136 ;	../../core/lib/ifft.c:67: k  = (k << 1) + (j & 1);
   0020 8F 04               137 	mov	ar4,r7
   0022 EE                  138 	mov	a,r6
   0023 CC                  139 	xch	a,r4
   0024 25 E0               140 	add	a,acc
   0026 CC                  141 	xch	a,r4
   0027 33                  142 	rlc	a
   0028 FD                  143 	mov	r5,a
   0029 A8*00               144 	mov	r0,_bp
   002B 08                  145 	inc	r0
   002C 74 01               146 	mov	a,#0x01
   002E 56                  147 	anl	a,@r0
   002F 7F 00               148 	mov	r7,#0x00
   0031 2C                  149 	add	a,r4
   0032 FC                  150 	mov	r4,a
   0033 EF                  151 	mov	a,r7
   0034 3D                  152 	addc	a,r5
   0035 FD                  153 	mov	r5,a
   0036 8C 07               154 	mov	ar7,r4
   0038 8D 06               155 	mov	ar6,r5
                            156 ;	../../core/lib/ifft.c:68: j = j >> 1;
   003A A8*00               157 	mov	r0,_bp
   003C 08                  158 	inc	r0
   003D 08                  159 	inc	r0
   003E E6                  160 	mov	a,@r0
   003F 18                  161 	dec	r0
   0040 C3                  162 	clr	c
   0041 13                  163 	rrc	a
   0042 C6                  164 	xch	a,@r0
   0043 13                  165 	rrc	a
   0044 C6                  166 	xch	a,@r0
   0045 08                  167 	inc	r0
   0046 F6                  168 	mov	@r0,a
                            169 ;	../../core/lib/ifft.c:66: for (; nu > 0; nu--) {
   0047 1A                  170 	dec	r2
   0048 BA FF 01            171 	cjne	r2,#0xFF,00118$
   004B 1B                  172 	dec	r3
   004C                     173 00118$:
   004C 80 C8               174 	sjmp	00101$
   004E                     175 00104$:
                            176 ;	../../core/lib/ifft.c:70: return k;
   004E 8F 82               177 	mov	dpl,r7
   0050 8E 83               178 	mov	dph,r6
   0052 85*00 81            179 	mov	sp,_bp
   0055 D0*00               180 	pop	_bp
   0057 22                  181 	ret
                            182 ;------------------------------------------------------------
                            183 ;Allocation info for local variables in function 'sinI'
                            184 ;------------------------------------------------------------
                            185 ;angleMilli                Allocated to registers r6 r7 
                            186 ;pos                       Allocated to registers r4 r5 
                            187 ;------------------------------------------------------------
                            188 ;	../../core/lib/ifft.c:75: static int16_t sinI(uint16_t angleMilli)
                            189 ;	-----------------------------------------
                            190 ;	 function sinI
                            191 ;	-----------------------------------------
   0058                     192 _sinI:
   0058 AE 82               193 	mov	r6,dpl
   005A AF 83               194 	mov	r7,dph
                            195 ;	../../core/lib/ifft.c:78: pos = (uint16_t) ((SIN_TAB_LEN * (uint32_t) angleMilli) / 1000);
   005C 7D 00               196 	mov	r5,#0x00
   005E 7C 00               197 	mov	r4,#0x00
   0060 C0 06               198 	push	ar6
   0062 C0 07               199 	push	ar7
   0064 C0 05               200 	push	ar5
   0066 C0 04               201 	push	ar4
   0068 90 00 78            202 	mov	dptr,#(0x78&0x00ff)
   006B E4                  203 	clr	a
   006C F5 F0               204 	mov	b,a
   006E 12s00r00            205 	lcall	__mullong
   0071 AC 82               206 	mov	r4,dpl
   0073 AD 83               207 	mov	r5,dph
   0075 AE F0               208 	mov	r6,b
   0077 FF                  209 	mov	r7,a
   0078 E5 81               210 	mov	a,sp
   007A 24 FC               211 	add	a,#0xfc
   007C F5 81               212 	mov	sp,a
   007E 74 E8               213 	mov	a,#0xE8
   0080 C0 E0               214 	push	acc
   0082 74 03               215 	mov	a,#0x03
   0084 C0 E0               216 	push	acc
   0086 E4                  217 	clr	a
   0087 C0 E0               218 	push	acc
   0089 C0 E0               219 	push	acc
   008B 8C 82               220 	mov	dpl,r4
   008D 8D 83               221 	mov	dph,r5
   008F 8E F0               222 	mov	b,r6
   0091 EF                  223 	mov	a,r7
   0092 12s00r00            224 	lcall	__divulong
   0095 AC 82               225 	mov	r4,dpl
   0097 AD 83               226 	mov	r5,dph
   0099 E5 81               227 	mov	a,sp
   009B 24 FC               228 	add	a,#0xfc
   009D F5 81               229 	mov	sp,a
                            230 ;	../../core/lib/ifft.c:79: return SIN_TAB[pos % SIN_TAB_LEN];
   009F 74 78               231 	mov	a,#0x78
   00A1 C0 E0               232 	push	acc
   00A3 E4                  233 	clr	a
   00A4 C0 E0               234 	push	acc
   00A6 8C 82               235 	mov	dpl,r4
   00A8 8D 83               236 	mov	dph,r5
   00AA 12s00r00            237 	lcall	__moduint
   00AD AE 82               238 	mov	r6,dpl
   00AF AF 83               239 	mov	r7,dph
   00B1 15 81               240 	dec	sp
   00B3 15 81               241 	dec	sp
   00B5 EE                  242 	mov	a,r6
   00B6 24r00               243 	add	a,#_SIN_TAB
   00B8 F5 82               244 	mov	dpl,a
   00BA EF                  245 	mov	a,r7
   00BB 34s00               246 	addc	a,#(_SIN_TAB >> 8)
   00BD F5 83               247 	mov	dph,a
   00BF E4                  248 	clr	a
   00C0 93                  249 	movc	a,@a+dptr
   00C1 FF                  250 	mov	r7,a
   00C2 33                  251 	rlc	a
   00C3 95 E0               252 	subb	a,acc
   00C5 8F 82               253 	mov	dpl,r7
   00C7 F5 83               254 	mov	dph,a
   00C9 22                  255 	ret
                            256 ;------------------------------------------------------------
                            257 ;Allocation info for local variables in function 'cosI'
                            258 ;------------------------------------------------------------
                            259 ;angleMilli                Allocated to registers r6 r7 
                            260 ;------------------------------------------------------------
                            261 ;	../../core/lib/ifft.c:82: static int16_t cosI(uint16_t angleMilli)
                            262 ;	-----------------------------------------
                            263 ;	 function cosI
                            264 ;	-----------------------------------------
   00CA                     265 _cosI:
   00CA AE 82               266 	mov	r6,dpl
   00CC AF 83               267 	mov	r7,dph
                            268 ;	../../core/lib/ifft.c:84: return sinI(angleMilli + 250);
   00CE 74 FA               269 	mov	a,#0xFA
   00D0 2E                  270 	add	a,r6
   00D1 FE                  271 	mov	r6,a
   00D2 E4                  272 	clr	a
   00D3 3F                  273 	addc	a,r7
   00D4 FF                  274 	mov	r7,a
   00D5 8E 82               275 	mov	dpl,r6
   00D7 8F 83               276 	mov	dph,r7
   00D9 02s00r58            277 	ljmp	_sinI
                            278 ;------------------------------------------------------------
                            279 ;Allocation info for local variables in function 'ilog2'
                            280 ;------------------------------------------------------------
                            281 ;val                       Allocated to registers r6 r7 
                            282 ;log                       Allocated to registers r4 r5 
                            283 ;------------------------------------------------------------
                            284 ;	../../core/lib/ifft.c:87: static uint16_t ilog2(uint16_t val)
                            285 ;	-----------------------------------------
                            286 ;	 function ilog2
                            287 ;	-----------------------------------------
   00DC                     288 _ilog2:
   00DC AE 82               289 	mov	r6,dpl
                            290 ;	../../core/lib/ifft.c:91: val = val >> 1; /* The 20 = 1 => log = 0 => val = 0 */
   00DE E5 83               291 	mov	a,dph
   00E0 C3                  292 	clr	c
   00E1 13                  293 	rrc	a
   00E2 CE                  294 	xch	a,r6
   00E3 13                  295 	rrc	a
   00E4 CE                  296 	xch	a,r6
   00E5 FF                  297 	mov	r7,a
                            298 ;	../../core/lib/ifft.c:92: while (val > 0) {
   00E6 7C 00               299 	mov	r4,#0x00
   00E8 7D 00               300 	mov	r5,#0x00
   00EA                     301 00101$:
   00EA EE                  302 	mov	a,r6
   00EB 4F                  303 	orl	a,r7
   00EC 60 0E               304 	jz	00103$
                            305 ;	../../core/lib/ifft.c:93: val = val >> 1;
   00EE EF                  306 	mov	a,r7
   00EF C3                  307 	clr	c
   00F0 13                  308 	rrc	a
   00F1 CE                  309 	xch	a,r6
   00F2 13                  310 	rrc	a
   00F3 CE                  311 	xch	a,r6
   00F4 FF                  312 	mov	r7,a
                            313 ;	../../core/lib/ifft.c:94: log++;
   00F5 0C                  314 	inc	r4
   00F6 BC 00 F1            315 	cjne	r4,#0x00,00101$
   00F9 0D                  316 	inc	r5
   00FA 80 EE               317 	sjmp	00101$
   00FC                     318 00103$:
                            319 ;	../../core/lib/ifft.c:96: return log;
   00FC 8C 82               320 	mov	dpl,r4
   00FE 8D 83               321 	mov	dph,r5
   0100 22                  322 	ret
                            323 ;------------------------------------------------------------
                            324 ;Allocation info for local variables in function 'ifft'
                            325 ;------------------------------------------------------------
                            326 ;xim                       Allocated to stack - _bp -5
                            327 ;n                         Allocated to stack - _bp -7
                            328 ;xre                       Allocated to stack - _bp +1
                            329 ;nu                        Allocated to stack - _bp +4
                            330 ;n2                        Allocated to stack - _bp +6
                            331 ;nu1                       Allocated to registers r7 r5 
                            332 ;p                         Allocated to stack - _bp +8
                            333 ;k                         Allocated to registers r3 r7 
                            334 ;l                         Allocated to stack - _bp +10
                            335 ;i                         Allocated to stack - _bp +12
                            336 ;c                         Allocated to registers r7 r4 r3 r2 
                            337 ;s                         Allocated to stack - _bp +14
                            338 ;tr                        Allocated to stack - _bp +18
                            339 ;ti                        Allocated to registers r7 r4 r3 r2 
                            340 ;sloc0                     Allocated to stack - _bp +22
                            341 ;sloc1                     Allocated to stack - _bp +24
                            342 ;sloc2                     Allocated to stack - _bp +26
                            343 ;sloc3                     Allocated to stack - _bp +28
                            344 ;sloc4                     Allocated to stack - _bp +30
                            345 ;sloc5                     Allocated to stack - _bp +33
                            346 ;sloc6                     Allocated to stack - _bp +37
                            347 ;sloc7                     Allocated to stack - _bp +41
                            348 ;sloc8                     Allocated to stack - _bp +44
                            349 ;sloc9                     Allocated to stack - _bp +48
                            350 ;sloc10                    Allocated to stack - _bp +52
                            351 ;------------------------------------------------------------
                            352 ;	../../core/lib/ifft.c:114: ifft(int16_t xre[], int16_t xim[], uint16_t n)
                            353 ;	-----------------------------------------
                            354 ;	 function ifft
                            355 ;	-----------------------------------------
   0101                     356 _ifft:
   0101 C0*00               357 	push	_bp
   0103 85 81*00            358 	mov	_bp,sp
   0106 C0 82               359 	push	dpl
   0108 C0 83               360 	push	dph
   010A C0 F0               361 	push	b
   010C E5 81               362 	mov	a,sp
   010E 24 34               363 	add	a,#0x34
   0110 F5 81               364 	mov	sp,a
                            365 ;	../../core/lib/ifft.c:122: nu = ilog2(n);
   0112 E5*00               366 	mov	a,_bp
   0114 24 F9               367 	add	a,#0xf9
   0116 F8                  368 	mov	r0,a
   0117 86 82               369 	mov	dpl,@r0
   0119 08                  370 	inc	r0
   011A 86 83               371 	mov	dph,@r0
   011C 12s00rDC            372 	lcall	_ilog2
   011F AB 82               373 	mov	r3,dpl
   0121 AC 83               374 	mov	r4,dph
   0123 E5*00               375 	mov	a,_bp
   0125 24 04               376 	add	a,#0x04
   0127 F8                  377 	mov	r0,a
   0128 A6 03               378 	mov	@r0,ar3
   012A 08                  379 	inc	r0
   012B A6 04               380 	mov	@r0,ar4
                            381 ;	../../core/lib/ifft.c:123: nu1 = nu - 1;
   012D E5*00               382 	mov	a,_bp
   012F 24 04               383 	add	a,#0x04
   0131 F8                  384 	mov	r0,a
   0132 E6                  385 	mov	a,@r0
   0133 24 FF               386 	add	a,#0xFF
   0135 FF                  387 	mov	r7,a
   0136 08                  388 	inc	r0
   0137 E6                  389 	mov	a,@r0
   0138 34 FF               390 	addc	a,#0xFF
   013A FD                  391 	mov	r5,a
                            392 ;	../../core/lib/ifft.c:124: n2 = n / 2;
   013B E5*00               393 	mov	a,_bp
   013D 24 F9               394 	add	a,#0xf9
   013F F8                  395 	mov	r0,a
   0140 E5*00               396 	mov	a,_bp
   0142 24 18               397 	add	a,#0x18
   0144 F9                  398 	mov	r1,a
   0145 E6                  399 	mov	a,@r0
   0146 F7                  400 	mov	@r1,a
   0147 08                  401 	inc	r0
   0148 E6                  402 	mov	a,@r0
   0149 C3                  403 	clr	c
   014A 13                  404 	rrc	a
   014B C7                  405 	xch	a,@r1
   014C 13                  406 	rrc	a
   014D C7                  407 	xch	a,@r1
   014E 09                  408 	inc	r1
   014F F7                  409 	mov	@r1,a
   0150 E5*00               410 	mov	a,_bp
   0152 24 18               411 	add	a,#0x18
   0154 F8                  412 	mov	r0,a
   0155 E5*00               413 	mov	a,_bp
   0157 24 06               414 	add	a,#0x06
   0159 F9                  415 	mov	r1,a
   015A E6                  416 	mov	a,@r0
   015B F7                  417 	mov	@r1,a
   015C 08                  418 	inc	r0
   015D 09                  419 	inc	r1
   015E E6                  420 	mov	a,@r0
   015F F7                  421 	mov	@r1,a
                            422 ;	../../core/lib/ifft.c:126: for (i = 0; i < n; i++)
   0160 E5*00               423 	mov	a,_bp
   0162 24 0C               424 	add	a,#0x0c
   0164 F8                  425 	mov	r0,a
   0165 E4                  426 	clr	a
   0166 F6                  427 	mov	@r0,a
   0167 08                  428 	inc	r0
   0168 F6                  429 	mov	@r0,a
   0169                     430 00103$:
   0169 E5*00               431 	mov	a,_bp
   016B 24 0C               432 	add	a,#0x0c
   016D F8                  433 	mov	r0,a
   016E 86 02               434 	mov	ar2,@r0
   0170 08                  435 	inc	r0
   0171 86 04               436 	mov	ar4,@r0
   0173 E5*00               437 	mov	a,_bp
   0175 24 F9               438 	add	a,#0xf9
   0177 F8                  439 	mov	r0,a
   0178 C3                  440 	clr	c
   0179 EA                  441 	mov	a,r2
   017A 96                  442 	subb	a,@r0
   017B EC                  443 	mov	a,r4
   017C 08                  444 	inc	r0
   017D 96                  445 	subb	a,@r0
   017E 50 3A               446 	jnc	00106$
                            447 ;	../../core/lib/ifft.c:127: xim[i] = 0;
   0180 E5*00               448 	mov	a,_bp
   0182 24 0C               449 	add	a,#0x0c
   0184 F8                  450 	mov	r0,a
   0185 86 02               451 	mov	ar2,@r0
   0187 08                  452 	inc	r0
   0188 E6                  453 	mov	a,@r0
   0189 CA                  454 	xch	a,r2
   018A 25 E0               455 	add	a,acc
   018C CA                  456 	xch	a,r2
   018D 33                  457 	rlc	a
   018E FC                  458 	mov	r4,a
   018F E5*00               459 	mov	a,_bp
   0191 24 FB               460 	add	a,#0xfb
   0193 F8                  461 	mov	r0,a
   0194 EA                  462 	mov	a,r2
   0195 26                  463 	add	a,@r0
   0196 FA                  464 	mov	r2,a
   0197 EC                  465 	mov	a,r4
   0198 08                  466 	inc	r0
   0199 36                  467 	addc	a,@r0
   019A FC                  468 	mov	r4,a
   019B 08                  469 	inc	r0
   019C 86 06               470 	mov	ar6,@r0
   019E 8A 82               471 	mov	dpl,r2
   01A0 8C 83               472 	mov	dph,r4
   01A2 8E F0               473 	mov	b,r6
   01A4 E4                  474 	clr	a
   01A5 12s00r00            475 	lcall	__gptrput
   01A8 A3                  476 	inc	dptr
   01A9 E4                  477 	clr	a
   01AA 12s00r00            478 	lcall	__gptrput
                            479 ;	../../core/lib/ifft.c:126: for (i = 0; i < n; i++)
   01AD E5*00               480 	mov	a,_bp
   01AF 24 0C               481 	add	a,#0x0c
   01B1 F8                  482 	mov	r0,a
   01B2 06                  483 	inc	@r0
   01B3 B6 00 02            484 	cjne	@r0,#0x00,00169$
   01B6 08                  485 	inc	r0
   01B7 06                  486 	inc	@r0
   01B8                     487 00169$:
   01B8 80 AF               488 	sjmp	00103$
   01BA                     489 00106$:
                            490 ;	../../core/lib/ifft.c:129: for (l = 1; l <= nu; l++) {
   01BA E5*00               491 	mov	a,_bp
   01BC 24 1A               492 	add	a,#0x1a
   01BE F8                  493 	mov	r0,a
   01BF A6 07               494 	mov	@r0,ar7
   01C1 08                  495 	inc	r0
   01C2 A6 05               496 	mov	@r0,ar5
   01C4 E5*00               497 	mov	a,_bp
   01C6 24 0A               498 	add	a,#0x0a
   01C8 F8                  499 	mov	r0,a
   01C9 76 01               500 	mov	@r0,#0x01
   01CB 08                  501 	inc	r0
   01CC 76 00               502 	mov	@r0,#0x00
   01CE                     503 00115$:
   01CE E5*00               504 	mov	a,_bp
   01D0 24 0A               505 	add	a,#0x0a
   01D2 F8                  506 	mov	r0,a
   01D3 86 02               507 	mov	ar2,@r0
   01D5 08                  508 	inc	r0
   01D6 86 04               509 	mov	ar4,@r0
   01D8 E5*00               510 	mov	a,_bp
   01DA 24 04               511 	add	a,#0x04
   01DC F8                  512 	mov	r0,a
   01DD C3                  513 	clr	c
   01DE E6                  514 	mov	a,@r0
   01DF 9A                  515 	subb	a,r2
   01E0 08                  516 	inc	r0
   01E1 E6                  517 	mov	a,@r0
   01E2 9C                  518 	subb	a,r4
   01E3 50 03               519 	jnc	00170$
   01E5 02s07r7E            520 	ljmp	00118$
   01E8                     521 00170$:
                            522 ;	../../core/lib/ifft.c:130: for (k = 0; k < n; k += n2) {
   01E8 7B 00               523 	mov	r3,#0x00
   01EA 7F 00               524 	mov	r7,#0x00
   01EC                     525 00111$:
   01EC 8B 02               526 	mov	ar2,r3
   01EE 8F 04               527 	mov	ar4,r7
   01F0 E5*00               528 	mov	a,_bp
   01F2 24 F9               529 	add	a,#0xf9
   01F4 F8                  530 	mov	r0,a
   01F5 C3                  531 	clr	c
   01F6 EA                  532 	mov	a,r2
   01F7 96                  533 	subb	a,@r0
   01F8 EC                  534 	mov	a,r4
   01F9 08                  535 	inc	r0
   01FA 96                  536 	subb	a,@r0
   01FB 40 03               537 	jc	00171$
   01FD 02s07r56            538 	ljmp	00114$
   0200                     539 00171$:
                            540 ;	../../core/lib/ifft.c:131: for (i = 1; i <= n2; i++) {
   0200 E5*00               541 	mov	a,_bp
   0202 24 16               542 	add	a,#0x16
   0204 F8                  543 	mov	r0,a
   0205 A6 03               544 	mov	@r0,ar3
   0207 08                  545 	inc	r0
   0208 A6 07               546 	mov	@r0,ar7
   020A E5*00               547 	mov	a,_bp
   020C 24 0C               548 	add	a,#0x0c
   020E F8                  549 	mov	r0,a
   020F 76 01               550 	mov	@r0,#0x01
   0211 08                  551 	inc	r0
   0212 76 00               552 	mov	@r0,#0x00
   0214                     553 00107$:
   0214 E5*00               554 	mov	a,_bp
   0216 24 0C               555 	add	a,#0x0c
   0218 F8                  556 	mov	r0,a
   0219 86 05               557 	mov	ar5,@r0
   021B 08                  558 	inc	r0
   021C 86 06               559 	mov	ar6,@r0
   021E E5*00               560 	mov	a,_bp
   0220 24 06               561 	add	a,#0x06
   0222 F8                  562 	mov	r0,a
   0223 C3                  563 	clr	c
   0224 E6                  564 	mov	a,@r0
   0225 9D                  565 	subb	a,r5
   0226 08                  566 	inc	r0
   0227 E6                  567 	mov	a,@r0
   0228 9E                  568 	subb	a,r6
   0229 50 03               569 	jnc	00172$
   022B 02s07r39            570 	ljmp	00113$
   022E                     571 00172$:
                            572 ;	../../core/lib/ifft.c:132: p = bitrev(k >> nu1, nu);
   022E E5*00               573 	mov	a,_bp
   0230 24 1A               574 	add	a,#0x1a
   0232 F8                  575 	mov	r0,a
   0233 86 F0               576 	mov	b,@r0
   0235 05 F0               577 	inc	b
   0237 E5*00               578 	mov	a,_bp
   0239 24 16               579 	add	a,#0x16
   023B F8                  580 	mov	r0,a
   023C 86 02               581 	mov	ar2,@r0
   023E 08                  582 	inc	r0
   023F 86 04               583 	mov	ar4,@r0
   0241 E6                  584 	mov	a,@r0
   0242 33                  585 	rlc	a
   0243 92 D2               586 	mov	ov,c
   0245 80 08               587 	sjmp	00174$
   0247                     588 00173$:
   0247 A2 D2               589 	mov	c,ov
   0249 EC                  590 	mov	a,r4
   024A 13                  591 	rrc	a
   024B FC                  592 	mov	r4,a
   024C EA                  593 	mov	a,r2
   024D 13                  594 	rrc	a
   024E FA                  595 	mov	r2,a
   024F                     596 00174$:
   024F D5 F0 F5            597 	djnz	b,00173$
   0252 E5*00               598 	mov	a,_bp
   0254 24 04               599 	add	a,#0x04
   0256 F8                  600 	mov	r0,a
   0257 E6                  601 	mov	a,@r0
   0258 C0 E0               602 	push	acc
   025A 08                  603 	inc	r0
   025B E6                  604 	mov	a,@r0
   025C C0 E0               605 	push	acc
   025E 8A 82               606 	mov	dpl,r2
   0260 8C 83               607 	mov	dph,r4
   0262 12s00r00            608 	lcall	_bitrev
   0265 AA 82               609 	mov	r2,dpl
   0267 AC 83               610 	mov	r4,dph
   0269 15 81               611 	dec	sp
   026B 15 81               612 	dec	sp
   026D E5*00               613 	mov	a,_bp
   026F 24 08               614 	add	a,#0x08
   0271 F8                  615 	mov	r0,a
   0272 A6 02               616 	mov	@r0,ar2
   0274 08                  617 	inc	r0
   0275 A6 04               618 	mov	@r0,ar4
                            619 ;	../../core/lib/ifft.c:133: c = cosI((1000 * p) / n);
   0277 E5*00               620 	mov	a,_bp
   0279 24 08               621 	add	a,#0x08
   027B F8                  622 	mov	r0,a
   027C E6                  623 	mov	a,@r0
   027D C0 E0               624 	push	acc
   027F 08                  625 	inc	r0
   0280 E6                  626 	mov	a,@r0
   0281 C0 E0               627 	push	acc
   0283 90 03 E8            628 	mov	dptr,#0x03E8
   0286 12s00r00            629 	lcall	__mulint
   0289 AD 82               630 	mov	r5,dpl
   028B AE 83               631 	mov	r6,dph
   028D 15 81               632 	dec	sp
   028F 15 81               633 	dec	sp
   0291 E5*00               634 	mov	a,_bp
   0293 24 F9               635 	add	a,#0xf9
   0295 F8                  636 	mov	r0,a
   0296 E6                  637 	mov	a,@r0
   0297 C0 E0               638 	push	acc
   0299 08                  639 	inc	r0
   029A E6                  640 	mov	a,@r0
   029B C0 E0               641 	push	acc
   029D 8D 82               642 	mov	dpl,r5
   029F 8E 83               643 	mov	dph,r6
   02A1 12s00r00            644 	lcall	__divuint
   02A4 C8                  645 	xch	a,r0
   02A5 E5*00               646 	mov	a,_bp
   02A7 24 1C               647 	add	a,#0x1c
   02A9 C8                  648 	xch	a,r0
   02AA A6 82               649 	mov	@r0,dpl
   02AC 08                  650 	inc	r0
   02AD A6 83               651 	mov	@r0,dph
   02AF 15 81               652 	dec	sp
   02B1 15 81               653 	dec	sp
   02B3 E5*00               654 	mov	a,_bp
   02B5 24 1C               655 	add	a,#0x1c
   02B7 F8                  656 	mov	r0,a
   02B8 86 82               657 	mov	dpl,@r0
   02BA 08                  658 	inc	r0
   02BB 86 83               659 	mov	dph,@r0
   02BD 12s00rCA            660 	lcall	_cosI
   02C0 AD 82               661 	mov	r5,dpl
   02C2 AE 83               662 	mov	r6,dph
   02C4 8D 07               663 	mov	ar7,r5
   02C6 EE                  664 	mov	a,r6
   02C7 FC                  665 	mov	r4,a
   02C8 33                  666 	rlc	a
   02C9 95 E0               667 	subb	a,acc
   02CB FB                  668 	mov	r3,a
   02CC FA                  669 	mov	r2,a
                            670 ;	../../core/lib/ifft.c:134: s = sinI((1000 * p) / n);
   02CD E5*00               671 	mov	a,_bp
   02CF 24 1C               672 	add	a,#0x1c
   02D1 F8                  673 	mov	r0,a
   02D2 86 82               674 	mov	dpl,@r0
   02D4 08                  675 	inc	r0
   02D5 86 83               676 	mov	dph,@r0
   02D7 C0 07               677 	push	ar7
   02D9 C0 04               678 	push	ar4
   02DB C0 03               679 	push	ar3
   02DD C0 02               680 	push	ar2
   02DF 12s00r58            681 	lcall	_sinI
   02E2 AD 82               682 	mov	r5,dpl
   02E4 AE 83               683 	mov	r6,dph
   02E6 D0 02               684 	pop	ar2
   02E8 D0 03               685 	pop	ar3
   02EA D0 04               686 	pop	ar4
   02EC D0 07               687 	pop	ar7
   02EE E5*00               688 	mov	a,_bp
   02F0 24 0E               689 	add	a,#0x0e
   02F2 F8                  690 	mov	r0,a
   02F3 A6 05               691 	mov	@r0,ar5
   02F5 08                  692 	inc	r0
   02F6 A6 06               693 	mov	@r0,ar6
   02F8 EE                  694 	mov	a,r6
   02F9 33                  695 	rlc	a
   02FA 95 E0               696 	subb	a,acc
   02FC 08                  697 	inc	r0
   02FD F6                  698 	mov	@r0,a
   02FE 08                  699 	inc	r0
   02FF F6                  700 	mov	@r0,a
                            701 ;	../../core/lib/ifft.c:136: tr = ((xre[k + n2] * c + xim[k + n2] * s) >> RESOLUTION);
   0300 E5*00               702 	mov	a,_bp
   0302 24 16               703 	add	a,#0x16
   0304 F8                  704 	mov	r0,a
   0305 86 05               705 	mov	ar5,@r0
   0307 08                  706 	inc	r0
   0308 86 06               707 	mov	ar6,@r0
   030A E5*00               708 	mov	a,_bp
   030C 24 06               709 	add	a,#0x06
   030E F8                  710 	mov	r0,a
   030F E6                  711 	mov	a,@r0
   0310 2D                  712 	add	a,r5
   0311 FD                  713 	mov	r5,a
   0312 08                  714 	inc	r0
   0313 E6                  715 	mov	a,@r0
   0314 3E                  716 	addc	a,r6
   0315 FE                  717 	mov	r6,a
   0316 E5*00               718 	mov	a,_bp
   0318 24 1C               719 	add	a,#0x1c
   031A F8                  720 	mov	r0,a
   031B A6 05               721 	mov	@r0,ar5
   031D EE                  722 	mov	a,r6
   031E C6                  723 	xch	a,@r0
   031F 25 E0               724 	add	a,acc
   0321 C6                  725 	xch	a,@r0
   0322 33                  726 	rlc	a
   0323 08                  727 	inc	r0
   0324 F6                  728 	mov	@r0,a
   0325 A8*00               729 	mov	r0,_bp
   0327 08                  730 	inc	r0
   0328 E5*00               731 	mov	a,_bp
   032A 24 1C               732 	add	a,#0x1c
   032C F9                  733 	mov	r1,a
   032D E7                  734 	mov	a,@r1
   032E 26                  735 	add	a,@r0
   032F C0 E0               736 	push	acc
   0331 09                  737 	inc	r1
   0332 E7                  738 	mov	a,@r1
   0333 08                  739 	inc	r0
   0334 36                  740 	addc	a,@r0
   0335 C0 E0               741 	push	acc
   0337 08                  742 	inc	r0
   0338 E6                  743 	mov	a,@r0
   0339 C0 E0               744 	push	acc
   033B E5*00               745 	mov	a,_bp
   033D 24 20               746 	add	a,#0x20
   033F F8                  747 	mov	r0,a
   0340 D0 E0               748 	pop	acc
   0342 F6                  749 	mov	@r0,a
   0343 18                  750 	dec	r0
   0344 D0 E0               751 	pop	acc
   0346 F6                  752 	mov	@r0,a
   0347 18                  753 	dec	r0
   0348 D0 E0               754 	pop	acc
   034A F6                  755 	mov	@r0,a
   034B E5*00               756 	mov	a,_bp
   034D 24 1E               757 	add	a,#0x1e
   034F F8                  758 	mov	r0,a
   0350 86 82               759 	mov	dpl,@r0
   0352 08                  760 	inc	r0
   0353 86 83               761 	mov	dph,@r0
   0355 08                  762 	inc	r0
   0356 86 F0               763 	mov	b,@r0
   0358 12s00r00            764 	lcall	__gptrget
   035B FD                  765 	mov	r5,a
   035C A3                  766 	inc	dptr
   035D 12s00r00            767 	lcall	__gptrget
   0360 FE                  768 	mov	r6,a
   0361 E5*00               769 	mov	a,_bp
   0363 24 21               770 	add	a,#0x21
   0365 F8                  771 	mov	r0,a
   0366 A6 05               772 	mov	@r0,ar5
   0368 08                  773 	inc	r0
   0369 A6 06               774 	mov	@r0,ar6
   036B EE                  775 	mov	a,r6
   036C 33                  776 	rlc	a
   036D 95 E0               777 	subb	a,acc
   036F 08                  778 	inc	r0
   0370 F6                  779 	mov	@r0,a
   0371 08                  780 	inc	r0
   0372 F6                  781 	mov	@r0,a
   0373 C0 07               782 	push	ar7
   0375 C0 04               783 	push	ar4
   0377 C0 03               784 	push	ar3
   0379 C0 02               785 	push	ar2
   037B C0 07               786 	push	ar7
   037D C0 04               787 	push	ar4
   037F C0 03               788 	push	ar3
   0381 C0 02               789 	push	ar2
   0383 E5*00               790 	mov	a,_bp
   0385 24 21               791 	add	a,#0x21
   0387 F8                  792 	mov	r0,a
   0388 86 82               793 	mov	dpl,@r0
   038A 08                  794 	inc	r0
   038B 86 83               795 	mov	dph,@r0
   038D 08                  796 	inc	r0
   038E 86 F0               797 	mov	b,@r0
   0390 08                  798 	inc	r0
   0391 E6                  799 	mov	a,@r0
   0392 12s00r00            800 	lcall	__mullong
   0395 C8                  801 	xch	a,r0
   0396 E5*00               802 	mov	a,_bp
   0398 24 25               803 	add	a,#0x25
   039A C8                  804 	xch	a,r0
   039B A6 82               805 	mov	@r0,dpl
   039D 08                  806 	inc	r0
   039E A6 83               807 	mov	@r0,dph
   03A0 08                  808 	inc	r0
   03A1 A6 F0               809 	mov	@r0,b
   03A3 08                  810 	inc	r0
   03A4 F6                  811 	mov	@r0,a
   03A5 E5 81               812 	mov	a,sp
   03A7 24 FC               813 	add	a,#0xfc
   03A9 F5 81               814 	mov	sp,a
   03AB D0 02               815 	pop	ar2
   03AD D0 03               816 	pop	ar3
   03AF D0 04               817 	pop	ar4
   03B1 D0 07               818 	pop	ar7
   03B3 E5*00               819 	mov	a,_bp
   03B5 24 FB               820 	add	a,#0xfb
   03B7 F8                  821 	mov	r0,a
   03B8 E5*00               822 	mov	a,_bp
   03BA 24 1C               823 	add	a,#0x1c
   03BC F9                  824 	mov	r1,a
   03BD E7                  825 	mov	a,@r1
   03BE 26                  826 	add	a,@r0
   03BF C0 E0               827 	push	acc
   03C1 09                  828 	inc	r1
   03C2 E7                  829 	mov	a,@r1
   03C3 08                  830 	inc	r0
   03C4 36                  831 	addc	a,@r0
   03C5 C0 E0               832 	push	acc
   03C7 08                  833 	inc	r0
   03C8 E6                  834 	mov	a,@r0
   03C9 C0 E0               835 	push	acc
   03CB E5*00               836 	mov	a,_bp
   03CD 24 2B               837 	add	a,#0x2b
   03CF F8                  838 	mov	r0,a
   03D0 D0 E0               839 	pop	acc
   03D2 F6                  840 	mov	@r0,a
   03D3 18                  841 	dec	r0
   03D4 D0 E0               842 	pop	acc
   03D6 F6                  843 	mov	@r0,a
   03D7 18                  844 	dec	r0
   03D8 D0 E0               845 	pop	acc
   03DA F6                  846 	mov	@r0,a
   03DB E5*00               847 	mov	a,_bp
   03DD 24 29               848 	add	a,#0x29
   03DF F8                  849 	mov	r0,a
   03E0 86 82               850 	mov	dpl,@r0
   03E2 08                  851 	inc	r0
   03E3 86 83               852 	mov	dph,@r0
   03E5 08                  853 	inc	r0
   03E6 86 F0               854 	mov	b,@r0
   03E8 12s00r00            855 	lcall	__gptrget
   03EB FD                  856 	mov	r5,a
   03EC A3                  857 	inc	dptr
   03ED 12s00r00            858 	lcall	__gptrget
   03F0 FE                  859 	mov	r6,a
   03F1 E5*00               860 	mov	a,_bp
   03F3 24 2C               861 	add	a,#0x2c
   03F5 F8                  862 	mov	r0,a
   03F6 A6 05               863 	mov	@r0,ar5
   03F8 08                  864 	inc	r0
   03F9 A6 06               865 	mov	@r0,ar6
   03FB EE                  866 	mov	a,r6
   03FC 33                  867 	rlc	a
   03FD 95 E0               868 	subb	a,acc
   03FF 08                  869 	inc	r0
   0400 F6                  870 	mov	@r0,a
   0401 08                  871 	inc	r0
   0402 F6                  872 	mov	@r0,a
   0403 C0 07               873 	push	ar7
   0405 C0 04               874 	push	ar4
   0407 C0 03               875 	push	ar3
   0409 C0 02               876 	push	ar2
   040B E5*00               877 	mov	a,_bp
   040D 24 0E               878 	add	a,#0x0e
   040F F8                  879 	mov	r0,a
   0410 E6                  880 	mov	a,@r0
   0411 C0 E0               881 	push	acc
   0413 08                  882 	inc	r0
   0414 E6                  883 	mov	a,@r0
   0415 C0 E0               884 	push	acc
   0417 08                  885 	inc	r0
   0418 E6                  886 	mov	a,@r0
   0419 C0 E0               887 	push	acc
   041B 08                  888 	inc	r0
   041C E6                  889 	mov	a,@r0
   041D C0 E0               890 	push	acc
   041F E5*00               891 	mov	a,_bp
   0421 24 2C               892 	add	a,#0x2c
   0423 F8                  893 	mov	r0,a
   0424 86 82               894 	mov	dpl,@r0
   0426 08                  895 	inc	r0
   0427 86 83               896 	mov	dph,@r0
   0429 08                  897 	inc	r0
   042A 86 F0               898 	mov	b,@r0
   042C 08                  899 	inc	r0
   042D E6                  900 	mov	a,@r0
   042E 12s00r00            901 	lcall	__mullong
   0431 C8                  902 	xch	a,r0
   0432 E5*00               903 	mov	a,_bp
   0434 24 30               904 	add	a,#0x30
   0436 C8                  905 	xch	a,r0
   0437 A6 82               906 	mov	@r0,dpl
   0439 08                  907 	inc	r0
   043A A6 83               908 	mov	@r0,dph
   043C 08                  909 	inc	r0
   043D A6 F0               910 	mov	@r0,b
   043F 08                  911 	inc	r0
   0440 F6                  912 	mov	@r0,a
   0441 E5 81               913 	mov	a,sp
   0443 24 FC               914 	add	a,#0xfc
   0445 F5 81               915 	mov	sp,a
   0447 D0 02               916 	pop	ar2
   0449 D0 03               917 	pop	ar3
   044B D0 04               918 	pop	ar4
   044D D0 07               919 	pop	ar7
   044F E5*00               920 	mov	a,_bp
   0451 24 25               921 	add	a,#0x25
   0453 F8                  922 	mov	r0,a
   0454 E5*00               923 	mov	a,_bp
   0456 24 30               924 	add	a,#0x30
   0458 F9                  925 	mov	r1,a
   0459 E7                  926 	mov	a,@r1
   045A 26                  927 	add	a,@r0
   045B F7                  928 	mov	@r1,a
   045C 09                  929 	inc	r1
   045D E7                  930 	mov	a,@r1
   045E 08                  931 	inc	r0
   045F 36                  932 	addc	a,@r0
   0460 F7                  933 	mov	@r1,a
   0461 09                  934 	inc	r1
   0462 E7                  935 	mov	a,@r1
   0463 08                  936 	inc	r0
   0464 36                  937 	addc	a,@r0
   0465 F7                  938 	mov	@r1,a
   0466 09                  939 	inc	r1
   0467 E7                  940 	mov	a,@r1
   0468 08                  941 	inc	r0
   0469 36                  942 	addc	a,@r0
   046A F7                  943 	mov	@r1,a
   046B E5*00               944 	mov	a,_bp
   046D 24 30               945 	add	a,#0x30
   046F F8                  946 	mov	r0,a
   0470 E5*00               947 	mov	a,_bp
   0472 24 12               948 	add	a,#0x12
   0474 F9                  949 	mov	r1,a
   0475 E6                  950 	mov	a,@r0
   0476 F7                  951 	mov	@r1,a
   0477 08                  952 	inc	r0
   0478 E6                  953 	mov	a,@r0
   0479 A2 E7               954 	mov	c,acc.7
   047B C7                  955 	xch	a,@r1
   047C 33                  956 	rlc	a
   047D C7                  957 	xch	a,@r1
   047E 33                  958 	rlc	a
   047F C7                  959 	xch	a,@r1
   0480 54 01               960 	anl	a,#0x01
   0482 09                  961 	inc	r1
   0483 F7                  962 	mov	@r1,a
   0484 08                  963 	inc	r0
   0485 E6                  964 	mov	a,@r0
   0486 25 E0               965 	add	a,acc
   0488 47                  966 	orl	a,@r1
   0489 F7                  967 	mov	@r1,a
   048A E6                  968 	mov	a,@r0
   048B 09                  969 	inc	r1
   048C F7                  970 	mov	@r1,a
   048D 08                  971 	inc	r0
   048E E6                  972 	mov	a,@r0
   048F A2 E7               973 	mov	c,acc.7
   0491 C7                  974 	xch	a,@r1
   0492 33                  975 	rlc	a
   0493 C7                  976 	xch	a,@r1
   0494 33                  977 	rlc	a
   0495 C7                  978 	xch	a,@r1
   0496 54 01               979 	anl	a,#0x01
   0498 30 E0 02            980 	jnb	acc.0,00175$
   049B 44 FE               981 	orl	a,#0xFE
   049D                     982 00175$:
   049D 09                  983 	inc	r1
   049E F7                  984 	mov	@r1,a
                            985 ;	../../core/lib/ifft.c:137: ti = ((xim[k + n2] * c - xre[k + n2] * s) >> RESOLUTION);
   049F C0 07               986 	push	ar7
   04A1 C0 04               987 	push	ar4
   04A3 C0 03               988 	push	ar3
   04A5 C0 02               989 	push	ar2
   04A7 E5*00               990 	mov	a,_bp
   04A9 24 2C               991 	add	a,#0x2c
   04AB F8                  992 	mov	r0,a
   04AC 86 82               993 	mov	dpl,@r0
   04AE 08                  994 	inc	r0
   04AF 86 83               995 	mov	dph,@r0
   04B1 08                  996 	inc	r0
   04B2 86 F0               997 	mov	b,@r0
   04B4 08                  998 	inc	r0
   04B5 E6                  999 	mov	a,@r0
   04B6 12s00r00           1000 	lcall	__mullong
   04B9 AF 82              1001 	mov	r7,dpl
   04BB AE 83              1002 	mov	r6,dph
   04BD AD F0              1003 	mov	r5,b
   04BF FC                 1004 	mov	r4,a
   04C0 E5 81              1005 	mov	a,sp
   04C2 24 FC              1006 	add	a,#0xfc
   04C4 F5 81              1007 	mov	sp,a
   04C6 C0 07              1008 	push	ar7
   04C8 C0 06              1009 	push	ar6
   04CA C0 05              1010 	push	ar5
   04CC C0 04              1011 	push	ar4
   04CE E5*00              1012 	mov	a,_bp
   04D0 24 0E              1013 	add	a,#0x0e
   04D2 F8                 1014 	mov	r0,a
   04D3 E6                 1015 	mov	a,@r0
   04D4 C0 E0              1016 	push	acc
   04D6 08                 1017 	inc	r0
   04D7 E6                 1018 	mov	a,@r0
   04D8 C0 E0              1019 	push	acc
   04DA 08                 1020 	inc	r0
   04DB E6                 1021 	mov	a,@r0
   04DC C0 E0              1022 	push	acc
   04DE 08                 1023 	inc	r0
   04DF E6                 1024 	mov	a,@r0
   04E0 C0 E0              1025 	push	acc
   04E2 E5*00              1026 	mov	a,_bp
   04E4 24 21              1027 	add	a,#0x21
   04E6 F8                 1028 	mov	r0,a
   04E7 86 82              1029 	mov	dpl,@r0
   04E9 08                 1030 	inc	r0
   04EA 86 83              1031 	mov	dph,@r0
   04EC 08                 1032 	inc	r0
   04ED 86 F0              1033 	mov	b,@r0
   04EF 08                 1034 	inc	r0
   04F0 E6                 1035 	mov	a,@r0
   04F1 12s00r00           1036 	lcall	__mullong
   04F4 C8                 1037 	xch	a,r0
   04F5 E5*00              1038 	mov	a,_bp
   04F7 24 2C              1039 	add	a,#0x2c
   04F9 C8                 1040 	xch	a,r0
   04FA A6 82              1041 	mov	@r0,dpl
   04FC 08                 1042 	inc	r0
   04FD A6 83              1043 	mov	@r0,dph
   04FF 08                 1044 	inc	r0
   0500 A6 F0              1045 	mov	@r0,b
   0502 08                 1046 	inc	r0
   0503 F6                 1047 	mov	@r0,a
   0504 E5 81              1048 	mov	a,sp
   0506 24 FC              1049 	add	a,#0xfc
   0508 F5 81              1050 	mov	sp,a
   050A D0 04              1051 	pop	ar4
   050C D0 05              1052 	pop	ar5
   050E D0 06              1053 	pop	ar6
   0510 D0 07              1054 	pop	ar7
   0512 E5*00              1055 	mov	a,_bp
   0514 24 2C              1056 	add	a,#0x2c
   0516 F8                 1057 	mov	r0,a
   0517 E5*00              1058 	mov	a,_bp
   0519 24 30              1059 	add	a,#0x30
   051B F9                 1060 	mov	r1,a
   051C EF                 1061 	mov	a,r7
   051D C3                 1062 	clr	c
   051E 96                 1063 	subb	a,@r0
   051F F7                 1064 	mov	@r1,a
   0520 EE                 1065 	mov	a,r6
   0521 08                 1066 	inc	r0
   0522 96                 1067 	subb	a,@r0
   0523 09                 1068 	inc	r1
   0524 F7                 1069 	mov	@r1,a
   0525 ED                 1070 	mov	a,r5
   0526 08                 1071 	inc	r0
   0527 96                 1072 	subb	a,@r0
   0528 09                 1073 	inc	r1
   0529 F7                 1074 	mov	@r1,a
   052A EC                 1075 	mov	a,r4
   052B 08                 1076 	inc	r0
   052C 96                 1077 	subb	a,@r0
   052D 09                 1078 	inc	r1
   052E F7                 1079 	mov	@r1,a
   052F E5*00              1080 	mov	a,_bp
   0531 24 30              1081 	add	a,#0x30
   0533 F8                 1082 	mov	r0,a
   0534 86 07              1083 	mov	ar7,@r0
   0536 08                 1084 	inc	r0
   0537 E6                 1085 	mov	a,@r0
   0538 A2 E7              1086 	mov	c,acc.7
   053A CF                 1087 	xch	a,r7
   053B 33                 1088 	rlc	a
   053C CF                 1089 	xch	a,r7
   053D 33                 1090 	rlc	a
   053E CF                 1091 	xch	a,r7
   053F 54 01              1092 	anl	a,#0x01
   0541 FC                 1093 	mov	r4,a
   0542 08                 1094 	inc	r0
   0543 E6                 1095 	mov	a,@r0
   0544 25 E0              1096 	add	a,acc
   0546 4C                 1097 	orl	a,r4
   0547 FC                 1098 	mov	r4,a
   0548 86 03              1099 	mov	ar3,@r0
   054A 08                 1100 	inc	r0
   054B E6                 1101 	mov	a,@r0
   054C A2 E7              1102 	mov	c,acc.7
   054E CB                 1103 	xch	a,r3
   054F 33                 1104 	rlc	a
   0550 CB                 1105 	xch	a,r3
   0551 33                 1106 	rlc	a
   0552 CB                 1107 	xch	a,r3
   0553 54 01              1108 	anl	a,#0x01
   0555 30 E0 02           1109 	jnb	acc.0,00176$
   0558 44 FE              1110 	orl	a,#0xFE
   055A                    1111 00176$:
   055A FA                 1112 	mov	r2,a
                           1113 ;	../../core/lib/ifft.c:139: xre[k + n2] = xre[k] - tr;
   055B E5*00              1114 	mov	a,_bp
   055D 24 16              1115 	add	a,#0x16
   055F F8                 1116 	mov	r0,a
   0560 E5*00              1117 	mov	a,_bp
   0562 24 30              1118 	add	a,#0x30
   0564 F9                 1119 	mov	r1,a
   0565 E6                 1120 	mov	a,@r0
   0566 F7                 1121 	mov	@r1,a
   0567 08                 1122 	inc	r0
   0568 E6                 1123 	mov	a,@r0
   0569 C7                 1124 	xch	a,@r1
   056A 25 E0              1125 	add	a,acc
   056C C7                 1126 	xch	a,@r1
   056D 33                 1127 	rlc	a
   056E 09                 1128 	inc	r1
   056F F7                 1129 	mov	@r1,a
   0570 A8*00              1130 	mov	r0,_bp
   0572 08                 1131 	inc	r0
   0573 E5*00              1132 	mov	a,_bp
   0575 24 30              1133 	add	a,#0x30
   0577 F9                 1134 	mov	r1,a
   0578 E7                 1135 	mov	a,@r1
   0579 26                 1136 	add	a,@r0
   057A C0 E0              1137 	push	acc
   057C 09                 1138 	inc	r1
   057D E7                 1139 	mov	a,@r1
   057E 08                 1140 	inc	r0
   057F 36                 1141 	addc	a,@r0
   0580 C0 E0              1142 	push	acc
   0582 08                 1143 	inc	r0
   0583 E6                 1144 	mov	a,@r0
   0584 C0 E0              1145 	push	acc
   0586 E5*00              1146 	mov	a,_bp
   0588 24 2E              1147 	add	a,#0x2e
   058A F8                 1148 	mov	r0,a
   058B D0 E0              1149 	pop	acc
   058D F6                 1150 	mov	@r0,a
   058E 18                 1151 	dec	r0
   058F D0 E0              1152 	pop	acc
   0591 F6                 1153 	mov	@r0,a
   0592 18                 1154 	dec	r0
   0593 D0 E0              1155 	pop	acc
   0595 F6                 1156 	mov	@r0,a
   0596 E5*00              1157 	mov	a,_bp
   0598 24 2C              1158 	add	a,#0x2c
   059A F8                 1159 	mov	r0,a
   059B 86 82              1160 	mov	dpl,@r0
   059D 08                 1161 	inc	r0
   059E 86 83              1162 	mov	dph,@r0
   05A0 08                 1163 	inc	r0
   05A1 86 F0              1164 	mov	b,@r0
   05A3 12s00r00           1165 	lcall	__gptrget
   05A6 FD                 1166 	mov	r5,a
   05A7 A3                 1167 	inc	dptr
   05A8 12s00r00           1168 	lcall	__gptrget
   05AB FE                 1169 	mov	r6,a
   05AC E5*00              1170 	mov	a,_bp
   05AE 24 25              1171 	add	a,#0x25
   05B0 F8                 1172 	mov	r0,a
   05B1 A6 05              1173 	mov	@r0,ar5
   05B3 08                 1174 	inc	r0
   05B4 A6 06              1175 	mov	@r0,ar6
   05B6 EE                 1176 	mov	a,r6
   05B7 33                 1177 	rlc	a
   05B8 95 E0              1178 	subb	a,acc
   05BA 08                 1179 	inc	r0
   05BB F6                 1180 	mov	@r0,a
   05BC 08                 1181 	inc	r0
   05BD F6                 1182 	mov	@r0,a
   05BE E5*00              1183 	mov	a,_bp
   05C0 24 25              1184 	add	a,#0x25
   05C2 F8                 1185 	mov	r0,a
   05C3 E5*00              1186 	mov	a,_bp
   05C5 24 12              1187 	add	a,#0x12
   05C7 F9                 1188 	mov	r1,a
   05C8 E6                 1189 	mov	a,@r0
   05C9 C3                 1190 	clr	c
   05CA 97                 1191 	subb	a,@r1
   05CB C0 E0              1192 	push	acc
   05CD 08                 1193 	inc	r0
   05CE E6                 1194 	mov	a,@r0
   05CF 09                 1195 	inc	r1
   05D0 97                 1196 	subb	a,@r1
   05D1 C0 E0              1197 	push	acc
   05D3 08                 1198 	inc	r0
   05D4 E6                 1199 	mov	a,@r0
   05D5 09                 1200 	inc	r1
   05D6 97                 1201 	subb	a,@r1
   05D7 C0 E0              1202 	push	acc
   05D9 08                 1203 	inc	r0
   05DA E6                 1204 	mov	a,@r0
   05DB 09                 1205 	inc	r1
   05DC 97                 1206 	subb	a,@r1
   05DD C0 E0              1207 	push	acc
   05DF E5*00              1208 	mov	a,_bp
   05E1 24 24              1209 	add	a,#0x24
   05E3 F8                 1210 	mov	r0,a
   05E4 D0 E0              1211 	pop	acc
   05E6 F6                 1212 	mov	@r0,a
   05E7 18                 1213 	dec	r0
   05E8 D0 E0              1214 	pop	acc
   05EA F6                 1215 	mov	@r0,a
   05EB 18                 1216 	dec	r0
   05EC D0 E0              1217 	pop	acc
   05EE F6                 1218 	mov	@r0,a
   05EF 18                 1219 	dec	r0
   05F0 D0 E0              1220 	pop	acc
   05F2 F6                 1221 	mov	@r0,a
   05F3 E5*00              1222 	mov	a,_bp
   05F5 24 21              1223 	add	a,#0x21
   05F7 F8                 1224 	mov	r0,a
   05F8 86 05              1225 	mov	ar5,@r0
   05FA 08                 1226 	inc	r0
   05FB 86 06              1227 	mov	ar6,@r0
   05FD E5*00              1228 	mov	a,_bp
   05FF 24 1E              1229 	add	a,#0x1e
   0601 F8                 1230 	mov	r0,a
   0602 86 82              1231 	mov	dpl,@r0
   0604 08                 1232 	inc	r0
   0605 86 83              1233 	mov	dph,@r0
   0607 08                 1234 	inc	r0
   0608 86 F0              1235 	mov	b,@r0
   060A ED                 1236 	mov	a,r5
   060B 12s00r00           1237 	lcall	__gptrput
   060E A3                 1238 	inc	dptr
   060F EE                 1239 	mov	a,r6
   0610 12s00r00           1240 	lcall	__gptrput
                           1241 ;	../../core/lib/ifft.c:140: xim[k + n2] = xim[k] - ti;
   0613 E5*00              1242 	mov	a,_bp
   0615 24 FB              1243 	add	a,#0xfb
   0617 F8                 1244 	mov	r0,a
   0618 E5*00              1245 	mov	a,_bp
   061A 24 30              1246 	add	a,#0x30
   061C F9                 1247 	mov	r1,a
   061D E7                 1248 	mov	a,@r1
   061E 26                 1249 	add	a,@r0
   061F C0 E0              1250 	push	acc
   0621 09                 1251 	inc	r1
   0622 E7                 1252 	mov	a,@r1
   0623 08                 1253 	inc	r0
   0624 36                 1254 	addc	a,@r0
   0625 C0 E0              1255 	push	acc
   0627 08                 1256 	inc	r0
   0628 E6                 1257 	mov	a,@r0
   0629 C0 E0              1258 	push	acc
   062B E5*00              1259 	mov	a,_bp
   062D 24 32              1260 	add	a,#0x32
   062F F8                 1261 	mov	r0,a
   0630 D0 E0              1262 	pop	acc
   0632 F6                 1263 	mov	@r0,a
   0633 18                 1264 	dec	r0
   0634 D0 E0              1265 	pop	acc
   0636 F6                 1266 	mov	@r0,a
   0637 18                 1267 	dec	r0
   0638 D0 E0              1268 	pop	acc
   063A F6                 1269 	mov	@r0,a
   063B E5*00              1270 	mov	a,_bp
   063D 24 30              1271 	add	a,#0x30
   063F F8                 1272 	mov	r0,a
   0640 86 82              1273 	mov	dpl,@r0
   0642 08                 1274 	inc	r0
   0643 86 83              1275 	mov	dph,@r0
   0645 08                 1276 	inc	r0
   0646 86 F0              1277 	mov	b,@r0
   0648 12s00r00           1278 	lcall	__gptrget
   064B FD                 1279 	mov	r5,a
   064C A3                 1280 	inc	dptr
   064D 12s00r00           1281 	lcall	__gptrget
   0650 FE                 1282 	mov	r6,a
   0651 E5*00              1283 	mov	a,_bp
   0653 24 21              1284 	add	a,#0x21
   0655 F8                 1285 	mov	r0,a
   0656 A6 05              1286 	mov	@r0,ar5
   0658 08                 1287 	inc	r0
   0659 A6 06              1288 	mov	@r0,ar6
   065B EE                 1289 	mov	a,r6
   065C 33                 1290 	rlc	a
   065D 95 E0              1291 	subb	a,acc
   065F 08                 1292 	inc	r0
   0660 F6                 1293 	mov	@r0,a
   0661 08                 1294 	inc	r0
   0662 F6                 1295 	mov	@r0,a
   0663 E5*00              1296 	mov	a,_bp
   0665 24 21              1297 	add	a,#0x21
   0667 F8                 1298 	mov	r0,a
   0668 E5*00              1299 	mov	a,_bp
   066A 24 34              1300 	add	a,#0x34
   066C F9                 1301 	mov	r1,a
   066D E6                 1302 	mov	a,@r0
   066E C3                 1303 	clr	c
   066F 9F                 1304 	subb	a,r7
   0670 F7                 1305 	mov	@r1,a
   0671 08                 1306 	inc	r0
   0672 E6                 1307 	mov	a,@r0
   0673 9C                 1308 	subb	a,r4
   0674 09                 1309 	inc	r1
   0675 F7                 1310 	mov	@r1,a
   0676 08                 1311 	inc	r0
   0677 E6                 1312 	mov	a,@r0
   0678 9B                 1313 	subb	a,r3
   0679 09                 1314 	inc	r1
   067A F7                 1315 	mov	@r1,a
   067B 08                 1316 	inc	r0
   067C E6                 1317 	mov	a,@r0
   067D 9A                 1318 	subb	a,r2
   067E 09                 1319 	inc	r1
   067F F7                 1320 	mov	@r1,a
   0680 E5*00              1321 	mov	a,_bp
   0682 24 34              1322 	add	a,#0x34
   0684 F8                 1323 	mov	r0,a
   0685 86 05              1324 	mov	ar5,@r0
   0687 08                 1325 	inc	r0
   0688 86 06              1326 	mov	ar6,@r0
   068A E5*00              1327 	mov	a,_bp
   068C 24 29              1328 	add	a,#0x29
   068E F8                 1329 	mov	r0,a
   068F 86 82              1330 	mov	dpl,@r0
   0691 08                 1331 	inc	r0
   0692 86 83              1332 	mov	dph,@r0
   0694 08                 1333 	inc	r0
   0695 86 F0              1334 	mov	b,@r0
   0697 ED                 1335 	mov	a,r5
   0698 12s00r00           1336 	lcall	__gptrput
   069B A3                 1337 	inc	dptr
   069C EE                 1338 	mov	a,r6
   069D 12s00r00           1339 	lcall	__gptrput
                           1340 ;	../../core/lib/ifft.c:141: xre[k] += tr;
   06A0 E5*00              1341 	mov	a,_bp
   06A2 24 25              1342 	add	a,#0x25
   06A4 F8                 1343 	mov	r0,a
   06A5 E5*00              1344 	mov	a,_bp
   06A7 24 12              1345 	add	a,#0x12
   06A9 F9                 1346 	mov	r1,a
   06AA E7                 1347 	mov	a,@r1
   06AB 26                 1348 	add	a,@r0
   06AC C0 E0              1349 	push	acc
   06AE 09                 1350 	inc	r1
   06AF E7                 1351 	mov	a,@r1
   06B0 08                 1352 	inc	r0
   06B1 36                 1353 	addc	a,@r0
   06B2 C0 E0              1354 	push	acc
   06B4 09                 1355 	inc	r1
   06B5 E7                 1356 	mov	a,@r1
   06B6 08                 1357 	inc	r0
   06B7 36                 1358 	addc	a,@r0
   06B8 C0 E0              1359 	push	acc
   06BA 09                 1360 	inc	r1
   06BB E7                 1361 	mov	a,@r1
   06BC 08                 1362 	inc	r0
   06BD 36                 1363 	addc	a,@r0
   06BE C0 E0              1364 	push	acc
   06C0 E5*00              1365 	mov	a,_bp
   06C2 24 37              1366 	add	a,#0x37
   06C4 F8                 1367 	mov	r0,a
   06C5 D0 E0              1368 	pop	acc
   06C7 F6                 1369 	mov	@r0,a
   06C8 18                 1370 	dec	r0
   06C9 D0 E0              1371 	pop	acc
   06CB F6                 1372 	mov	@r0,a
   06CC 18                 1373 	dec	r0
   06CD D0 E0              1374 	pop	acc
   06CF F6                 1375 	mov	@r0,a
   06D0 18                 1376 	dec	r0
   06D1 D0 E0              1377 	pop	acc
   06D3 F6                 1378 	mov	@r0,a
   06D4 E5*00              1379 	mov	a,_bp
   06D6 24 34              1380 	add	a,#0x34
   06D8 F8                 1381 	mov	r0,a
   06D9 86 05              1382 	mov	ar5,@r0
   06DB 08                 1383 	inc	r0
   06DC 86 06              1384 	mov	ar6,@r0
   06DE E5*00              1385 	mov	a,_bp
   06E0 24 2C              1386 	add	a,#0x2c
   06E2 F8                 1387 	mov	r0,a
   06E3 86 82              1388 	mov	dpl,@r0
   06E5 08                 1389 	inc	r0
   06E6 86 83              1390 	mov	dph,@r0
   06E8 08                 1391 	inc	r0
   06E9 86 F0              1392 	mov	b,@r0
   06EB ED                 1393 	mov	a,r5
   06EC 12s00r00           1394 	lcall	__gptrput
   06EF A3                 1395 	inc	dptr
   06F0 EE                 1396 	mov	a,r6
   06F1 12s00r00           1397 	lcall	__gptrput
                           1398 ;	../../core/lib/ifft.c:142: xim[k] += ti;
   06F4 E5*00              1399 	mov	a,_bp
   06F6 24 21              1400 	add	a,#0x21
   06F8 F8                 1401 	mov	r0,a
   06F9 EF                 1402 	mov	a,r7
   06FA 26                 1403 	add	a,@r0
   06FB FF                 1404 	mov	r7,a
   06FC EC                 1405 	mov	a,r4
   06FD 08                 1406 	inc	r0
   06FE 36                 1407 	addc	a,@r0
   06FF FC                 1408 	mov	r4,a
   0700 EB                 1409 	mov	a,r3
   0701 08                 1410 	inc	r0
   0702 36                 1411 	addc	a,@r0
   0703 EA                 1412 	mov	a,r2
   0704 08                 1413 	inc	r0
   0705 36                 1414 	addc	a,@r0
   0706 8F 05              1415 	mov	ar5,r7
   0708 8C 06              1416 	mov	ar6,r4
   070A E5*00              1417 	mov	a,_bp
   070C 24 30              1418 	add	a,#0x30
   070E F8                 1419 	mov	r0,a
   070F 86 82              1420 	mov	dpl,@r0
   0711 08                 1421 	inc	r0
   0712 86 83              1422 	mov	dph,@r0
   0714 08                 1423 	inc	r0
   0715 86 F0              1424 	mov	b,@r0
   0717 ED                 1425 	mov	a,r5
   0718 12s00r00           1426 	lcall	__gptrput
   071B A3                 1427 	inc	dptr
   071C EE                 1428 	mov	a,r6
   071D 12s00r00           1429 	lcall	__gptrput
                           1430 ;	../../core/lib/ifft.c:143: k++;
   0720 E5*00              1431 	mov	a,_bp
   0722 24 16              1432 	add	a,#0x16
   0724 F8                 1433 	mov	r0,a
   0725 06                 1434 	inc	@r0
   0726 B6 00 02           1435 	cjne	@r0,#0x00,00177$
   0729 08                 1436 	inc	r0
   072A 06                 1437 	inc	@r0
   072B                    1438 00177$:
                           1439 ;	../../core/lib/ifft.c:131: for (i = 1; i <= n2; i++) {
   072B E5*00              1440 	mov	a,_bp
   072D 24 0C              1441 	add	a,#0x0c
   072F F8                 1442 	mov	r0,a
   0730 06                 1443 	inc	@r0
   0731 B6 00 02           1444 	cjne	@r0,#0x00,00178$
   0734 08                 1445 	inc	r0
   0735 06                 1446 	inc	@r0
   0736                    1447 00178$:
   0736 02s02r14           1448 	ljmp	00107$
   0739                    1449 00113$:
                           1450 ;	../../core/lib/ifft.c:130: for (k = 0; k < n; k += n2) {
   0739 E5*00              1451 	mov	a,_bp
   073B 24 16              1452 	add	a,#0x16
   073D F8                 1453 	mov	r0,a
   073E 86 05              1454 	mov	ar5,@r0
   0740 08                 1455 	inc	r0
   0741 86 06              1456 	mov	ar6,@r0
   0743 E5*00              1457 	mov	a,_bp
   0745 24 06              1458 	add	a,#0x06
   0747 F8                 1459 	mov	r0,a
   0748 E6                 1460 	mov	a,@r0
   0749 2D                 1461 	add	a,r5
   074A FD                 1462 	mov	r5,a
   074B 08                 1463 	inc	r0
   074C E6                 1464 	mov	a,@r0
   074D 3E                 1465 	addc	a,r6
   074E FE                 1466 	mov	r6,a
   074F 8D 03              1467 	mov	ar3,r5
   0751 8E 07              1468 	mov	ar7,r6
   0753 02s01rEC           1469 	ljmp	00111$
   0756                    1470 00114$:
                           1471 ;	../../core/lib/ifft.c:146: nu1--;
   0756 E5*00              1472 	mov	a,_bp
   0758 24 1A              1473 	add	a,#0x1a
   075A F8                 1474 	mov	r0,a
   075B 16                 1475 	dec	@r0
   075C B6 FF 02           1476 	cjne	@r0,#0xFF,00179$
   075F 08                 1477 	inc	r0
   0760 16                 1478 	dec	@r0
   0761                    1479 00179$:
                           1480 ;	../../core/lib/ifft.c:147: n2 = n2 / 2;
   0761 E5*00              1481 	mov	a,_bp
   0763 24 06              1482 	add	a,#0x06
   0765 F8                 1483 	mov	r0,a
   0766 08                 1484 	inc	r0
   0767 E6                 1485 	mov	a,@r0
   0768 18                 1486 	dec	r0
   0769 C3                 1487 	clr	c
   076A 13                 1488 	rrc	a
   076B C6                 1489 	xch	a,@r0
   076C 13                 1490 	rrc	a
   076D C6                 1491 	xch	a,@r0
   076E 08                 1492 	inc	r0
   076F F6                 1493 	mov	@r0,a
                           1494 ;	../../core/lib/ifft.c:129: for (l = 1; l <= nu; l++) {
   0770 E5*00              1495 	mov	a,_bp
   0772 24 0A              1496 	add	a,#0x0a
   0774 F8                 1497 	mov	r0,a
   0775 06                 1498 	inc	@r0
   0776 B6 00 02           1499 	cjne	@r0,#0x00,00180$
   0779 08                 1500 	inc	r0
   077A 06                 1501 	inc	@r0
   077B                    1502 00180$:
   077B 02s01rCE           1503 	ljmp	00115$
   077E                    1504 00118$:
                           1505 ;	../../core/lib/ifft.c:150: for (k = 0; k < n; k++) {
   077E 7E 00              1506 	mov	r6,#0x00
   0780 7F 00              1507 	mov	r7,#0x00
   0782                    1508 00119$:
   0782 8E 03              1509 	mov	ar3,r6
   0784 8F 05              1510 	mov	ar5,r7
   0786 E5*00              1511 	mov	a,_bp
   0788 24 F9              1512 	add	a,#0xf9
   078A F8                 1513 	mov	r0,a
   078B C3                 1514 	clr	c
   078C EB                 1515 	mov	a,r3
   078D 96                 1516 	subb	a,@r0
   078E ED                 1517 	mov	a,r5
   078F 08                 1518 	inc	r0
   0790 96                 1519 	subb	a,@r0
   0791 40 03              1520 	jc	00181$
   0793 02s09r41           1521 	ljmp	00122$
   0796                    1522 00181$:
                           1523 ;	../../core/lib/ifft.c:151: p = bitrev(k, nu);
   0796 C0 07              1524 	push	ar7
   0798 C0 06              1525 	push	ar6
   079A E5*00              1526 	mov	a,_bp
   079C 24 04              1527 	add	a,#0x04
   079E F8                 1528 	mov	r0,a
   079F E6                 1529 	mov	a,@r0
   07A0 C0 E0              1530 	push	acc
   07A2 08                 1531 	inc	r0
   07A3 E6                 1532 	mov	a,@r0
   07A4 C0 E0              1533 	push	acc
   07A6 8B 82              1534 	mov	dpl,r3
   07A8 8D 83              1535 	mov	dph,r5
   07AA 12s00r00           1536 	lcall	_bitrev
   07AD AB 82              1537 	mov	r3,dpl
   07AF AD 83              1538 	mov	r5,dph
   07B1 15 81              1539 	dec	sp
   07B3 15 81              1540 	dec	sp
   07B5 D0 06              1541 	pop	ar6
   07B7 D0 07              1542 	pop	ar7
   07B9 E5*00              1543 	mov	a,_bp
   07BB 24 08              1544 	add	a,#0x08
   07BD F8                 1545 	mov	r0,a
   07BE A6 03              1546 	mov	@r0,ar3
   07C0 08                 1547 	inc	r0
   07C1 A6 05              1548 	mov	@r0,ar5
                           1549 ;	../../core/lib/ifft.c:152: if (p > k) {
   07C3 E5*00              1550 	mov	a,_bp
   07C5 24 08              1551 	add	a,#0x08
   07C7 F8                 1552 	mov	r0,a
   07C8 C3                 1553 	clr	c
   07C9 EE                 1554 	mov	a,r6
   07CA 96                 1555 	subb	a,@r0
   07CB EF                 1556 	mov	a,r7
   07CC 64 80              1557 	xrl	a,#0x80
   07CE 08                 1558 	inc	r0
   07CF 86 F0              1559 	mov	b,@r0
   07D1 63 F0 80           1560 	xrl	b,#0x80
   07D4 95 F0              1561 	subb	a,b
   07D6 40 03              1562 	jc	00182$
   07D8 02s09r39           1563 	ljmp	00121$
   07DB                    1564 00182$:
                           1565 ;	../../core/lib/ifft.c:153: n2 = xre[k];
   07DB E5*00              1566 	mov	a,_bp
   07DD 24 34              1567 	add	a,#0x34
   07DF F8                 1568 	mov	r0,a
   07E0 A6 06              1569 	mov	@r0,ar6
   07E2 EF                 1570 	mov	a,r7
   07E3 C6                 1571 	xch	a,@r0
   07E4 25 E0              1572 	add	a,acc
   07E6 C6                 1573 	xch	a,@r0
   07E7 33                 1574 	rlc	a
   07E8 08                 1575 	inc	r0
   07E9 F6                 1576 	mov	@r0,a
   07EA C0 06              1577 	push	ar6
   07EC C0 07              1578 	push	ar7
   07EE A8*00              1579 	mov	r0,_bp
   07F0 08                 1580 	inc	r0
   07F1 E5*00              1581 	mov	a,_bp
   07F3 24 34              1582 	add	a,#0x34
   07F5 F9                 1583 	mov	r1,a
   07F6 E7                 1584 	mov	a,@r1
   07F7 26                 1585 	add	a,@r0
   07F8 FC                 1586 	mov	r4,a
   07F9 09                 1587 	inc	r1
   07FA E7                 1588 	mov	a,@r1
   07FB 08                 1589 	inc	r0
   07FC 36                 1590 	addc	a,@r0
   07FD FE                 1591 	mov	r6,a
   07FE 08                 1592 	inc	r0
   07FF 86 07              1593 	mov	ar7,@r0
   0801 8C 82              1594 	mov	dpl,r4
   0803 8E 83              1595 	mov	dph,r6
   0805 8F F0              1596 	mov	b,r7
   0807 12s00r00           1597 	lcall	__gptrget
   080A FA                 1598 	mov	r2,a
   080B A3                 1599 	inc	dptr
   080C 12s00r00           1600 	lcall	__gptrget
   080F FD                 1601 	mov	r5,a
   0810 E5*00              1602 	mov	a,_bp
   0812 24 06              1603 	add	a,#0x06
   0814 F8                 1604 	mov	r0,a
   0815 A6 02              1605 	mov	@r0,ar2
   0817 08                 1606 	inc	r0
   0818 A6 05              1607 	mov	@r0,ar5
                           1608 ;	../../core/lib/ifft.c:154: xre[k] = xre[p];
   081A E5*00              1609 	mov	a,_bp
   081C 24 08              1610 	add	a,#0x08
   081E F8                 1611 	mov	r0,a
   081F E5*00              1612 	mov	a,_bp
   0821 24 30              1613 	add	a,#0x30
   0823 F9                 1614 	mov	r1,a
   0824 E6                 1615 	mov	a,@r0
   0825 F7                 1616 	mov	@r1,a
   0826 08                 1617 	inc	r0
   0827 E6                 1618 	mov	a,@r0
   0828 C7                 1619 	xch	a,@r1
   0829 25 E0              1620 	add	a,acc
   082B C7                 1621 	xch	a,@r1
   082C 33                 1622 	rlc	a
   082D 09                 1623 	inc	r1
   082E F7                 1624 	mov	@r1,a
   082F A8*00              1625 	mov	r0,_bp
   0831 08                 1626 	inc	r0
   0832 E5*00              1627 	mov	a,_bp
   0834 24 30              1628 	add	a,#0x30
   0836 F9                 1629 	mov	r1,a
   0837 E7                 1630 	mov	a,@r1
   0838 26                 1631 	add	a,@r0
   0839 C0 E0              1632 	push	acc
   083B 09                 1633 	inc	r1
   083C E7                 1634 	mov	a,@r1
   083D 08                 1635 	inc	r0
   083E 36                 1636 	addc	a,@r0
   083F C0 E0              1637 	push	acc
   0841 08                 1638 	inc	r0
   0842 E6                 1639 	mov	a,@r0
   0843 C0 E0              1640 	push	acc
   0845 E5*00              1641 	mov	a,_bp
   0847 24 2E              1642 	add	a,#0x2e
   0849 F8                 1643 	mov	r0,a
   084A D0 E0              1644 	pop	acc
   084C F6                 1645 	mov	@r0,a
   084D 18                 1646 	dec	r0
   084E D0 E0              1647 	pop	acc
   0850 F6                 1648 	mov	@r0,a
   0851 18                 1649 	dec	r0
   0852 D0 E0              1650 	pop	acc
   0854 F6                 1651 	mov	@r0,a
   0855 E5*00              1652 	mov	a,_bp
   0857 24 2C              1653 	add	a,#0x2c
   0859 F8                 1654 	mov	r0,a
   085A 86 82              1655 	mov	dpl,@r0
   085C 08                 1656 	inc	r0
   085D 86 83              1657 	mov	dph,@r0
   085F 08                 1658 	inc	r0
   0860 86 F0              1659 	mov	b,@r0
   0862 12s00r00           1660 	lcall	__gptrget
   0865 FB                 1661 	mov	r3,a
   0866 A3                 1662 	inc	dptr
   0867 12s00r00           1663 	lcall	__gptrget
   086A FD                 1664 	mov	r5,a
   086B 8C 82              1665 	mov	dpl,r4
   086D 8E 83              1666 	mov	dph,r6
   086F 8F F0              1667 	mov	b,r7
   0871 EB                 1668 	mov	a,r3
   0872 12s00r00           1669 	lcall	__gptrput
   0875 A3                 1670 	inc	dptr
   0876 ED                 1671 	mov	a,r5
   0877 12s00r00           1672 	lcall	__gptrput
                           1673 ;	../../core/lib/ifft.c:155: xre[p] = n2;
   087A E5*00              1674 	mov	a,_bp
   087C 24 06              1675 	add	a,#0x06
   087E F8                 1676 	mov	r0,a
   087F 86 03              1677 	mov	ar3,@r0
   0881 08                 1678 	inc	r0
   0882 86 07              1679 	mov	ar7,@r0
   0884 E5*00              1680 	mov	a,_bp
   0886 24 2C              1681 	add	a,#0x2c
   0888 F8                 1682 	mov	r0,a
   0889 86 82              1683 	mov	dpl,@r0
   088B 08                 1684 	inc	r0
   088C 86 83              1685 	mov	dph,@r0
   088E 08                 1686 	inc	r0
   088F 86 F0              1687 	mov	b,@r0
   0891 EB                 1688 	mov	a,r3
   0892 12s00r00           1689 	lcall	__gptrput
   0895 A3                 1690 	inc	dptr
   0896 EF                 1691 	mov	a,r7
   0897 12s00r00           1692 	lcall	__gptrput
                           1693 ;	../../core/lib/ifft.c:157: n2 = xim[k];
   089A E5*00              1694 	mov	a,_bp
   089C 24 FB              1695 	add	a,#0xfb
   089E F8                 1696 	mov	r0,a
   089F E5*00              1697 	mov	a,_bp
   08A1 24 34              1698 	add	a,#0x34
   08A3 F9                 1699 	mov	r1,a
   08A4 E7                 1700 	mov	a,@r1
   08A5 26                 1701 	add	a,@r0
   08A6 FD                 1702 	mov	r5,a
   08A7 09                 1703 	inc	r1
   08A8 E7                 1704 	mov	a,@r1
   08A9 08                 1705 	inc	r0
   08AA 36                 1706 	addc	a,@r0
   08AB FE                 1707 	mov	r6,a
   08AC 08                 1708 	inc	r0
   08AD 86 07              1709 	mov	ar7,@r0
   08AF 8D 82              1710 	mov	dpl,r5
   08B1 8E 83              1711 	mov	dph,r6
   08B3 8F F0              1712 	mov	b,r7
   08B5 12s00r00           1713 	lcall	__gptrget
   08B8 FB                 1714 	mov	r3,a
   08B9 A3                 1715 	inc	dptr
   08BA 12s00r00           1716 	lcall	__gptrget
   08BD FC                 1717 	mov	r4,a
   08BE E5*00              1718 	mov	a,_bp
   08C0 24 06              1719 	add	a,#0x06
   08C2 F8                 1720 	mov	r0,a
   08C3 A6 03              1721 	mov	@r0,ar3
   08C5 08                 1722 	inc	r0
   08C6 A6 04              1723 	mov	@r0,ar4
                           1724 ;	../../core/lib/ifft.c:158: xim[k] = xim[p];
   08C8 E5*00              1725 	mov	a,_bp
   08CA 24 FB              1726 	add	a,#0xfb
   08CC F8                 1727 	mov	r0,a
   08CD E5*00              1728 	mov	a,_bp
   08CF 24 30              1729 	add	a,#0x30
   08D1 F9                 1730 	mov	r1,a
   08D2 E7                 1731 	mov	a,@r1
   08D3 26                 1732 	add	a,@r0
   08D4 C0 E0              1733 	push	acc
   08D6 09                 1734 	inc	r1
   08D7 E7                 1735 	mov	a,@r1
   08D8 08                 1736 	inc	r0
   08D9 36                 1737 	addc	a,@r0
   08DA C0 E0              1738 	push	acc
   08DC 08                 1739 	inc	r0
   08DD E6                 1740 	mov	a,@r0
   08DE C0 E0              1741 	push	acc
   08E0 E5*00              1742 	mov	a,_bp
   08E2 24 36              1743 	add	a,#0x36
   08E4 F8                 1744 	mov	r0,a
   08E5 D0 E0              1745 	pop	acc
   08E7 F6                 1746 	mov	@r0,a
   08E8 18                 1747 	dec	r0
   08E9 D0 E0              1748 	pop	acc
   08EB F6                 1749 	mov	@r0,a
   08EC 18                 1750 	dec	r0
   08ED D0 E0              1751 	pop	acc
   08EF F6                 1752 	mov	@r0,a
   08F0 E5*00              1753 	mov	a,_bp
   08F2 24 34              1754 	add	a,#0x34
   08F4 F8                 1755 	mov	r0,a
   08F5 86 82              1756 	mov	dpl,@r0
   08F7 08                 1757 	inc	r0
   08F8 86 83              1758 	mov	dph,@r0
   08FA 08                 1759 	inc	r0
   08FB 86 F0              1760 	mov	b,@r0
   08FD 12s00r00           1761 	lcall	__gptrget
   0900 FB                 1762 	mov	r3,a
   0901 A3                 1763 	inc	dptr
   0902 12s00r00           1764 	lcall	__gptrget
   0905 FC                 1765 	mov	r4,a
   0906 8D 82              1766 	mov	dpl,r5
   0908 8E 83              1767 	mov	dph,r6
   090A 8F F0              1768 	mov	b,r7
   090C EB                 1769 	mov	a,r3
   090D 12s00r00           1770 	lcall	__gptrput
   0910 A3                 1771 	inc	dptr
   0911 EC                 1772 	mov	a,r4
   0912 12s00r00           1773 	lcall	__gptrput
                           1774 ;	../../core/lib/ifft.c:159: xim[p] = n2;
   0915 E5*00              1775 	mov	a,_bp
   0917 24 06              1776 	add	a,#0x06
   0919 F8                 1777 	mov	r0,a
   091A 86 03              1778 	mov	ar3,@r0
   091C 08                 1779 	inc	r0
   091D 86 07              1780 	mov	ar7,@r0
   091F E5*00              1781 	mov	a,_bp
   0921 24 34              1782 	add	a,#0x34
   0923 F8                 1783 	mov	r0,a
   0924 86 82              1784 	mov	dpl,@r0
   0926 08                 1785 	inc	r0
   0927 86 83              1786 	mov	dph,@r0
   0929 08                 1787 	inc	r0
   092A 86 F0              1788 	mov	b,@r0
   092C EB                 1789 	mov	a,r3
   092D 12s00r00           1790 	lcall	__gptrput
   0930 A3                 1791 	inc	dptr
   0931 EF                 1792 	mov	a,r7
   0932 12s00r00           1793 	lcall	__gptrput
                           1794 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
   0935 D0 07              1795 	pop	ar7
   0937 D0 06              1796 	pop	ar6
                           1797 ;	../../core/lib/ifft.c:159: xim[p] = n2;
   0939                    1798 00121$:
                           1799 ;	../../core/lib/ifft.c:150: for (k = 0; k < n; k++) {
   0939 0E                 1800 	inc	r6
   093A BE 00 01           1801 	cjne	r6,#0x00,00183$
   093D 0F                 1802 	inc	r7
   093E                    1803 00183$:
   093E 02s07r82           1804 	ljmp	00119$
   0941                    1805 00122$:
                           1806 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
   0941 E5*00              1807 	mov	a,_bp
   0943 24 18              1808 	add	a,#0x18
   0945 F8                 1809 	mov	r0,a
   0946 86 06              1810 	mov	ar6,@r0
   0948 08                 1811 	inc	r0
   0949 86 07              1812 	mov	ar7,@r0
   094B E5*00              1813 	mov	a,_bp
   094D 24 06              1814 	add	a,#0x06
   094F F8                 1815 	mov	r0,a
   0950 A6 06              1816 	mov	@r0,ar6
   0952 08                 1817 	inc	r0
   0953 A6 07              1818 	mov	@r0,ar7
   0955 E5*00              1819 	mov	a,_bp
   0957 24 0C              1820 	add	a,#0x0c
   0959 F8                 1821 	mov	r0,a
   095A E4                 1822 	clr	a
   095B F6                 1823 	mov	@r0,a
   095C 08                 1824 	inc	r0
   095D F6                 1825 	mov	@r0,a
   095E                    1826 00123$:
   095E E5*00              1827 	mov	a,_bp
   0960 24 0C              1828 	add	a,#0x0c
   0962 F8                 1829 	mov	r0,a
   0963 86 04              1830 	mov	ar4,@r0
   0965 08                 1831 	inc	r0
   0966 86 05              1832 	mov	ar5,@r0
   0968 E5*00              1833 	mov	a,_bp
   096A 24 06              1834 	add	a,#0x06
   096C F8                 1835 	mov	r0,a
   096D C3                 1836 	clr	c
   096E EC                 1837 	mov	a,r4
   096F 96                 1838 	subb	a,@r0
   0970 ED                 1839 	mov	a,r5
   0971 08                 1840 	inc	r0
   0972 96                 1841 	subb	a,@r0
   0973 40 03              1842 	jc	00184$
   0975 02s0Ar64           1843 	ljmp	00127$
   0978                    1844 00184$:
                           1845 ;	../../core/lib/ifft.c:166: xre[i] = (ABS(xre[i]) + ABS(xim[i]));
   0978 E5*00              1846 	mov	a,_bp
   097A 24 0C              1847 	add	a,#0x0c
   097C F8                 1848 	mov	r0,a
   097D 86 04              1849 	mov	ar4,@r0
   097F 08                 1850 	inc	r0
   0980 E6                 1851 	mov	a,@r0
   0981 CC                 1852 	xch	a,r4
   0982 25 E0              1853 	add	a,acc
   0984 CC                 1854 	xch	a,r4
   0985 33                 1855 	rlc	a
   0986 FD                 1856 	mov	r5,a
   0987 A8*00              1857 	mov	r0,_bp
   0989 08                 1858 	inc	r0
   098A EC                 1859 	mov	a,r4
   098B 26                 1860 	add	a,@r0
   098C FC                 1861 	mov	r4,a
   098D ED                 1862 	mov	a,r5
   098E 08                 1863 	inc	r0
   098F 36                 1864 	addc	a,@r0
   0990 FB                 1865 	mov	r3,a
   0991 08                 1866 	inc	r0
   0992 86 05              1867 	mov	ar5,@r0
   0994 8C 82              1868 	mov	dpl,r4
   0996 8B 83              1869 	mov	dph,r3
   0998 8D F0              1870 	mov	b,r5
   099A 12s00r00           1871 	lcall	__gptrget
   099D FA                 1872 	mov	r2,a
   099E A3                 1873 	inc	dptr
   099F 12s00r00           1874 	lcall	__gptrget
   09A2 FF                 1875 	mov	r7,a
   09A3 30 E7 18           1876 	jnb	acc.7,00129$
   09A6 8C 82              1877 	mov	dpl,r4
   09A8 8B 83              1878 	mov	dph,r3
   09AA 8D F0              1879 	mov	b,r5
   09AC 12s00r00           1880 	lcall	__gptrget
   09AF FA                 1881 	mov	r2,a
   09B0 A3                 1882 	inc	dptr
   09B1 12s00r00           1883 	lcall	__gptrget
   09B4 FF                 1884 	mov	r7,a
   09B5 C3                 1885 	clr	c
   09B6 E4                 1886 	clr	a
   09B7 9A                 1887 	subb	a,r2
   09B8 FE                 1888 	mov	r6,a
   09B9 E4                 1889 	clr	a
   09BA 9F                 1890 	subb	a,r7
   09BB FF                 1891 	mov	r7,a
   09BC 80 0F              1892 	sjmp	00130$
   09BE                    1893 00129$:
   09BE 8C 82              1894 	mov	dpl,r4
   09C0 8B 83              1895 	mov	dph,r3
   09C2 8D F0              1896 	mov	b,r5
   09C4 12s00r00           1897 	lcall	__gptrget
   09C7 FE                 1898 	mov	r6,a
   09C8 A3                 1899 	inc	dptr
   09C9 12s00r00           1900 	lcall	__gptrget
   09CC FF                 1901 	mov	r7,a
   09CD                    1902 00130$:
   09CD C0 04              1903 	push	ar4
   09CF C0 03              1904 	push	ar3
   09D1 C0 05              1905 	push	ar5
   09D3 E5*00              1906 	mov	a,_bp
   09D5 24 0C              1907 	add	a,#0x0c
   09D7 F8                 1908 	mov	r0,a
   09D8 86 02              1909 	mov	ar2,@r0
   09DA 08                 1910 	inc	r0
   09DB E6                 1911 	mov	a,@r0
   09DC CA                 1912 	xch	a,r2
   09DD 25 E0              1913 	add	a,acc
   09DF CA                 1914 	xch	a,r2
   09E0 33                 1915 	rlc	a
   09E1 FD                 1916 	mov	r5,a
   09E2 E5*00              1917 	mov	a,_bp
   09E4 24 FB              1918 	add	a,#0xfb
   09E6 F8                 1919 	mov	r0,a
   09E7 EA                 1920 	mov	a,r2
   09E8 26                 1921 	add	a,@r0
   09E9 FA                 1922 	mov	r2,a
   09EA ED                 1923 	mov	a,r5
   09EB 08                 1924 	inc	r0
   09EC 36                 1925 	addc	a,@r0
   09ED FD                 1926 	mov	r5,a
   09EE 08                 1927 	inc	r0
   09EF 86 04              1928 	mov	ar4,@r0
   09F1 8A 82              1929 	mov	dpl,r2
   09F3 8D 83              1930 	mov	dph,r5
   09F5 8C F0              1931 	mov	b,r4
   09F7 E5*00              1932 	mov	a,_bp
   09F9 24 30              1933 	add	a,#0x30
   09FB F8                 1934 	mov	r0,a
   09FC 12s00r00           1935 	lcall	__gptrget
   09FF F6                 1936 	mov	@r0,a
   0A00 A3                 1937 	inc	dptr
   0A01 12s00r00           1938 	lcall	__gptrget
   0A04 08                 1939 	inc	r0
   0A05 F6                 1940 	mov	@r0,a
   0A06 E5*00              1941 	mov	a,_bp
   0A08 24 30              1942 	add	a,#0x30
   0A0A F8                 1943 	mov	r0,a
   0A0B 08                 1944 	inc	r0
   0A0C E6                 1945 	mov	a,@r0
   0A0D D0 05              1946 	pop	ar5
   0A0F D0 03              1947 	pop	ar3
   0A11 D0 04              1948 	pop	ar4
   0A13 30 E7 15           1949 	jnb	acc.7,00131$
   0A16 E5*00              1950 	mov	a,_bp
   0A18 24 30              1951 	add	a,#0x30
   0A1A F8                 1952 	mov	r0,a
   0A1B E5*00              1953 	mov	a,_bp
   0A1D 24 2C              1954 	add	a,#0x2c
   0A1F F9                 1955 	mov	r1,a
   0A20 C3                 1956 	clr	c
   0A21 E4                 1957 	clr	a
   0A22 96                 1958 	subb	a,@r0
   0A23 F7                 1959 	mov	@r1,a
   0A24 08                 1960 	inc	r0
   0A25 E4                 1961 	clr	a
   0A26 96                 1962 	subb	a,@r0
   0A27 09                 1963 	inc	r1
   0A28 F7                 1964 	mov	@r1,a
   0A29 80 10              1965 	sjmp	00132$
   0A2B                    1966 00131$:
   0A2B E5*00              1967 	mov	a,_bp
   0A2D 24 30              1968 	add	a,#0x30
   0A2F F8                 1969 	mov	r0,a
   0A30 E5*00              1970 	mov	a,_bp
   0A32 24 2C              1971 	add	a,#0x2c
   0A34 F9                 1972 	mov	r1,a
   0A35 E6                 1973 	mov	a,@r0
   0A36 F7                 1974 	mov	@r1,a
   0A37 08                 1975 	inc	r0
   0A38 09                 1976 	inc	r1
   0A39 E6                 1977 	mov	a,@r0
   0A3A F7                 1978 	mov	@r1,a
   0A3B                    1979 00132$:
   0A3B E5*00              1980 	mov	a,_bp
   0A3D 24 2C              1981 	add	a,#0x2c
   0A3F F8                 1982 	mov	r0,a
   0A40 E6                 1983 	mov	a,@r0
   0A41 2E                 1984 	add	a,r6
   0A42 FA                 1985 	mov	r2,a
   0A43 08                 1986 	inc	r0
   0A44 E6                 1987 	mov	a,@r0
   0A45 3F                 1988 	addc	a,r7
   0A46 FF                 1989 	mov	r7,a
   0A47 8C 82              1990 	mov	dpl,r4
   0A49 8B 83              1991 	mov	dph,r3
   0A4B 8D F0              1992 	mov	b,r5
   0A4D EA                 1993 	mov	a,r2
   0A4E 12s00r00           1994 	lcall	__gptrput
   0A51 A3                 1995 	inc	dptr
   0A52 EF                 1996 	mov	a,r7
   0A53 12s00r00           1997 	lcall	__gptrput
                           1998 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
   0A56 E5*00              1999 	mov	a,_bp
   0A58 24 0C              2000 	add	a,#0x0c
   0A5A F8                 2001 	mov	r0,a
   0A5B 06                 2002 	inc	@r0
   0A5C B6 00 02           2003 	cjne	@r0,#0x00,00187$
   0A5F 08                 2004 	inc	r0
   0A60 06                 2005 	inc	@r0
   0A61                    2006 00187$:
   0A61 02s09r5E           2007 	ljmp	00123$
   0A64                    2008 00127$:
   0A64 85*00 81           2009 	mov	sp,_bp
   0A67 D0*00              2010 	pop	_bp
   0A69 22                 2011 	ret
                           2012 	.area CSEG    (CODE)
                           2013 	.area CONST   (CODE)
   0000                    2014 _SIN_TAB:
   0000 00                 2015 	.db #0x00	;  0
   0001 06                 2016 	.db #0x06	;  6
   0002 0D                 2017 	.db #0x0D	;  13
   0003 14                 2018 	.db #0x14	;  20
   0004 1A                 2019 	.db #0x1A	;  26
   0005 21                 2020 	.db #0x21	;  33
   0006 27                 2021 	.db #0x27	;  39
   0007 2D                 2022 	.db #0x2D	;  45
   0008 34                 2023 	.db #0x34	;  52	'4'
   0009 3A                 2024 	.db #0x3A	;  58
   000A 3F                 2025 	.db #0x3F	;  63
   000B 45                 2026 	.db #0x45	;  69	'E'
   000C 4B                 2027 	.db #0x4B	;  75	'K'
   000D 50                 2028 	.db #0x50	;  80	'P'
   000E 55                 2029 	.db #0x55	;  85	'U'
   000F 5A                 2030 	.db #0x5A	;  90	'Z'
   0010 5F                 2031 	.db #0x5F	;  95
   0011 63                 2032 	.db #0x63	;  99	'c'
   0012 67                 2033 	.db #0x67	;  103	'g'
   0013 6B                 2034 	.db #0x6B	;  107	'k'
   0014 6E                 2035 	.db #0x6E	;  110	'n'
   0015 72                 2036 	.db #0x72	;  114	'r'
   0016 74                 2037 	.db #0x74	;  116	't'
   0017 77                 2038 	.db #0x77	;  119	'w'
   0018 79                 2039 	.db #0x79	;  121	'y'
   0019 7B                 2040 	.db #0x7B	;  123
   001A 7D                 2041 	.db #0x7D	;  125
   001B 7E                 2042 	.db #0x7E	;  126
   001C 7F                 2043 	.db #0x7F	;  127
   001D 7F                 2044 	.db #0x7F	;  127
   001E 7F                 2045 	.db #0x7F	;  127
   001F 7F                 2046 	.db #0x7F	;  127
   0020 7F                 2047 	.db #0x7F	;  127
   0021 7E                 2048 	.db #0x7E	;  126
   0022 7D                 2049 	.db #0x7D	;  125
   0023 7B                 2050 	.db #0x7B	;  123
   0024 79                 2051 	.db #0x79	;  121	'y'
   0025 77                 2052 	.db #0x77	;  119	'w'
   0026 74                 2053 	.db #0x74	;  116	't'
   0027 72                 2054 	.db #0x72	;  114	'r'
   0028 6E                 2055 	.db #0x6E	;  110	'n'
   0029 6B                 2056 	.db #0x6B	;  107	'k'
   002A 67                 2057 	.db #0x67	;  103	'g'
   002B 63                 2058 	.db #0x63	;  99	'c'
   002C 5F                 2059 	.db #0x5F	;  95
   002D 5A                 2060 	.db #0x5A	;  90	'Z'
   002E 55                 2061 	.db #0x55	;  85	'U'
   002F 50                 2062 	.db #0x50	;  80	'P'
   0030 4B                 2063 	.db #0x4B	;  75	'K'
   0031 45                 2064 	.db #0x45	;  69	'E'
   0032 3F                 2065 	.db #0x3F	;  63
   0033 3A                 2066 	.db #0x3A	;  58
   0034 34                 2067 	.db #0x34	;  52	'4'
   0035 2D                 2068 	.db #0x2D	;  45
   0036 27                 2069 	.db #0x27	;  39
   0037 21                 2070 	.db #0x21	;  33
   0038 1A                 2071 	.db #0x1A	;  26
   0039 14                 2072 	.db #0x14	;  20
   003A 0D                 2073 	.db #0x0D	;  13
   003B 06                 2074 	.db #0x06	;  6
   003C 00                 2075 	.db #0x00	;  0
   003D FA                 2076 	.db #0xFA	; -6
   003E F3                 2077 	.db #0xF3	; -13
   003F EC                 2078 	.db #0xEC	; -20
   0040 E6                 2079 	.db #0xE6	; -26
   0041 DF                 2080 	.db #0xDF	; -33
   0042 D9                 2081 	.db #0xD9	; -39
   0043 D3                 2082 	.db #0xD3	; -45
   0044 CC                 2083 	.db #0xCC	; -52
   0045 C6                 2084 	.db #0xC6	; -58
   0046 C1                 2085 	.db #0xC1	; -63
   0047 BB                 2086 	.db #0xBB	; -69
   0048 B5                 2087 	.db #0xB5	; -75
   0049 B0                 2088 	.db #0xB0	; -80
   004A AB                 2089 	.db #0xAB	; -85
   004B A6                 2090 	.db #0xA6	; -90
   004C A1                 2091 	.db #0xA1	; -95
   004D 9D                 2092 	.db #0x9D	; -99
   004E 99                 2093 	.db #0x99	; -103
   004F 95                 2094 	.db #0x95	; -107
   0050 92                 2095 	.db #0x92	; -110
   0051 8E                 2096 	.db #0x8E	; -114
   0052 8C                 2097 	.db #0x8C	; -116
   0053 89                 2098 	.db #0x89	; -119
   0054 87                 2099 	.db #0x87	; -121
   0055 85                 2100 	.db #0x85	; -123
   0056 83                 2101 	.db #0x83	; -125
   0057 82                 2102 	.db #0x82	; -126
   0058 81                 2103 	.db #0x81	; -127
   0059 81                 2104 	.db #0x81	; -127
   005A 81                 2105 	.db #0x81	; -127
   005B 81                 2106 	.db #0x81	; -127
   005C 81                 2107 	.db #0x81	; -127
   005D 82                 2108 	.db #0x82	; -126
   005E 83                 2109 	.db #0x83	; -125
   005F 85                 2110 	.db #0x85	; -123
   0060 87                 2111 	.db #0x87	; -121
   0061 89                 2112 	.db #0x89	; -119
   0062 8C                 2113 	.db #0x8C	; -116
   0063 8E                 2114 	.db #0x8E	; -114
   0064 92                 2115 	.db #0x92	; -110
   0065 95                 2116 	.db #0x95	; -107
   0066 99                 2117 	.db #0x99	; -103
   0067 9D                 2118 	.db #0x9D	; -99
   0068 A1                 2119 	.db #0xA1	; -95
   0069 A6                 2120 	.db #0xA6	; -90
   006A AB                 2121 	.db #0xAB	; -85
   006B B0                 2122 	.db #0xB0	; -80
   006C B5                 2123 	.db #0xB5	; -75
   006D BB                 2124 	.db #0xBB	; -69
   006E C1                 2125 	.db #0xC1	; -63
   006F C6                 2126 	.db #0xC6	; -58
   0070 CC                 2127 	.db #0xCC	; -52
   0071 D3                 2128 	.db #0xD3	; -45
   0072 D9                 2129 	.db #0xD9	; -39
   0073 DF                 2130 	.db #0xDF	; -33
   0074 E6                 2131 	.db #0xE6	; -26
   0075 EC                 2132 	.db #0xEC	; -20
   0076 F3                 2133 	.db #0xF3	; -13
   0077 FA                 2134 	.db #0xFA	; -6
                           2135 	.area XINIT   (CODE)
                           2136 	.area CABS    (ABS,CODE)
