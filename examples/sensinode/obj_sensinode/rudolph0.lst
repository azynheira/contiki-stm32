                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:18 2013
                              5 ;--------------------------------------------------------
                              6 	.module rudolph0
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _stbroadcast_set_timer
                             13 	.globl _stbroadcast_cancel
                             14 	.globl _stbroadcast_send_stubborn
                             15 	.globl _stbroadcast_close
                             16 	.globl _stbroadcast_open
                             17 	.globl _polite_send
                             18 	.globl _polite_close
                             19 	.globl _polite_open
                             20 	.globl _packetbuf_hdralloc
                             21 	.globl _packetbuf_reference
                             22 	.globl _packetbuf_hdrptr
                             23 	.globl _packetbuf_dataptr
                             24 	.globl _packetbuf_clear
                             25 	.globl _IRCON2_P2IF
                             26 	.globl _IRCON2_UTX0IF
                             27 	.globl _IRCON2_UTX1IF
                             28 	.globl _IRCON2_P1IF
                             29 	.globl _IRCON2_WDTIF
                             30 	.globl _CY
                             31 	.globl _AC
                             32 	.globl _F0
                             33 	.globl _RS1
                             34 	.globl _RS0
                             35 	.globl _OV
                             36 	.globl _F1
                             37 	.globl _P
                             38 	.globl _IRCON_DMAIF
                             39 	.globl _IRCON_T1IF
                             40 	.globl _IRCON_T2IF
                             41 	.globl _IRCON_T3IF
                             42 	.globl _IRCON_T4IF
                             43 	.globl _IRCON_P0IF
                             44 	.globl _IRCON_STIF
                             45 	.globl _IEN1_DMAIE
                             46 	.globl _IEN1_T1IE
                             47 	.globl _IEN1_T2IE
                             48 	.globl _IEN1_T3IE
                             49 	.globl _IEN1_T4IE
                             50 	.globl _IEN1_P0IE
                             51 	.globl _IEN0_RFERRIE
                             52 	.globl _IEN0_ADCIE
                             53 	.globl _IEN0_URX0IE
                             54 	.globl _IEN0_URX1IE
                             55 	.globl _IEN0_ENCIE
                             56 	.globl _IEN0_STIE
                             57 	.globl _IEN0_EA
                             58 	.globl _EA
                             59 	.globl _P2_4
                             60 	.globl _P2_3
                             61 	.globl _P2_2
                             62 	.globl _P2_1
                             63 	.globl _P2_0
                             64 	.globl _S0CON_ENCIF_0
                             65 	.globl _S0CON_ENCIF_1
                             66 	.globl _P1_7
                             67 	.globl _P1_6
                             68 	.globl _P1_5
                             69 	.globl _P1_4
                             70 	.globl _P1_3
                             71 	.globl _P1_2
                             72 	.globl _P1_1
                             73 	.globl _P1_0
                             74 	.globl _TCON_IT0
                             75 	.globl _TCON_RFERRIF
                             76 	.globl _TCON_IT1
                             77 	.globl _TCON_URX0IF
                             78 	.globl _TCON_ADCIF
                             79 	.globl _TCON_URX1IF
                             80 	.globl _P0_0
                             81 	.globl _P0_1
                             82 	.globl _P0_2
                             83 	.globl _P0_3
                             84 	.globl _P0_4
                             85 	.globl _P0_5
                             86 	.globl _P0_6
                             87 	.globl _P0_7
                             88 	.globl _P2DIR
                             89 	.globl _P1DIR
                             90 	.globl _P0DIR
                             91 	.globl _U1GCR
                             92 	.globl _U1UCR
                             93 	.globl _U1BAUD
                             94 	.globl _U1BUF
                             95 	.globl _U1CSR
                             96 	.globl _P2INP
                             97 	.globl _P1INP
                             98 	.globl _P2SEL
                             99 	.globl _P1SEL
                            100 	.globl _P0SEL
                            101 	.globl _ADCCFG
                            102 	.globl _PERCFG
                            103 	.globl _B
                            104 	.globl _T4CC1
                            105 	.globl _T4CCTL1
                            106 	.globl _T4CC0
                            107 	.globl _T4CCTL0
                            108 	.globl _T4CTL
                            109 	.globl _T4CNT
                            110 	.globl _RFIF
                            111 	.globl _IRCON2
                            112 	.globl _T1CCTL2
                            113 	.globl _T1CCTL1
                            114 	.globl _T1CCTL0
                            115 	.globl _T1CTL
                            116 	.globl _T1CNTH
                            117 	.globl _T1CNTL
                            118 	.globl _RFST
                            119 	.globl _ACC
                            120 	.globl _T1CC2H
                            121 	.globl _T1CC2L
                            122 	.globl _T1CC1H
                            123 	.globl _T1CC1L
                            124 	.globl _T1CC0H
                            125 	.globl _T1CC0L
                            126 	.globl _RFD
                            127 	.globl _TIMIF
                            128 	.globl _DMAREQ
                            129 	.globl _DMAARM
                            130 	.globl _DMA0CFGH
                            131 	.globl _DMA0CFGL
                            132 	.globl _DMA1CFGH
                            133 	.globl _DMA1CFGL
                            134 	.globl _DMAIRQ
                            135 	.globl _PSW
                            136 	.globl _T3CC1
                            137 	.globl _T3CCTL1
                            138 	.globl _T3CC0
                            139 	.globl _T3CCTL0
                            140 	.globl _T3CTL
                            141 	.globl _T3CNT
                            142 	.globl _WDCTL
                            143 	.globl _T2CON
                            144 	.globl _MEMCTR
                            145 	.globl _CLKCON
                            146 	.globl _U0GCR
                            147 	.globl _U0UCR
                            148 	.globl _T2CNF
                            149 	.globl _U0BAUD
                            150 	.globl _U0BUF
                            151 	.globl _IRCON
                            152 	.globl _SLEEP
                            153 	.globl _RNDH
                            154 	.globl _RNDL
                            155 	.globl _ADCH
                            156 	.globl _ADCL
                            157 	.globl _IP1
                            158 	.globl _IEN1
                            159 	.globl _RCCTL
                            160 	.globl _ADCCON3
                            161 	.globl _ADCCON2
                            162 	.globl _ADCCON1
                            163 	.globl _ENCCS
                            164 	.globl _ENCDO
                            165 	.globl _ENCDI
                            166 	.globl _FWDATA
                            167 	.globl _FCTL
                            168 	.globl _FADDRH
                            169 	.globl _FADDRL
                            170 	.globl _FWT
                            171 	.globl _IP0
                            172 	.globl _IEN0
                            173 	.globl _IE
                            174 	.globl _T2THD
                            175 	.globl _T2TLD
                            176 	.globl _T2CAPHPH
                            177 	.globl _T2CAPLPL
                            178 	.globl _T2OF2
                            179 	.globl _T2OF1
                            180 	.globl _T2OF0
                            181 	.globl _P2
                            182 	.globl _PSBANK
                            183 	.globl _FMAP
                            184 	.globl _T2PEROF2
                            185 	.globl _T2PEROF1
                            186 	.globl _T2PEROF0
                            187 	.globl _S1CON
                            188 	.globl _IEN2
                            189 	.globl _HSRC
                            190 	.globl _S0CON
                            191 	.globl _ST2
                            192 	.globl _ST1
                            193 	.globl _ST0
                            194 	.globl _T2CMP
                            195 	.globl __XPAGE
                            196 	.globl _DPS
                            197 	.globl _RFIM
                            198 	.globl _P1
                            199 	.globl _P0INP
                            200 	.globl _P1IEN
                            201 	.globl _PICTL
                            202 	.globl _P2IFG
                            203 	.globl _P1IFG
                            204 	.globl _P0IFG
                            205 	.globl _TCON
                            206 	.globl _PCON
                            207 	.globl _U0CSR
                            208 	.globl _DPH1
                            209 	.globl _DPL1
                            210 	.globl _DPH0
                            211 	.globl _DPL0
                            212 	.globl _SP
                            213 	.globl _P0
                            214 	.globl _ADC_SHADOW
                            215 	.globl _U1BUF_SHADOW
                            216 	.globl _RFD_SHADOW
                            217 	.globl _U0BUF_SHADOW
                            218 	.globl _RFSTATUS
                            219 	.globl _CHIPID
                            220 	.globl _CHVER
                            221 	.globl _FSMTC1
                            222 	.globl _RXFIFOCNT
                            223 	.globl _IOCFG3
                            224 	.globl _IOCFG2
                            225 	.globl _IOCFG1
                            226 	.globl _IOCFG0
                            227 	.globl _SHORTADDRL
                            228 	.globl _SHORTADDRH
                            229 	.globl _PANIDL
                            230 	.globl _PANIDH
                            231 	.globl _IEEE_ADDR7
                            232 	.globl _IEEE_ADDR6
                            233 	.globl _IEEE_ADDR5
                            234 	.globl _IEEE_ADDR4
                            235 	.globl _IEEE_ADDR3
                            236 	.globl _IEEE_ADDR2
                            237 	.globl _IEEE_ADDR1
                            238 	.globl _IEEE_ADDR0
                            239 	.globl _DACTSTL
                            240 	.globl _DACTSTH
                            241 	.globl _ADCTSTL
                            242 	.globl _ADCTSTH
                            243 	.globl _FSMSTATE
                            244 	.globl _AGCCTRLL
                            245 	.globl _AGCCTRLH
                            246 	.globl _MANORL
                            247 	.globl _MANORH
                            248 	.globl _MANANDL
                            249 	.globl _MANANDH
                            250 	.globl _FSMTCL
                            251 	.globl _FSMTCH
                            252 	.globl _RFPWR
                            253 	.globl _CSPT
                            254 	.globl _CSPCTRL
                            255 	.globl _CSPZ
                            256 	.globl _CSPY
                            257 	.globl _CSPX
                            258 	.globl _FSCTRLL
                            259 	.globl _FSCTRLH
                            260 	.globl _RXCTRL1L
                            261 	.globl _RXCTRL1H
                            262 	.globl _RXCTRL0L
                            263 	.globl _RXCTRL0H
                            264 	.globl _TXCTRLL
                            265 	.globl _TXCTRLH
                            266 	.globl _SYNCWORDL
                            267 	.globl _SYNCWORDH
                            268 	.globl _RSSIL
                            269 	.globl _RSSIH
                            270 	.globl _MDMCTRL1L
                            271 	.globl _MDMCTRL1H
                            272 	.globl _MDMCTRL0L
                            273 	.globl _MDMCTRL0H
                            274 	.globl _rudolph0_open
                            275 	.globl _rudolph0_close
                            276 	.globl _rudolph0_send
                            277 	.globl _rudolph0_force_restart
                            278 	.globl _rudolph0_stop
                            279 	.globl _rudolph0_version
                            280 	.globl _rudolph0_set_version
                            281 ;--------------------------------------------------------
                            282 ; special function registers
                            283 ;--------------------------------------------------------
                            284 	.area RSEG    (ABS,DATA)
   0000                     285 	.org 0x0000
                    0080    286 _P0	=	0x0080
                    0081    287 _SP	=	0x0081
                    0082    288 _DPL0	=	0x0082
                    0083    289 _DPH0	=	0x0083
                    0084    290 _DPL1	=	0x0084
                    0085    291 _DPH1	=	0x0085
                    0086    292 _U0CSR	=	0x0086
                    0087    293 _PCON	=	0x0087
                    0088    294 _TCON	=	0x0088
                    0089    295 _P0IFG	=	0x0089
                    008A    296 _P1IFG	=	0x008a
                    008B    297 _P2IFG	=	0x008b
                    008C    298 _PICTL	=	0x008c
                    008D    299 _P1IEN	=	0x008d
                    008F    300 _P0INP	=	0x008f
                    0090    301 _P1	=	0x0090
                    0091    302 _RFIM	=	0x0091
                    0092    303 _DPS	=	0x0092
                    0093    304 __XPAGE	=	0x0093
                    0094    305 _T2CMP	=	0x0094
                    0095    306 _ST0	=	0x0095
                    0096    307 _ST1	=	0x0096
                    0097    308 _ST2	=	0x0097
                    0098    309 _S0CON	=	0x0098
                    0099    310 _HSRC	=	0x0099
                    009A    311 _IEN2	=	0x009a
                    009B    312 _S1CON	=	0x009b
                    009C    313 _T2PEROF0	=	0x009c
                    009D    314 _T2PEROF1	=	0x009d
                    009E    315 _T2PEROF2	=	0x009e
                    009F    316 _FMAP	=	0x009f
                    009F    317 _PSBANK	=	0x009f
                    00A0    318 _P2	=	0x00a0
                    00A1    319 _T2OF0	=	0x00a1
                    00A2    320 _T2OF1	=	0x00a2
                    00A3    321 _T2OF2	=	0x00a3
                    00A4    322 _T2CAPLPL	=	0x00a4
                    00A5    323 _T2CAPHPH	=	0x00a5
                    00A6    324 _T2TLD	=	0x00a6
                    00A7    325 _T2THD	=	0x00a7
                    00A8    326 _IE	=	0x00a8
                    00A8    327 _IEN0	=	0x00a8
                    00A9    328 _IP0	=	0x00a9
                    00AB    329 _FWT	=	0x00ab
                    00AC    330 _FADDRL	=	0x00ac
                    00AD    331 _FADDRH	=	0x00ad
                    00AE    332 _FCTL	=	0x00ae
                    00AF    333 _FWDATA	=	0x00af
                    00B1    334 _ENCDI	=	0x00b1
                    00B2    335 _ENCDO	=	0x00b2
                    00B3    336 _ENCCS	=	0x00b3
                    00B4    337 _ADCCON1	=	0x00b4
                    00B5    338 _ADCCON2	=	0x00b5
                    00B6    339 _ADCCON3	=	0x00b6
                    00B7    340 _RCCTL	=	0x00b7
                    00B8    341 _IEN1	=	0x00b8
                    00B9    342 _IP1	=	0x00b9
                    00BA    343 _ADCL	=	0x00ba
                    00BB    344 _ADCH	=	0x00bb
                    00BC    345 _RNDL	=	0x00bc
                    00BD    346 _RNDH	=	0x00bd
                    00BE    347 _SLEEP	=	0x00be
                    00C0    348 _IRCON	=	0x00c0
                    00C1    349 _U0BUF	=	0x00c1
                    00C2    350 _U0BAUD	=	0x00c2
                    00C3    351 _T2CNF	=	0x00c3
                    00C4    352 _U0UCR	=	0x00c4
                    00C5    353 _U0GCR	=	0x00c5
                    00C6    354 _CLKCON	=	0x00c6
                    00C7    355 _MEMCTR	=	0x00c7
                    00C8    356 _T2CON	=	0x00c8
                    00C9    357 _WDCTL	=	0x00c9
                    00CA    358 _T3CNT	=	0x00ca
                    00CB    359 _T3CTL	=	0x00cb
                    00CC    360 _T3CCTL0	=	0x00cc
                    00CD    361 _T3CC0	=	0x00cd
                    00CE    362 _T3CCTL1	=	0x00ce
                    00CF    363 _T3CC1	=	0x00cf
                    00D0    364 _PSW	=	0x00d0
                    00D1    365 _DMAIRQ	=	0x00d1
                    00D2    366 _DMA1CFGL	=	0x00d2
                    00D3    367 _DMA1CFGH	=	0x00d3
                    00D4    368 _DMA0CFGL	=	0x00d4
                    00D5    369 _DMA0CFGH	=	0x00d5
                    00D6    370 _DMAARM	=	0x00d6
                    00D7    371 _DMAREQ	=	0x00d7
                    00D8    372 _TIMIF	=	0x00d8
                    00D9    373 _RFD	=	0x00d9
                    00DA    374 _T1CC0L	=	0x00da
                    00DB    375 _T1CC0H	=	0x00db
                    00DC    376 _T1CC1L	=	0x00dc
                    00DD    377 _T1CC1H	=	0x00dd
                    00DE    378 _T1CC2L	=	0x00de
                    00DF    379 _T1CC2H	=	0x00df
                    00E0    380 _ACC	=	0x00e0
                    00E1    381 _RFST	=	0x00e1
                    00E2    382 _T1CNTL	=	0x00e2
                    00E3    383 _T1CNTH	=	0x00e3
                    00E4    384 _T1CTL	=	0x00e4
                    00E5    385 _T1CCTL0	=	0x00e5
                    00E6    386 _T1CCTL1	=	0x00e6
                    00E7    387 _T1CCTL2	=	0x00e7
                    00E8    388 _IRCON2	=	0x00e8
                    00E9    389 _RFIF	=	0x00e9
                    00EA    390 _T4CNT	=	0x00ea
                    00EB    391 _T4CTL	=	0x00eb
                    00EC    392 _T4CCTL0	=	0x00ec
                    00ED    393 _T4CC0	=	0x00ed
                    00EE    394 _T4CCTL1	=	0x00ee
                    00EF    395 _T4CC1	=	0x00ef
                    00F0    396 _B	=	0x00f0
                    00F1    397 _PERCFG	=	0x00f1
                    00F2    398 _ADCCFG	=	0x00f2
                    00F3    399 _P0SEL	=	0x00f3
                    00F4    400 _P1SEL	=	0x00f4
                    00F5    401 _P2SEL	=	0x00f5
                    00F6    402 _P1INP	=	0x00f6
                    00F7    403 _P2INP	=	0x00f7
                    00F8    404 _U1CSR	=	0x00f8
                    00F9    405 _U1BUF	=	0x00f9
                    00FA    406 _U1BAUD	=	0x00fa
                    00FB    407 _U1UCR	=	0x00fb
                    00FC    408 _U1GCR	=	0x00fc
                    00FD    409 _P0DIR	=	0x00fd
                    00FE    410 _P1DIR	=	0x00fe
                    00FF    411 _P2DIR	=	0x00ff
                            412 ;--------------------------------------------------------
                            413 ; special function bits
                            414 ;--------------------------------------------------------
                            415 	.area RSEG    (ABS,DATA)
   0000                     416 	.org 0x0000
                    0087    417 _P0_7	=	0x0087
                    0086    418 _P0_6	=	0x0086
                    0085    419 _P0_5	=	0x0085
                    0084    420 _P0_4	=	0x0084
                    0083    421 _P0_3	=	0x0083
                    0082    422 _P0_2	=	0x0082
                    0081    423 _P0_1	=	0x0081
                    0080    424 _P0_0	=	0x0080
                    008F    425 _TCON_URX1IF	=	0x008f
                    008D    426 _TCON_ADCIF	=	0x008d
                    008B    427 _TCON_URX0IF	=	0x008b
                    008A    428 _TCON_IT1	=	0x008a
                    0089    429 _TCON_RFERRIF	=	0x0089
                    0088    430 _TCON_IT0	=	0x0088
                    0090    431 _P1_0	=	0x0090
                    0091    432 _P1_1	=	0x0091
                    0092    433 _P1_2	=	0x0092
                    0093    434 _P1_3	=	0x0093
                    0094    435 _P1_4	=	0x0094
                    0095    436 _P1_5	=	0x0095
                    0096    437 _P1_6	=	0x0096
                    0097    438 _P1_7	=	0x0097
                    0099    439 _S0CON_ENCIF_1	=	0x0099
                    0098    440 _S0CON_ENCIF_0	=	0x0098
                    00A0    441 _P2_0	=	0x00a0
                    00A1    442 _P2_1	=	0x00a1
                    00A2    443 _P2_2	=	0x00a2
                    00A3    444 _P2_3	=	0x00a3
                    00A4    445 _P2_4	=	0x00a4
                    00AF    446 _EA	=	0x00af
                    00AF    447 _IEN0_EA	=	0x00af
                    00AD    448 _IEN0_STIE	=	0x00ad
                    00AC    449 _IEN0_ENCIE	=	0x00ac
                    00AB    450 _IEN0_URX1IE	=	0x00ab
                    00AA    451 _IEN0_URX0IE	=	0x00aa
                    00A9    452 _IEN0_ADCIE	=	0x00a9
                    00A8    453 _IEN0_RFERRIE	=	0x00a8
                    00BD    454 _IEN1_P0IE	=	0x00bd
                    00BC    455 _IEN1_T4IE	=	0x00bc
                    00BB    456 _IEN1_T3IE	=	0x00bb
                    00BA    457 _IEN1_T2IE	=	0x00ba
                    00B9    458 _IEN1_T1IE	=	0x00b9
                    00B8    459 _IEN1_DMAIE	=	0x00b8
                    00C7    460 _IRCON_STIF	=	0x00c7
                    00C5    461 _IRCON_P0IF	=	0x00c5
                    00C4    462 _IRCON_T4IF	=	0x00c4
                    00C3    463 _IRCON_T3IF	=	0x00c3
                    00C2    464 _IRCON_T2IF	=	0x00c2
                    00C1    465 _IRCON_T1IF	=	0x00c1
                    00C0    466 _IRCON_DMAIF	=	0x00c0
                    00D0    467 _P	=	0x00d0
                    00D1    468 _F1	=	0x00d1
                    00D2    469 _OV	=	0x00d2
                    00D3    470 _RS0	=	0x00d3
                    00D4    471 _RS1	=	0x00d4
                    00D5    472 _F0	=	0x00d5
                    00D6    473 _AC	=	0x00d6
                    00D7    474 _CY	=	0x00d7
                    00EC    475 _IRCON2_WDTIF	=	0x00ec
                    00EB    476 _IRCON2_P1IF	=	0x00eb
                    00EA    477 _IRCON2_UTX1IF	=	0x00ea
                    00E9    478 _IRCON2_UTX0IF	=	0x00e9
                    00E8    479 _IRCON2_P2IF	=	0x00e8
                            480 ;--------------------------------------------------------
                            481 ; overlayable register banks
                            482 ;--------------------------------------------------------
                            483 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     484 	.ds 8
                            485 ;--------------------------------------------------------
                            486 ; internal ram data
                            487 ;--------------------------------------------------------
                            488 	.area DSEG    (DATA)
                            489 ;--------------------------------------------------------
                            490 ; overlayable items in internal ram 
                            491 ;--------------------------------------------------------
                            492 	.area OSEG    (OVR,DATA)
                            493 ;--------------------------------------------------------
                            494 ; indirectly addressable internal ram data
                            495 ;--------------------------------------------------------
                            496 	.area ISEG    (DATA)
                            497 ;--------------------------------------------------------
                            498 ; absolute internal ram data
                            499 ;--------------------------------------------------------
                            500 	.area IABS    (ABS,DATA)
                            501 	.area IABS    (ABS,DATA)
                            502 ;--------------------------------------------------------
                            503 ; bit data
                            504 ;--------------------------------------------------------
                            505 	.area BSEG    (BIT)
                            506 ;--------------------------------------------------------
                            507 ; paged external ram data
                            508 ;--------------------------------------------------------
                            509 	.area PSEG    (PAG,XDATA)
                            510 ;--------------------------------------------------------
                            511 ; external ram data
                            512 ;--------------------------------------------------------
                            513 	.area XSEG    (XDATA)
                    DF02    514 _MDMCTRL0H	=	0xdf02
                    DF03    515 _MDMCTRL0L	=	0xdf03
                    DF04    516 _MDMCTRL1H	=	0xdf04
                    DF05    517 _MDMCTRL1L	=	0xdf05
                    DF06    518 _RSSIH	=	0xdf06
                    DF07    519 _RSSIL	=	0xdf07
                    DF08    520 _SYNCWORDH	=	0xdf08
                    DF09    521 _SYNCWORDL	=	0xdf09
                    DF0A    522 _TXCTRLH	=	0xdf0a
                    DF0B    523 _TXCTRLL	=	0xdf0b
                    DF0C    524 _RXCTRL0H	=	0xdf0c
                    DF0D    525 _RXCTRL0L	=	0xdf0d
                    DF0E    526 _RXCTRL1H	=	0xdf0e
                    DF0F    527 _RXCTRL1L	=	0xdf0f
                    DF10    528 _FSCTRLH	=	0xdf10
                    DF11    529 _FSCTRLL	=	0xdf11
                    DF12    530 _CSPX	=	0xdf12
                    DF13    531 _CSPY	=	0xdf13
                    DF14    532 _CSPZ	=	0xdf14
                    DF15    533 _CSPCTRL	=	0xdf15
                    DF16    534 _CSPT	=	0xdf16
                    DF17    535 _RFPWR	=	0xdf17
                    DF20    536 _FSMTCH	=	0xdf20
                    DF21    537 _FSMTCL	=	0xdf21
                    DF22    538 _MANANDH	=	0xdf22
                    DF23    539 _MANANDL	=	0xdf23
                    DF24    540 _MANORH	=	0xdf24
                    DF25    541 _MANORL	=	0xdf25
                    DF26    542 _AGCCTRLH	=	0xdf26
                    DF27    543 _AGCCTRLL	=	0xdf27
                    DF39    544 _FSMSTATE	=	0xdf39
                    DF3A    545 _ADCTSTH	=	0xdf3a
                    DF3B    546 _ADCTSTL	=	0xdf3b
                    DF3C    547 _DACTSTH	=	0xdf3c
                    DF3D    548 _DACTSTL	=	0xdf3d
                    DF43    549 _IEEE_ADDR0	=	0xdf43
                    DF44    550 _IEEE_ADDR1	=	0xdf44
                    DF45    551 _IEEE_ADDR2	=	0xdf45
                    DF46    552 _IEEE_ADDR3	=	0xdf46
                    DF47    553 _IEEE_ADDR4	=	0xdf47
                    DF48    554 _IEEE_ADDR5	=	0xdf48
                    DF49    555 _IEEE_ADDR6	=	0xdf49
                    DF4A    556 _IEEE_ADDR7	=	0xdf4a
                    DF4B    557 _PANIDH	=	0xdf4b
                    DF4C    558 _PANIDL	=	0xdf4c
                    DF4D    559 _SHORTADDRH	=	0xdf4d
                    DF4E    560 _SHORTADDRL	=	0xdf4e
                    DF4F    561 _IOCFG0	=	0xdf4f
                    DF50    562 _IOCFG1	=	0xdf50
                    DF51    563 _IOCFG2	=	0xdf51
                    DF52    564 _IOCFG3	=	0xdf52
                    DF53    565 _RXFIFOCNT	=	0xdf53
                    DF54    566 _FSMTC1	=	0xdf54
                    DF60    567 _CHVER	=	0xdf60
                    DF61    568 _CHIPID	=	0xdf61
                    DF62    569 _RFSTATUS	=	0xdf62
                    DFC1    570 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    571 _RFD_SHADOW	=	0xdfd9
                    DFF9    572 _U1BUF_SHADOW	=	0xdff9
                    DFBA    573 _ADC_SHADOW	=	0xdfba
                            574 ;--------------------------------------------------------
                            575 ; absolute external ram data
                            576 ;--------------------------------------------------------
                            577 	.area XABS    (ABS,XDATA)
                            578 ;--------------------------------------------------------
                            579 ; external initialized ram data
                            580 ;--------------------------------------------------------
                            581 	.area XISEG   (XDATA)
                            582 	.area HOME    (CODE)
                            583 	.area GSINIT0 (CODE)
                            584 	.area GSINIT1 (CODE)
                            585 	.area GSINIT2 (CODE)
                            586 	.area GSINIT3 (CODE)
                            587 	.area GSINIT4 (CODE)
                            588 	.area GSINIT5 (CODE)
                            589 	.area GSINIT  (CODE)
                            590 	.area GSFINAL (CODE)
                            591 	.area CSEG    (CODE)
                            592 ;--------------------------------------------------------
                            593 ; global & static initialisations
                            594 ;--------------------------------------------------------
                            595 	.area HOME    (CODE)
                            596 	.area GSINIT  (CODE)
                            597 	.area GSFINAL (CODE)
                            598 	.area GSINIT  (CODE)
                            599 ;--------------------------------------------------------
                            600 ; Home
                            601 ;--------------------------------------------------------
                            602 	.area HOME    (CODE)
                            603 	.area HOME    (CODE)
                            604 ;--------------------------------------------------------
                            605 ; code
                            606 ;--------------------------------------------------------
                            607 	.area CSEG    (CODE)
                            608 ;------------------------------------------------------------
                            609 ;Allocation info for local variables in function 'read_new_datapacket'
                            610 ;------------------------------------------------------------
                            611 ;c                         Allocated to stack - _bp +1
                            612 ;len                       Allocated to registers r3 r4 
                            613 ;sloc0                     Allocated to stack - _bp +4
                            614 ;sloc1                     Allocated to stack - _bp +8
                            615 ;sloc2                     Allocated to stack - _bp +6
                            616 ;------------------------------------------------------------
                            617 ;	../../core/net/rime/rudolph0.c:76: read_new_datapacket(struct rudolph0_conn *c)
                            618 ;	-----------------------------------------
                            619 ;	 function read_new_datapacket
                            620 ;	-----------------------------------------
   0000                     621 _read_new_datapacket:
                    0007    622 	ar7 = 0x07
                    0006    623 	ar6 = 0x06
                    0005    624 	ar5 = 0x05
                    0004    625 	ar4 = 0x04
                    0003    626 	ar3 = 0x03
                    0002    627 	ar2 = 0x02
                    0001    628 	ar1 = 0x01
                    0000    629 	ar0 = 0x00
   0000 C0*00               630 	push	_bp
   0002 85 81*00            631 	mov	_bp,sp
   0005 C0 82               632 	push	dpl
   0007 C0 83               633 	push	dph
   0009 C0 F0               634 	push	b
   000B E5 81               635 	mov	a,sp
   000D 24 05               636 	add	a,#0x05
   000F F5 81               637 	mov	sp,a
                            638 ;	../../core/net/rime/rudolph0.c:78: int len = 0;
   0011 7B 00               639 	mov	r3,#0x00
   0013 7C 00               640 	mov	r4,#0x00
                            641 ;	../../core/net/rime/rudolph0.c:80: if(c->cb->read_chunk) {
   0015 A8*00               642 	mov	r0,_bp
   0017 08                  643 	inc	r0
   0018 74 52               644 	mov	a,#0x52
   001A 26                  645 	add	a,@r0
   001B FA                  646 	mov	r2,a
   001C E4                  647 	clr	a
   001D 08                  648 	inc	r0
   001E 36                  649 	addc	a,@r0
   001F FE                  650 	mov	r6,a
   0020 08                  651 	inc	r0
   0021 86 07               652 	mov	ar7,@r0
   0023 8A 82               653 	mov	dpl,r2
   0025 8E 83               654 	mov	dph,r6
   0027 8F F0               655 	mov	b,r7
   0029 12s00r00            656 	lcall	__gptrget
   002C FA                  657 	mov	r2,a
   002D A3                  658 	inc	dptr
   002E 12s00r00            659 	lcall	__gptrget
   0031 FE                  660 	mov	r6,a
   0032 A3                  661 	inc	dptr
   0033 12s00r00            662 	lcall	__gptrget
   0036 FF                  663 	mov	r7,a
   0037 74 02               664 	mov	a,#0x02
   0039 2A                  665 	add	a,r2
   003A FA                  666 	mov	r2,a
   003B E4                  667 	clr	a
   003C 3E                  668 	addc	a,r6
   003D FE                  669 	mov	r6,a
   003E 8A 82               670 	mov	dpl,r2
   0040 8E 83               671 	mov	dph,r6
   0042 8F F0               672 	mov	b,r7
   0044 E5*00               673 	mov	a,_bp
   0046 24 04               674 	add	a,#0x04
   0048 F8                  675 	mov	r0,a
   0049 12s00r00            676 	lcall	__gptrget
   004C F6                  677 	mov	@r0,a
   004D A3                  678 	inc	dptr
   004E 12s00r00            679 	lcall	__gptrget
   0051 08                  680 	inc	r0
   0052 F6                  681 	mov	@r0,a
   0053 E5*00               682 	mov	a,_bp
   0055 24 04               683 	add	a,#0x04
   0057 F8                  684 	mov	r0,a
   0058 E6                  685 	mov	a,@r0
   0059 08                  686 	inc	r0
   005A 46                  687 	orl	a,@r0
   005B 70 03               688 	jnz	00107$
   005D 02s00rEC            689 	ljmp	00102$
   0060                     690 00107$:
                            691 ;	../../core/net/rime/rudolph0.c:82: c->current.data, RUDOLPH0_DATASIZE);
   0060 A8*00               692 	mov	r0,_bp
   0062 08                  693 	inc	r0
   0063 74 58               694 	mov	a,#0x58
   0065 26                  695 	add	a,@r0
   0066 FD                  696 	mov	r5,a
   0067 E4                  697 	clr	a
   0068 08                  698 	inc	r0
   0069 36                  699 	addc	a,@r0
   006A FE                  700 	mov	r6,a
   006B 08                  701 	inc	r0
   006C 86 07               702 	mov	ar7,@r0
   006E E5*00               703 	mov	a,_bp
   0070 24 06               704 	add	a,#0x06
   0072 F8                  705 	mov	r0,a
   0073 74 05               706 	mov	a,#0x05
   0075 2D                  707 	add	a,r5
   0076 F6                  708 	mov	@r0,a
   0077 E4                  709 	clr	a
   0078 3E                  710 	addc	a,r6
   0079 08                  711 	inc	r0
   007A F6                  712 	mov	@r0,a
   007B 08                  713 	inc	r0
   007C A6 07               714 	mov	@r0,ar7
                            715 ;	../../core/net/rime/rudolph0.c:81: len = c->cb->read_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
   007E 74 02               716 	mov	a,#0x02
   0080 2D                  717 	add	a,r5
   0081 FA                  718 	mov	r2,a
   0082 E4                  719 	clr	a
   0083 3E                  720 	addc	a,r6
   0084 FE                  721 	mov	r6,a
   0085 8A 82               722 	mov	dpl,r2
   0087 8E 83               723 	mov	dph,r6
   0089 8F F0               724 	mov	b,r7
   008B 12s00r00            725 	lcall	__gptrget
   008E FA                  726 	mov	r2,a
   008F A3                  727 	inc	dptr
   0090 12s00r00            728 	lcall	__gptrget
   0093 54 03               729 	anl	a,#0x03
   0095 A2 E0               730 	mov	c,acc.0
   0097 CA                  731 	xch	a,r2
   0098 13                  732 	rrc	a
   0099 CA                  733 	xch	a,r2
   009A 13                  734 	rrc	a
   009B A2 E0               735 	mov	c,acc.0
   009D CA                  736 	xch	a,r2
   009E 13                  737 	rrc	a
   009F CA                  738 	xch	a,r2
   00A0 13                  739 	rrc	a
   00A1 CA                  740 	xch	a,r2
   00A2 FE                  741 	mov	r6,a
   00A3 74 40               742 	mov	a,#0x40
   00A5 C0 E0               743 	push	acc
   00A7 E4                  744 	clr	a
   00A8 C0 E0               745 	push	acc
   00AA E5*00               746 	mov	a,_bp
   00AC 24 06               747 	add	a,#0x06
   00AE F8                  748 	mov	r0,a
   00AF E6                  749 	mov	a,@r0
   00B0 C0 E0               750 	push	acc
   00B2 08                  751 	inc	r0
   00B3 E6                  752 	mov	a,@r0
   00B4 C0 E0               753 	push	acc
   00B6 08                  754 	inc	r0
   00B7 E6                  755 	mov	a,@r0
   00B8 C0 E0               756 	push	acc
   00BA C0 02               757 	push	ar2
   00BC C0 06               758 	push	ar6
   00BE 74rDE               759 	mov	a,#00108$
   00C0 C0 E0               760 	push	acc
   00C2 74s00               761 	mov	a,#(00108$ >> 8)
   00C4 C0 E0               762 	push	acc
   00C6 E5*00               763 	mov	a,_bp
   00C8 24 04               764 	add	a,#0x04
   00CA F8                  765 	mov	r0,a
   00CB E6                  766 	mov	a,@r0
   00CC C0 E0               767 	push	acc
   00CE 08                  768 	inc	r0
   00CF E6                  769 	mov	a,@r0
   00D0 C0 E0               770 	push	acc
   00D2 A8*00               771 	mov	r0,_bp
   00D4 08                  772 	inc	r0
   00D5 86 82               773 	mov	dpl,@r0
   00D7 08                  774 	inc	r0
   00D8 86 83               775 	mov	dph,@r0
   00DA 08                  776 	inc	r0
   00DB 86 F0               777 	mov	b,@r0
   00DD 22                  778 	ret
   00DE                     779 00108$:
   00DE AE 82               780 	mov	r6,dpl
   00E0 AF 83               781 	mov	r7,dph
   00E2 E5 81               782 	mov	a,sp
   00E4 24 F9               783 	add	a,#0xf9
   00E6 F5 81               784 	mov	sp,a
   00E8 8E 03               785 	mov	ar3,r6
   00EA 8F 04               786 	mov	ar4,r7
   00EC                     787 00102$:
                            788 ;	../../core/net/rime/rudolph0.c:84: c->current.datalen = len;
   00EC A8*00               789 	mov	r0,_bp
   00EE 08                  790 	inc	r0
   00EF 74 58               791 	mov	a,#0x58
   00F1 26                  792 	add	a,@r0
   00F2 FD                  793 	mov	r5,a
   00F3 E4                  794 	clr	a
   00F4 08                  795 	inc	r0
   00F5 36                  796 	addc	a,@r0
   00F6 FE                  797 	mov	r6,a
   00F7 08                  798 	inc	r0
   00F8 86 07               799 	mov	ar7,@r0
   00FA 74 04               800 	mov	a,#0x04
   00FC 2D                  801 	add	a,r5
   00FD FD                  802 	mov	r5,a
   00FE E4                  803 	clr	a
   00FF 3E                  804 	addc	a,r6
   0100 FE                  805 	mov	r6,a
   0101 8D 82               806 	mov	dpl,r5
   0103 8E 83               807 	mov	dph,r6
   0105 8F F0               808 	mov	b,r7
   0107 EB                  809 	mov	a,r3
   0108 12s00r00            810 	lcall	__gptrput
   010B 85*00 81            811 	mov	sp,_bp
   010E D0*00               812 	pop	_bp
   0110 22                  813 	ret
                            814 ;------------------------------------------------------------
                            815 ;Allocation info for local variables in function 'send_nack'
                            816 ;------------------------------------------------------------
                            817 ;c                         Allocated to stack - _bp +1
                            818 ;hdr                       Allocated to stack - _bp +4
                            819 ;sloc0                     Allocated to stack - _bp +7
                            820 ;------------------------------------------------------------
                            821 ;	../../core/net/rime/rudolph0.c:90: send_nack(struct rudolph0_conn *c)
                            822 ;	-----------------------------------------
                            823 ;	 function send_nack
                            824 ;	-----------------------------------------
   0111                     825 _send_nack:
   0111 C0*00               826 	push	_bp
   0113 85 81*00            827 	mov	_bp,sp
   0116 C0 82               828 	push	dpl
   0118 C0 83               829 	push	dph
   011A C0 F0               830 	push	b
   011C E5 81               831 	mov	a,sp
   011E 24 06               832 	add	a,#0x06
   0120 F5 81               833 	mov	sp,a
                            834 ;	../../core/net/rime/rudolph0.c:93: packetbuf_clear();
   0122 12s00r00            835 	lcall	_packetbuf_clear
                            836 ;	../../core/net/rime/rudolph0.c:94: packetbuf_hdralloc(sizeof(struct rudolph0_hdr));
   0125 90 00 04            837 	mov	dptr,#0x0004
   0128 12s00r00            838 	lcall	_packetbuf_hdralloc
                            839 ;	../../core/net/rime/rudolph0.c:95: hdr = packetbuf_hdrptr();
   012B 12s00r00            840 	lcall	_packetbuf_hdrptr
   012E AA 82               841 	mov	r2,dpl
   0130 AB 83               842 	mov	r3,dph
   0132 AC F0               843 	mov	r4,b
   0134 E5*00               844 	mov	a,_bp
   0136 24 04               845 	add	a,#0x04
   0138 F8                  846 	mov	r0,a
   0139 A6 02               847 	mov	@r0,ar2
   013B 08                  848 	inc	r0
   013C A6 03               849 	mov	@r0,ar3
   013E 08                  850 	inc	r0
   013F A6 04               851 	mov	@r0,ar4
                            852 ;	../../core/net/rime/rudolph0.c:97: hdr->type = TYPE_NACK;
   0141 E5*00               853 	mov	a,_bp
   0143 24 04               854 	add	a,#0x04
   0145 F8                  855 	mov	r0,a
   0146 86 82               856 	mov	dpl,@r0
   0148 08                  857 	inc	r0
   0149 86 83               858 	mov	dph,@r0
   014B 08                  859 	inc	r0
   014C 86 F0               860 	mov	b,@r0
   014E 74 01               861 	mov	a,#0x01
   0150 12s00r00            862 	lcall	__gptrput
                            863 ;	../../core/net/rime/rudolph0.c:98: hdr->version = c->current.h.version;
   0153 E5*00               864 	mov	a,_bp
   0155 24 04               865 	add	a,#0x04
   0157 F8                  866 	mov	r0,a
   0158 E5*00               867 	mov	a,_bp
   015A 24 07               868 	add	a,#0x07
   015C F9                  869 	mov	r1,a
   015D 74 01               870 	mov	a,#0x01
   015F 26                  871 	add	a,@r0
   0160 F7                  872 	mov	@r1,a
   0161 E4                  873 	clr	a
   0162 08                  874 	inc	r0
   0163 36                  875 	addc	a,@r0
   0164 09                  876 	inc	r1
   0165 F7                  877 	mov	@r1,a
   0166 08                  878 	inc	r0
   0167 09                  879 	inc	r1
   0168 E6                  880 	mov	a,@r0
   0169 F7                  881 	mov	@r1,a
   016A A8*00               882 	mov	r0,_bp
   016C 08                  883 	inc	r0
   016D 74 58               884 	mov	a,#0x58
   016F 26                  885 	add	a,@r0
   0170 FA                  886 	mov	r2,a
   0171 E4                  887 	clr	a
   0172 08                  888 	inc	r0
   0173 36                  889 	addc	a,@r0
   0174 FB                  890 	mov	r3,a
   0175 08                  891 	inc	r0
   0176 86 04               892 	mov	ar4,@r0
   0178 74 01               893 	mov	a,#0x01
   017A 2A                  894 	add	a,r2
   017B FD                  895 	mov	r5,a
   017C E4                  896 	clr	a
   017D 3B                  897 	addc	a,r3
   017E FE                  898 	mov	r6,a
   017F 8C 07               899 	mov	ar7,r4
   0181 8D 82               900 	mov	dpl,r5
   0183 8E 83               901 	mov	dph,r6
   0185 8F F0               902 	mov	b,r7
   0187 12s00r00            903 	lcall	__gptrget
   018A FD                  904 	mov	r5,a
   018B E5*00               905 	mov	a,_bp
   018D 24 07               906 	add	a,#0x07
   018F F8                  907 	mov	r0,a
   0190 86 82               908 	mov	dpl,@r0
   0192 08                  909 	inc	r0
   0193 86 83               910 	mov	dph,@r0
   0195 08                  911 	inc	r0
   0196 86 F0               912 	mov	b,@r0
   0198 ED                  913 	mov	a,r5
   0199 12s00r00            914 	lcall	__gptrput
                            915 ;	../../core/net/rime/rudolph0.c:99: hdr->chunk = c->current.h.chunk;
   019C E5*00               916 	mov	a,_bp
   019E 24 04               917 	add	a,#0x04
   01A0 F8                  918 	mov	r0,a
   01A1 74 02               919 	mov	a,#0x02
   01A3 26                  920 	add	a,@r0
   01A4 FD                  921 	mov	r5,a
   01A5 E4                  922 	clr	a
   01A6 08                  923 	inc	r0
   01A7 36                  924 	addc	a,@r0
   01A8 FE                  925 	mov	r6,a
   01A9 08                  926 	inc	r0
   01AA 86 07               927 	mov	ar7,@r0
   01AC 74 02               928 	mov	a,#0x02
   01AE 2A                  929 	add	a,r2
   01AF FA                  930 	mov	r2,a
   01B0 E4                  931 	clr	a
   01B1 3B                  932 	addc	a,r3
   01B2 FB                  933 	mov	r3,a
   01B3 8A 82               934 	mov	dpl,r2
   01B5 8B 83               935 	mov	dph,r3
   01B7 8C F0               936 	mov	b,r4
   01B9 12s00r00            937 	lcall	__gptrget
   01BC FA                  938 	mov	r2,a
   01BD A3                  939 	inc	dptr
   01BE 12s00r00            940 	lcall	__gptrget
   01C1 FB                  941 	mov	r3,a
   01C2 8D 82               942 	mov	dpl,r5
   01C4 8E 83               943 	mov	dph,r6
   01C6 8F F0               944 	mov	b,r7
   01C8 EA                  945 	mov	a,r2
   01C9 12s00r00            946 	lcall	__gptrput
   01CC A3                  947 	inc	dptr
   01CD EB                  948 	mov	a,r3
   01CE 12s00r00            949 	lcall	__gptrput
                            950 ;	../../core/net/rime/rudolph0.c:102: polite_send(&c->nackc, c->send_interval / 2, sizeof(struct rudolph0_hdr));
   01D1 A8*00               951 	mov	r0,_bp
   01D3 08                  952 	inc	r0
   01D4 74 55               953 	mov	a,#0x55
   01D6 26                  954 	add	a,@r0
   01D7 FD                  955 	mov	r5,a
   01D8 E4                  956 	clr	a
   01D9 08                  957 	inc	r0
   01DA 36                  958 	addc	a,@r0
   01DB FE                  959 	mov	r6,a
   01DC 08                  960 	inc	r0
   01DD 86 07               961 	mov	ar7,@r0
   01DF 8D 82               962 	mov	dpl,r5
   01E1 8E 83               963 	mov	dph,r6
   01E3 8F F0               964 	mov	b,r7
   01E5 12s00r00            965 	lcall	__gptrget
   01E8 FD                  966 	mov	r5,a
   01E9 A3                  967 	inc	dptr
   01EA 12s00r00            968 	lcall	__gptrget
   01ED C3                  969 	clr	c
   01EE 13                  970 	rrc	a
   01EF CD                  971 	xch	a,r5
   01F0 13                  972 	rrc	a
   01F1 CD                  973 	xch	a,r5
   01F2 FE                  974 	mov	r6,a
   01F3 A8*00               975 	mov	r0,_bp
   01F5 08                  976 	inc	r0
   01F6 74 2A               977 	mov	a,#0x2A
   01F8 26                  978 	add	a,@r0
   01F9 FB                  979 	mov	r3,a
   01FA E4                  980 	clr	a
   01FB 08                  981 	inc	r0
   01FC 36                  982 	addc	a,@r0
   01FD FC                  983 	mov	r4,a
   01FE 08                  984 	inc	r0
   01FF 86 07               985 	mov	ar7,@r0
   0201 74 04               986 	mov	a,#0x04
   0203 C0 E0               987 	push	acc
   0205 C0 05               988 	push	ar5
   0207 C0 06               989 	push	ar6
   0209 8B 82               990 	mov	dpl,r3
   020B 8C 83               991 	mov	dph,r4
   020D 8F F0               992 	mov	b,r7
   020F 12s00r00            993 	lcall	_polite_send
   0212 15 81               994 	dec	sp
   0214 15 81               995 	dec	sp
   0216 15 81               996 	dec	sp
   0218 85*00 81            997 	mov	sp,_bp
   021B D0*00               998 	pop	_bp
   021D 22                  999 	ret
                           1000 ;------------------------------------------------------------
                           1001 ;Allocation info for local variables in function 'sent'
                           1002 ;------------------------------------------------------------
                           1003 ;stbroadcast               Allocated to registers r5 r6 r7 
                           1004 ;c                         Allocated to stack - _bp +1
                           1005 ;------------------------------------------------------------
                           1006 ;	../../core/net/rime/rudolph0.c:106: sent(struct stbroadcast_conn *stbroadcast)
                           1007 ;	-----------------------------------------
                           1008 ;	 function sent
                           1009 ;	-----------------------------------------
   021E                    1010 _sent:
   021E C0*00              1011 	push	_bp
   0220 85 81*00           1012 	mov	_bp,sp
   0223 05 81              1013 	inc	sp
   0225 05 81              1014 	inc	sp
   0227 05 81              1015 	inc	sp
   0229 AD 82              1016 	mov	r5,dpl
   022B AE 83              1017 	mov	r6,dph
   022D AF F0              1018 	mov	r7,b
                           1019 ;	../../core/net/rime/rudolph0.c:108: struct rudolph0_conn *c = (struct rudolph0_conn *)stbroadcast;
   022F A8*00              1020 	mov	r0,_bp
   0231 08                 1021 	inc	r0
   0232 A6 05              1022 	mov	@r0,ar5
   0234 08                 1023 	inc	r0
   0235 A6 06              1024 	mov	@r0,ar6
   0237 08                 1025 	inc	r0
   0238 A6 07              1026 	mov	@r0,ar7
                           1027 ;	../../core/net/rime/rudolph0.c:110: if(c->current.datalen == RUDOLPH0_DATASIZE) {
   023A A8*00              1028 	mov	r0,_bp
   023C 08                 1029 	inc	r0
   023D 74 5C              1030 	mov	a,#0x5C
   023F 26                 1031 	add	a,@r0
   0240 FA                 1032 	mov	r2,a
   0241 E4                 1033 	clr	a
   0242 08                 1034 	inc	r0
   0243 36                 1035 	addc	a,@r0
   0244 FB                 1036 	mov	r3,a
   0245 08                 1037 	inc	r0
   0246 86 04              1038 	mov	ar4,@r0
   0248 8A 82              1039 	mov	dpl,r2
   024A 8B 83              1040 	mov	dph,r3
   024C 8C F0              1041 	mov	b,r4
   024E 12s00r00           1042 	lcall	__gptrget
   0251 FA                 1043 	mov	r2,a
   0252 BA 40 41           1044 	cjne	r2,#0x40,00102$
                           1045 ;	../../core/net/rime/rudolph0.c:111: c->current.h.chunk++;
   0255 A8*00              1046 	mov	r0,_bp
   0257 08                 1047 	inc	r0
   0258 74 5A              1048 	mov	a,#0x5A
   025A 26                 1049 	add	a,@r0
   025B FA                 1050 	mov	r2,a
   025C E4                 1051 	clr	a
   025D 08                 1052 	inc	r0
   025E 36                 1053 	addc	a,@r0
   025F FB                 1054 	mov	r3,a
   0260 08                 1055 	inc	r0
   0261 86 04              1056 	mov	ar4,@r0
   0263 8A 82              1057 	mov	dpl,r2
   0265 8B 83              1058 	mov	dph,r3
   0267 8C F0              1059 	mov	b,r4
   0269 12s00r00           1060 	lcall	__gptrget
   026C FE                 1061 	mov	r6,a
   026D A3                 1062 	inc	dptr
   026E 12s00r00           1063 	lcall	__gptrget
   0271 FF                 1064 	mov	r7,a
   0272 0E                 1065 	inc	r6
   0273 BE 00 01           1066 	cjne	r6,#0x00,00110$
   0276 0F                 1067 	inc	r7
   0277                    1068 00110$:
   0277 8A 82              1069 	mov	dpl,r2
   0279 8B 83              1070 	mov	dph,r3
   027B 8C F0              1071 	mov	b,r4
   027D EE                 1072 	mov	a,r6
   027E 12s00r00           1073 	lcall	__gptrput
   0281 A3                 1074 	inc	dptr
   0282 EF                 1075 	mov	a,r7
   0283 12s00r00           1076 	lcall	__gptrput
                           1077 ;	../../core/net/rime/rudolph0.c:113: read_new_datapacket(c);
   0286 A8*00              1078 	mov	r0,_bp
   0288 08                 1079 	inc	r0
   0289 86 82              1080 	mov	dpl,@r0
   028B 08                 1081 	inc	r0
   028C 86 83              1082 	mov	dph,@r0
   028E 08                 1083 	inc	r0
   028F 86 F0              1084 	mov	b,@r0
   0291 12s00r00           1085 	lcall	_read_new_datapacket
   0294 80 19              1086 	sjmp	00104$
   0296                    1087 00102$:
                           1088 ;	../../core/net/rime/rudolph0.c:115: stbroadcast_set_timer(&c->c, STEADY_TIME);
   0296 E4                 1089 	clr	a
   0297 C0 E0              1090 	push	acc
   0299 74 01              1091 	mov	a,#0x01
   029B C0 E0              1092 	push	acc
   029D A8*00              1093 	mov	r0,_bp
   029F 08                 1094 	inc	r0
   02A0 86 82              1095 	mov	dpl,@r0
   02A2 08                 1096 	inc	r0
   02A3 86 83              1097 	mov	dph,@r0
   02A5 08                 1098 	inc	r0
   02A6 86 F0              1099 	mov	b,@r0
   02A8 12s00r00           1100 	lcall	_stbroadcast_set_timer
   02AB 15 81              1101 	dec	sp
   02AD 15 81              1102 	dec	sp
   02AF                    1103 00104$:
   02AF 85*00 81           1104 	mov	sp,_bp
   02B2 D0*00              1105 	pop	_bp
   02B4 22                 1106 	ret
                           1107 ;------------------------------------------------------------
                           1108 ;Allocation info for local variables in function 'recv'
                           1109 ;------------------------------------------------------------
                           1110 ;stbroadcast               Allocated to registers r5 r6 r7 
                           1111 ;c                         Allocated to stack - _bp +1
                           1112 ;p                         Allocated to stack - _bp +4
                           1113 ;sloc0                     Allocated to stack - _bp +7
                           1114 ;sloc1                     Allocated to stack - _bp +8
                           1115 ;sloc2                     Allocated to stack - _bp +11
                           1116 ;sloc3                     Allocated to stack - _bp +13
                           1117 ;sloc4                     Allocated to stack - _bp +18
                           1118 ;sloc5                     Allocated to stack - _bp +15
                           1119 ;------------------------------------------------------------
                           1120 ;	../../core/net/rime/rudolph0.c:122: recv(struct stbroadcast_conn *stbroadcast)
                           1121 ;	-----------------------------------------
                           1122 ;	 function recv
                           1123 ;	-----------------------------------------
   02B5                    1124 _recv:
   02B5 C0*00              1125 	push	_bp
   02B7 E5 81              1126 	mov	a,sp
   02B9 F5*00              1127 	mov	_bp,a
   02BB 24 11              1128 	add	a,#0x11
   02BD F5 81              1129 	mov	sp,a
   02BF AD 82              1130 	mov	r5,dpl
   02C1 AE 83              1131 	mov	r6,dph
   02C3 AF F0              1132 	mov	r7,b
                           1133 ;	../../core/net/rime/rudolph0.c:124: struct rudolph0_conn *c = (struct rudolph0_conn *)stbroadcast;
   02C5 A8*00              1134 	mov	r0,_bp
   02C7 08                 1135 	inc	r0
   02C8 A6 05              1136 	mov	@r0,ar5
   02CA 08                 1137 	inc	r0
   02CB A6 06              1138 	mov	@r0,ar6
   02CD 08                 1139 	inc	r0
   02CE A6 07              1140 	mov	@r0,ar7
                           1141 ;	../../core/net/rime/rudolph0.c:125: struct rudolph0_datapacket *p = packetbuf_dataptr();
   02D0 12s00r00           1142 	lcall	_packetbuf_dataptr
   02D3 AA 82              1143 	mov	r2,dpl
   02D5 AB 83              1144 	mov	r3,dph
   02D7 AC F0              1145 	mov	r4,b
   02D9 E5*00              1146 	mov	a,_bp
   02DB 24 04              1147 	add	a,#0x04
   02DD F8                 1148 	mov	r0,a
   02DE A6 02              1149 	mov	@r0,ar2
   02E0 08                 1150 	inc	r0
   02E1 A6 03              1151 	mov	@r0,ar3
   02E3 08                 1152 	inc	r0
   02E4 A6 04              1153 	mov	@r0,ar4
                           1154 ;	../../core/net/rime/rudolph0.c:127: if(p->h.type == TYPE_DATA) {
   02E6 E5*00              1155 	mov	a,_bp
   02E8 24 04              1156 	add	a,#0x04
   02EA F8                 1157 	mov	r0,a
   02EB 86 82              1158 	mov	dpl,@r0
   02ED 08                 1159 	inc	r0
   02EE 86 83              1160 	mov	dph,@r0
   02F0 08                 1161 	inc	r0
   02F1 86 F0              1162 	mov	b,@r0
   02F3 12s00r00           1163 	lcall	__gptrget
   02F6 60 03              1164 	jz	00135$
   02F8 02s07r3C           1165 	ljmp	00119$
   02FB                    1166 00135$:
                           1167 ;	../../core/net/rime/rudolph0.c:128: if(c->current.h.version != p->h.version) {
   02FB A8*00              1168 	mov	r0,_bp
   02FD 08                 1169 	inc	r0
   02FE 74 59              1170 	mov	a,#0x59
   0300 26                 1171 	add	a,@r0
   0301 FD                 1172 	mov	r5,a
   0302 E4                 1173 	clr	a
   0303 08                 1174 	inc	r0
   0304 36                 1175 	addc	a,@r0
   0305 FE                 1176 	mov	r6,a
   0306 08                 1177 	inc	r0
   0307 86 07              1178 	mov	ar7,@r0
   0309 8D 82              1179 	mov	dpl,r5
   030B 8E 83              1180 	mov	dph,r6
   030D 8F F0              1181 	mov	b,r7
   030F E5*00              1182 	mov	a,_bp
   0311 24 07              1183 	add	a,#0x07
   0313 F8                 1184 	mov	r0,a
   0314 12s00r00           1185 	lcall	__gptrget
   0317 F6                 1186 	mov	@r0,a
   0318 E5*00              1187 	mov	a,_bp
   031A 24 04              1188 	add	a,#0x04
   031C F8                 1189 	mov	r0,a
   031D 74 01              1190 	mov	a,#0x01
   031F 26                 1191 	add	a,@r0
   0320 FA                 1192 	mov	r2,a
   0321 E4                 1193 	clr	a
   0322 08                 1194 	inc	r0
   0323 36                 1195 	addc	a,@r0
   0324 FB                 1196 	mov	r3,a
   0325 08                 1197 	inc	r0
   0326 86 04              1198 	mov	ar4,@r0
   0328 8A 82              1199 	mov	dpl,r2
   032A 8B 83              1200 	mov	dph,r3
   032C 8C F0              1201 	mov	b,r4
   032E 12s00r00           1202 	lcall	__gptrget
   0331 FC                 1203 	mov	r4,a
   0332 E5*00              1204 	mov	a,_bp
   0334 24 07              1205 	add	a,#0x07
   0336 F8                 1206 	mov	r0,a
   0337 E6                 1207 	mov	a,@r0
   0338 B5 04 04           1208 	cjne	a,ar4,00136$
   033B 74 01              1209 	mov	a,#0x01
   033D 80 01              1210 	sjmp	00137$
   033F                    1211 00136$:
   033F E4                 1212 	clr	a
   0340                    1213 00137$:
   0340 FB                 1214 	mov	r3,a
   0341 60 03              1215 	jz	00138$
   0343 02s05r07           1216 	ljmp	00115$
   0346                    1217 00138$:
                           1218 ;	../../core/net/rime/rudolph0.c:130: c->current.h.version = p->h.version;
   0346 8D 82              1219 	mov	dpl,r5
   0348 8E 83              1220 	mov	dph,r6
   034A 8F F0              1221 	mov	b,r7
   034C EC                 1222 	mov	a,r4
   034D 12s00r00           1223 	lcall	__gptrput
                           1224 ;	../../core/net/rime/rudolph0.c:131: c->current.h.chunk = 0;
   0350 A8*00              1225 	mov	r0,_bp
   0352 08                 1226 	inc	r0
   0353 74 5A              1227 	mov	a,#0x5A
   0355 26                 1228 	add	a,@r0
   0356 FD                 1229 	mov	r5,a
   0357 E4                 1230 	clr	a
   0358 08                 1231 	inc	r0
   0359 36                 1232 	addc	a,@r0
   035A FE                 1233 	mov	r6,a
   035B 08                 1234 	inc	r0
   035C 86 07              1235 	mov	ar7,@r0
   035E 8D 82              1236 	mov	dpl,r5
   0360 8E 83              1237 	mov	dph,r6
   0362 8F F0              1238 	mov	b,r7
   0364 E4                 1239 	clr	a
   0365 12s00r00           1240 	lcall	__gptrput
   0368 A3                 1241 	inc	dptr
   0369 E4                 1242 	clr	a
   036A 12s00r00           1243 	lcall	__gptrput
                           1244 ;	../../core/net/rime/rudolph0.c:132: c->cb->write_chunk(c, 0, RUDOLPH0_FLAG_NEWFILE, p->data, 0);
   036D A8*00              1245 	mov	r0,_bp
   036F 08                 1246 	inc	r0
   0370 E5*00              1247 	mov	a,_bp
   0372 24 08              1248 	add	a,#0x08
   0374 F9                 1249 	mov	r1,a
   0375 74 52              1250 	mov	a,#0x52
   0377 26                 1251 	add	a,@r0
   0378 F7                 1252 	mov	@r1,a
   0379 E4                 1253 	clr	a
   037A 08                 1254 	inc	r0
   037B 36                 1255 	addc	a,@r0
   037C 09                 1256 	inc	r1
   037D F7                 1257 	mov	@r1,a
   037E 08                 1258 	inc	r0
   037F 09                 1259 	inc	r1
   0380 E6                 1260 	mov	a,@r0
   0381 F7                 1261 	mov	@r1,a
   0382 E5*00              1262 	mov	a,_bp
   0384 24 08              1263 	add	a,#0x08
   0386 F8                 1264 	mov	r0,a
   0387 86 82              1265 	mov	dpl,@r0
   0389 08                 1266 	inc	r0
   038A 86 83              1267 	mov	dph,@r0
   038C 08                 1268 	inc	r0
   038D 86 F0              1269 	mov	b,@r0
   038F 12s00r00           1270 	lcall	__gptrget
   0392 FA                 1271 	mov	r2,a
   0393 A3                 1272 	inc	dptr
   0394 12s00r00           1273 	lcall	__gptrget
   0397 FC                 1274 	mov	r4,a
   0398 A3                 1275 	inc	dptr
   0399 12s00r00           1276 	lcall	__gptrget
   039C FF                 1277 	mov	r7,a
   039D 8A 82              1278 	mov	dpl,r2
   039F 8C 83              1279 	mov	dph,r4
   03A1 8F F0              1280 	mov	b,r7
   03A3 12s00r00           1281 	lcall	__gptrget
   03A6 FA                 1282 	mov	r2,a
   03A7 A3                 1283 	inc	dptr
   03A8 12s00r00           1284 	lcall	__gptrget
   03AB FC                 1285 	mov	r4,a
   03AC E5*00              1286 	mov	a,_bp
   03AE 24 04              1287 	add	a,#0x04
   03B0 F8                 1288 	mov	r0,a
   03B1 74 05              1289 	mov	a,#0x05
   03B3 26                 1290 	add	a,@r0
   03B4 FD                 1291 	mov	r5,a
   03B5 E4                 1292 	clr	a
   03B6 08                 1293 	inc	r0
   03B7 36                 1294 	addc	a,@r0
   03B8 FE                 1295 	mov	r6,a
   03B9 08                 1296 	inc	r0
   03BA 86 07              1297 	mov	ar7,@r0
   03BC C0 04              1298 	push	ar4
   03BE C0 02              1299 	push	ar2
   03C0 E4                 1300 	clr	a
   03C1 C0 E0              1301 	push	acc
   03C3 C0 E0              1302 	push	acc
   03C5 C0 05              1303 	push	ar5
   03C7 C0 06              1304 	push	ar6
   03C9 C0 07              1305 	push	ar7
   03CB 74 01              1306 	mov	a,#0x01
   03CD C0 E0              1307 	push	acc
   03CF E4                 1308 	clr	a
   03D0 C0 E0              1309 	push	acc
   03D2 E4                 1310 	clr	a
   03D3 C0 E0              1311 	push	acc
   03D5 C0 E0              1312 	push	acc
   03D7 74rEF              1313 	mov	a,#00139$
   03D9 C0 E0              1314 	push	acc
   03DB 74s03              1315 	mov	a,#(00139$ >> 8)
   03DD C0 E0              1316 	push	acc
   03DF C0 02              1317 	push	ar2
   03E1 C0 04              1318 	push	ar4
   03E3 A8*00              1319 	mov	r0,_bp
   03E5 08                 1320 	inc	r0
   03E6 86 82              1321 	mov	dpl,@r0
   03E8 08                 1322 	inc	r0
   03E9 86 83              1323 	mov	dph,@r0
   03EB 08                 1324 	inc	r0
   03EC 86 F0              1325 	mov	b,@r0
   03EE 22                 1326 	ret
   03EF                    1327 00139$:
   03EF E5 81              1328 	mov	a,sp
   03F1 24 F7              1329 	add	a,#0xf7
   03F3 F5 81              1330 	mov	sp,a
   03F5 D0 02              1331 	pop	ar2
   03F7 D0 04              1332 	pop	ar4
                           1333 ;	../../core/net/rime/rudolph0.c:133: if(p->h.chunk != 0) {
   03F9 E5*00              1334 	mov	a,_bp
   03FB 24 04              1335 	add	a,#0x04
   03FD F8                 1336 	mov	r0,a
   03FE 74 02              1337 	mov	a,#0x02
   0400 26                 1338 	add	a,@r0
   0401 FD                 1339 	mov	r5,a
   0402 E4                 1340 	clr	a
   0403 08                 1341 	inc	r0
   0404 36                 1342 	addc	a,@r0
   0405 FE                 1343 	mov	r6,a
   0406 08                 1344 	inc	r0
   0407 86 07              1345 	mov	ar7,@r0
   0409 8D 82              1346 	mov	dpl,r5
   040B 8E 83              1347 	mov	dph,r6
   040D 8F F0              1348 	mov	b,r7
   040F 12s00r00           1349 	lcall	__gptrget
   0412 FD                 1350 	mov	r5,a
   0413 A3                 1351 	inc	dptr
   0414 12s00r00           1352 	lcall	__gptrget
   0417 FE                 1353 	mov	r6,a
   0418 4D                 1354 	orl	a,r5
   0419 60 11              1355 	jz	00102$
                           1356 ;	../../core/net/rime/rudolph0.c:134: send_nack(c);
   041B A8*00              1357 	mov	r0,_bp
   041D 08                 1358 	inc	r0
   041E 86 82              1359 	mov	dpl,@r0
   0420 08                 1360 	inc	r0
   0421 86 83              1361 	mov	dph,@r0
   0423 08                 1362 	inc	r0
   0424 86 F0              1363 	mov	b,@r0
   0426 12s01r11           1364 	lcall	_send_nack
   0429 02s07r3C           1365 	ljmp	00119$
   042C                    1366 00102$:
                           1367 ;	../../core/net/rime/rudolph0.c:136: c->cb->write_chunk(c, 0, RUDOLPH0_FLAG_NONE, p->data, p->datalen);
   042C E5*00              1368 	mov	a,_bp
   042E 24 08              1369 	add	a,#0x08
   0430 F8                 1370 	mov	r0,a
   0431 86 82              1371 	mov	dpl,@r0
   0433 08                 1372 	inc	r0
   0434 86 83              1373 	mov	dph,@r0
   0436 08                 1374 	inc	r0
   0437 86 F0              1375 	mov	b,@r0
   0439 12s00r00           1376 	lcall	__gptrget
   043C FD                 1377 	mov	r5,a
   043D A3                 1378 	inc	dptr
   043E 12s00r00           1379 	lcall	__gptrget
   0441 FE                 1380 	mov	r6,a
   0442 A3                 1381 	inc	dptr
   0443 12s00r00           1382 	lcall	__gptrget
   0446 FF                 1383 	mov	r7,a
   0447 8D 82              1384 	mov	dpl,r5
   0449 8E 83              1385 	mov	dph,r6
   044B 8F F0              1386 	mov	b,r7
   044D 12s00r00           1387 	lcall	__gptrget
   0450 FD                 1388 	mov	r5,a
   0451 A3                 1389 	inc	dptr
   0452 12s00r00           1390 	lcall	__gptrget
   0455 FE                 1391 	mov	r6,a
   0456 E5*00              1392 	mov	a,_bp
   0458 24 04              1393 	add	a,#0x04
   045A F8                 1394 	mov	r0,a
   045B 74 04              1395 	mov	a,#0x04
   045D 26                 1396 	add	a,@r0
   045E FA                 1397 	mov	r2,a
   045F E4                 1398 	clr	a
   0460 08                 1399 	inc	r0
   0461 36                 1400 	addc	a,@r0
   0462 FC                 1401 	mov	r4,a
   0463 08                 1402 	inc	r0
   0464 86 07              1403 	mov	ar7,@r0
   0466 8A 82              1404 	mov	dpl,r2
   0468 8C 83              1405 	mov	dph,r4
   046A 8F F0              1406 	mov	b,r7
   046C 12s00r00           1407 	lcall	__gptrget
   046F FA                 1408 	mov	r2,a
   0470 E5*00              1409 	mov	a,_bp
   0472 24 08              1410 	add	a,#0x08
   0474 F8                 1411 	mov	r0,a
   0475 A6 02              1412 	mov	@r0,ar2
   0477 08                 1413 	inc	r0
   0478 76 00              1414 	mov	@r0,#0x00
   047A E5*00              1415 	mov	a,_bp
   047C 24 04              1416 	add	a,#0x04
   047E F8                 1417 	mov	r0,a
   047F 74 05              1418 	mov	a,#0x05
   0481 26                 1419 	add	a,@r0
   0482 FA                 1420 	mov	r2,a
   0483 E4                 1421 	clr	a
   0484 08                 1422 	inc	r0
   0485 36                 1423 	addc	a,@r0
   0486 FC                 1424 	mov	r4,a
   0487 08                 1425 	inc	r0
   0488 86 07              1426 	mov	ar7,@r0
   048A C0 06              1427 	push	ar6
   048C C0 05              1428 	push	ar5
   048E E5*00              1429 	mov	a,_bp
   0490 24 08              1430 	add	a,#0x08
   0492 F8                 1431 	mov	r0,a
   0493 E6                 1432 	mov	a,@r0
   0494 C0 E0              1433 	push	acc
   0496 08                 1434 	inc	r0
   0497 E6                 1435 	mov	a,@r0
   0498 C0 E0              1436 	push	acc
   049A C0 02              1437 	push	ar2
   049C C0 04              1438 	push	ar4
   049E C0 07              1439 	push	ar7
   04A0 E4                 1440 	clr	a
   04A1 C0 E0              1441 	push	acc
   04A3 C0 E0              1442 	push	acc
   04A5 E4                 1443 	clr	a
   04A6 C0 E0              1444 	push	acc
   04A8 C0 E0              1445 	push	acc
   04AA 74rC2              1446 	mov	a,#00141$
   04AC C0 E0              1447 	push	acc
   04AE 74s04              1448 	mov	a,#(00141$ >> 8)
   04B0 C0 E0              1449 	push	acc
   04B2 C0 05              1450 	push	ar5
   04B4 C0 06              1451 	push	ar6
   04B6 A8*00              1452 	mov	r0,_bp
   04B8 08                 1453 	inc	r0
   04B9 86 82              1454 	mov	dpl,@r0
   04BB 08                 1455 	inc	r0
   04BC 86 83              1456 	mov	dph,@r0
   04BE 08                 1457 	inc	r0
   04BF 86 F0              1458 	mov	b,@r0
   04C1 22                 1459 	ret
   04C2                    1460 00141$:
   04C2 E5 81              1461 	mov	a,sp
   04C4 24 F7              1462 	add	a,#0xf7
   04C6 F5 81              1463 	mov	sp,a
   04C8 D0 05              1464 	pop	ar5
   04CA D0 06              1465 	pop	ar6
                           1466 ;	../../core/net/rime/rudolph0.c:137: c->current.h.chunk++;
   04CC A8*00              1467 	mov	r0,_bp
   04CE 08                 1468 	inc	r0
   04CF 74 58              1469 	mov	a,#0x58
   04D1 26                 1470 	add	a,@r0
   04D2 FD                 1471 	mov	r5,a
   04D3 E4                 1472 	clr	a
   04D4 08                 1473 	inc	r0
   04D5 36                 1474 	addc	a,@r0
   04D6 FE                 1475 	mov	r6,a
   04D7 08                 1476 	inc	r0
   04D8 86 07              1477 	mov	ar7,@r0
   04DA 74 02              1478 	mov	a,#0x02
   04DC 2D                 1479 	add	a,r5
   04DD FD                 1480 	mov	r5,a
   04DE E4                 1481 	clr	a
   04DF 3E                 1482 	addc	a,r6
   04E0 FE                 1483 	mov	r6,a
   04E1 8D 82              1484 	mov	dpl,r5
   04E3 8E 83              1485 	mov	dph,r6
   04E5 8F F0              1486 	mov	b,r7
   04E7 12s00r00           1487 	lcall	__gptrget
   04EA FA                 1488 	mov	r2,a
   04EB A3                 1489 	inc	dptr
   04EC 12s00r00           1490 	lcall	__gptrget
   04EF FC                 1491 	mov	r4,a
   04F0 0A                 1492 	inc	r2
   04F1 BA 00 01           1493 	cjne	r2,#0x00,00142$
   04F4 0C                 1494 	inc	r4
   04F5                    1495 00142$:
   04F5 8D 82              1496 	mov	dpl,r5
   04F7 8E 83              1497 	mov	dph,r6
   04F9 8F F0              1498 	mov	b,r7
   04FB EA                 1499 	mov	a,r2
   04FC 12s00r00           1500 	lcall	__gptrput
   04FF A3                 1501 	inc	dptr
   0500 EC                 1502 	mov	a,r4
   0501 12s00r00           1503 	lcall	__gptrput
   0504 02s07r3C           1504 	ljmp	00119$
   0507                    1505 00115$:
                           1506 ;	../../core/net/rime/rudolph0.c:139: } else if(p->h.version == c->current.h.version) {
   0507 EB                 1507 	mov	a,r3
   0508 70 03              1508 	jnz	00143$
   050A 02s07r3C           1509 	ljmp	00119$
   050D                    1510 00143$:
                           1511 ;	../../core/net/rime/rudolph0.c:140: if(p->h.chunk == c->current.h.chunk) {
   050D E5*00              1512 	mov	a,_bp
   050F 24 04              1513 	add	a,#0x04
   0511 F8                 1514 	mov	r0,a
   0512 74 02              1515 	mov	a,#0x02
   0514 26                 1516 	add	a,@r0
   0515 FD                 1517 	mov	r5,a
   0516 E4                 1518 	clr	a
   0517 08                 1519 	inc	r0
   0518 36                 1520 	addc	a,@r0
   0519 FE                 1521 	mov	r6,a
   051A 08                 1522 	inc	r0
   051B 86 07              1523 	mov	ar7,@r0
   051D 8D 82              1524 	mov	dpl,r5
   051F 8E 83              1525 	mov	dph,r6
   0521 8F F0              1526 	mov	b,r7
   0523 12s00r00           1527 	lcall	__gptrget
   0526 FE                 1528 	mov	r6,a
   0527 A3                 1529 	inc	dptr
   0528 12s00r00           1530 	lcall	__gptrget
   052B FF                 1531 	mov	r7,a
   052C A8*00              1532 	mov	r0,_bp
   052E 08                 1533 	inc	r0
   052F 74 5A              1534 	mov	a,#0x5A
   0531 26                 1535 	add	a,@r0
   0532 FB                 1536 	mov	r3,a
   0533 E4                 1537 	clr	a
   0534 08                 1538 	inc	r0
   0535 36                 1539 	addc	a,@r0
   0536 FC                 1540 	mov	r4,a
   0537 08                 1541 	inc	r0
   0538 86 05              1542 	mov	ar5,@r0
   053A 8B 82              1543 	mov	dpl,r3
   053C 8C 83              1544 	mov	dph,r4
   053E 8D F0              1545 	mov	b,r5
   0540 E5*00              1546 	mov	a,_bp
   0542 24 0B              1547 	add	a,#0x0b
   0544 F8                 1548 	mov	r0,a
   0545 12s00r00           1549 	lcall	__gptrget
   0548 F6                 1550 	mov	@r0,a
   0549 A3                 1551 	inc	dptr
   054A 12s00r00           1552 	lcall	__gptrget
   054D 08                 1553 	inc	r0
   054E F6                 1554 	mov	@r0,a
   054F E5*00              1555 	mov	a,_bp
   0551 24 0B              1556 	add	a,#0x0b
   0553 F8                 1557 	mov	r0,a
   0554 E6                 1558 	mov	a,@r0
   0555 B5 06 07           1559 	cjne	a,ar6,00144$
   0558 08                 1560 	inc	r0
   0559 E6                 1561 	mov	a,@r0
   055A B5 07 02           1562 	cjne	a,ar7,00144$
   055D 80 03              1563 	sjmp	00145$
   055F                    1564 00144$:
   055F 02s07r21           1565 	ljmp	00110$
   0562                    1566 00145$:
                           1567 ;	../../core/net/rime/rudolph0.c:142: if(p->datalen < RUDOLPH0_DATASIZE) {
   0562 E5*00              1568 	mov	a,_bp
   0564 24 04              1569 	add	a,#0x04
   0566 F8                 1570 	mov	r0,a
   0567 74 04              1571 	mov	a,#0x04
   0569 26                 1572 	add	a,@r0
   056A FA                 1573 	mov	r2,a
   056B E4                 1574 	clr	a
   056C 08                 1575 	inc	r0
   056D 36                 1576 	addc	a,@r0
   056E FB                 1577 	mov	r3,a
   056F 08                 1578 	inc	r0
   0570 86 05              1579 	mov	ar5,@r0
   0572 8A 82              1580 	mov	dpl,r2
   0574 8B 83              1581 	mov	dph,r3
   0576 8D F0              1582 	mov	b,r5
   0578 12s00r00           1583 	lcall	__gptrget
   057B FF                 1584 	mov	r7,a
   057C BF 40 00           1585 	cjne	r7,#0x40,00146$
   057F                    1586 00146$:
   057F 40 03              1587 	jc	00147$
   0581 02s06r3F           1588 	ljmp	00105$
   0584                    1589 00147$:
                           1590 ;	../../core/net/rime/rudolph0.c:143: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
   0584 A8*00              1591 	mov	r0,_bp
   0586 08                 1592 	inc	r0
   0587 74 52              1593 	mov	a,#0x52
   0589 26                 1594 	add	a,@r0
   058A FA                 1595 	mov	r2,a
   058B E4                 1596 	clr	a
   058C 08                 1597 	inc	r0
   058D 36                 1598 	addc	a,@r0
   058E FB                 1599 	mov	r3,a
   058F 08                 1600 	inc	r0
   0590 86 05              1601 	mov	ar5,@r0
   0592 8A 82              1602 	mov	dpl,r2
   0594 8B 83              1603 	mov	dph,r3
   0596 8D F0              1604 	mov	b,r5
   0598 12s00r00           1605 	lcall	__gptrget
   059B FA                 1606 	mov	r2,a
   059C A3                 1607 	inc	dptr
   059D 12s00r00           1608 	lcall	__gptrget
   05A0 FB                 1609 	mov	r3,a
   05A1 A3                 1610 	inc	dptr
   05A2 12s00r00           1611 	lcall	__gptrget
   05A5 FD                 1612 	mov	r5,a
   05A6 8A 82              1613 	mov	dpl,r2
   05A8 8B 83              1614 	mov	dph,r3
   05AA 8D F0              1615 	mov	b,r5
   05AC 12s00r00           1616 	lcall	__gptrget
   05AF FE                 1617 	mov	r6,a
   05B0 A3                 1618 	inc	dptr
   05B1 12s00r00           1619 	lcall	__gptrget
   05B4 FC                 1620 	mov	r4,a
                           1621 ;	../../core/net/rime/rudolph0.c:144: RUDOLPH0_FLAG_LASTCHUNK, p->data, p->datalen);
   05B5 E5*00              1622 	mov	a,_bp
   05B7 24 0D              1623 	add	a,#0x0d
   05B9 F8                 1624 	mov	r0,a
   05BA A6 07              1625 	mov	@r0,ar7
   05BC 08                 1626 	inc	r0
   05BD 76 00              1627 	mov	@r0,#0x00
   05BF E5*00              1628 	mov	a,_bp
   05C1 24 04              1629 	add	a,#0x04
   05C3 F8                 1630 	mov	r0,a
   05C4 E5*00              1631 	mov	a,_bp
   05C6 24 0F              1632 	add	a,#0x0f
   05C8 F9                 1633 	mov	r1,a
   05C9 74 05              1634 	mov	a,#0x05
   05CB 26                 1635 	add	a,@r0
   05CC F7                 1636 	mov	@r1,a
   05CD E4                 1637 	clr	a
   05CE 08                 1638 	inc	r0
   05CF 36                 1639 	addc	a,@r0
   05D0 09                 1640 	inc	r1
   05D1 F7                 1641 	mov	@r1,a
   05D2 08                 1642 	inc	r0
   05D3 09                 1643 	inc	r1
   05D4 E6                 1644 	mov	a,@r0
   05D5 F7                 1645 	mov	@r1,a
                           1646 ;	../../core/net/rime/rudolph0.c:143: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
   05D6 E5*00              1647 	mov	a,_bp
   05D8 24 0B              1648 	add	a,#0x0b
   05DA F8                 1649 	mov	r0,a
   05DB 86 02              1650 	mov	ar2,@r0
   05DD 08                 1651 	inc	r0
   05DE E6                 1652 	mov	a,@r0
   05DF 54 03              1653 	anl	a,#0x03
   05E1 A2 E0              1654 	mov	c,acc.0
   05E3 CA                 1655 	xch	a,r2
   05E4 13                 1656 	rrc	a
   05E5 CA                 1657 	xch	a,r2
   05E6 13                 1658 	rrc	a
   05E7 A2 E0              1659 	mov	c,acc.0
   05E9 CA                 1660 	xch	a,r2
   05EA 13                 1661 	rrc	a
   05EB CA                 1662 	xch	a,r2
   05EC 13                 1663 	rrc	a
   05ED CA                 1664 	xch	a,r2
   05EE FD                 1665 	mov	r5,a
   05EF C0 06              1666 	push	ar6
   05F1 C0 04              1667 	push	ar4
   05F3 E5*00              1668 	mov	a,_bp
   05F5 24 0D              1669 	add	a,#0x0d
   05F7 F8                 1670 	mov	r0,a
   05F8 E6                 1671 	mov	a,@r0
   05F9 C0 E0              1672 	push	acc
   05FB 08                 1673 	inc	r0
   05FC E6                 1674 	mov	a,@r0
   05FD C0 E0              1675 	push	acc
   05FF E5*00              1676 	mov	a,_bp
   0601 24 0F              1677 	add	a,#0x0f
   0603 F8                 1678 	mov	r0,a
   0604 E6                 1679 	mov	a,@r0
   0605 C0 E0              1680 	push	acc
   0607 08                 1681 	inc	r0
   0608 E6                 1682 	mov	a,@r0
   0609 C0 E0              1683 	push	acc
   060B 08                 1684 	inc	r0
   060C E6                 1685 	mov	a,@r0
   060D C0 E0              1686 	push	acc
   060F 74 02              1687 	mov	a,#0x02
   0611 C0 E0              1688 	push	acc
   0613 E4                 1689 	clr	a
   0614 C0 E0              1690 	push	acc
   0616 C0 02              1691 	push	ar2
   0618 C0 05              1692 	push	ar5
   061A 74r32              1693 	mov	a,#00148$
   061C C0 E0              1694 	push	acc
   061E 74s06              1695 	mov	a,#(00148$ >> 8)
   0620 C0 E0              1696 	push	acc
   0622 C0 06              1697 	push	ar6
   0624 C0 04              1698 	push	ar4
   0626 A8*00              1699 	mov	r0,_bp
   0628 08                 1700 	inc	r0
   0629 86 82              1701 	mov	dpl,@r0
   062B 08                 1702 	inc	r0
   062C 86 83              1703 	mov	dph,@r0
   062E 08                 1704 	inc	r0
   062F 86 F0              1705 	mov	b,@r0
   0631 22                 1706 	ret
   0632                    1707 00148$:
   0632 E5 81              1708 	mov	a,sp
   0634 24 F7              1709 	add	a,#0xf7
   0636 F5 81              1710 	mov	sp,a
   0638 D0 04              1711 	pop	ar4
   063A D0 06              1712 	pop	ar6
   063C 02s06rE5           1713 	ljmp	00106$
   063F                    1714 00105$:
                           1715 ;	../../core/net/rime/rudolph0.c:146: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
   063F A8*00              1716 	mov	r0,_bp
   0641 08                 1717 	inc	r0
   0642 74 52              1718 	mov	a,#0x52
   0644 26                 1719 	add	a,@r0
   0645 FB                 1720 	mov	r3,a
   0646 E4                 1721 	clr	a
   0647 08                 1722 	inc	r0
   0648 36                 1723 	addc	a,@r0
   0649 FC                 1724 	mov	r4,a
   064A 08                 1725 	inc	r0
   064B 86 05              1726 	mov	ar5,@r0
   064D 8B 82              1727 	mov	dpl,r3
   064F 8C 83              1728 	mov	dph,r4
   0651 8D F0              1729 	mov	b,r5
   0653 12s00r00           1730 	lcall	__gptrget
   0656 FB                 1731 	mov	r3,a
   0657 A3                 1732 	inc	dptr
   0658 12s00r00           1733 	lcall	__gptrget
   065B FC                 1734 	mov	r4,a
   065C A3                 1735 	inc	dptr
   065D 12s00r00           1736 	lcall	__gptrget
   0660 FD                 1737 	mov	r5,a
   0661 8B 82              1738 	mov	dpl,r3
   0663 8C 83              1739 	mov	dph,r4
   0665 8D F0              1740 	mov	b,r5
   0667 12s00r00           1741 	lcall	__gptrget
   066A FE                 1742 	mov	r6,a
   066B A3                 1743 	inc	dptr
   066C 12s00r00           1744 	lcall	__gptrget
   066F FC                 1745 	mov	r4,a
                           1746 ;	../../core/net/rime/rudolph0.c:147: RUDOLPH0_FLAG_NONE, p->data, p->datalen);
   0670 7A 00              1747 	mov	r2,#0x00
   0672 E5*00              1748 	mov	a,_bp
   0674 24 04              1749 	add	a,#0x04
   0676 F8                 1750 	mov	r0,a
   0677 E5*00              1751 	mov	a,_bp
   0679 24 08              1752 	add	a,#0x08
   067B F9                 1753 	mov	r1,a
   067C 74 05              1754 	mov	a,#0x05
   067E 26                 1755 	add	a,@r0
   067F F7                 1756 	mov	@r1,a
   0680 E4                 1757 	clr	a
   0681 08                 1758 	inc	r0
   0682 36                 1759 	addc	a,@r0
   0683 09                 1760 	inc	r1
   0684 F7                 1761 	mov	@r1,a
   0685 08                 1762 	inc	r0
   0686 09                 1763 	inc	r1
   0687 E6                 1764 	mov	a,@r0
   0688 F7                 1765 	mov	@r1,a
                           1766 ;	../../core/net/rime/rudolph0.c:146: c->cb->write_chunk(c, c->current.h.chunk * RUDOLPH0_DATASIZE,
   0689 E5*00              1767 	mov	a,_bp
   068B 24 0B              1768 	add	a,#0x0b
   068D F8                 1769 	mov	r0,a
   068E 86 03              1770 	mov	ar3,@r0
   0690 08                 1771 	inc	r0
   0691 E6                 1772 	mov	a,@r0
   0692 54 03              1773 	anl	a,#0x03
   0694 A2 E0              1774 	mov	c,acc.0
   0696 CB                 1775 	xch	a,r3
   0697 13                 1776 	rrc	a
   0698 CB                 1777 	xch	a,r3
   0699 13                 1778 	rrc	a
   069A A2 E0              1779 	mov	c,acc.0
   069C CB                 1780 	xch	a,r3
   069D 13                 1781 	rrc	a
   069E CB                 1782 	xch	a,r3
   069F 13                 1783 	rrc	a
   06A0 CB                 1784 	xch	a,r3
   06A1 FD                 1785 	mov	r5,a
   06A2 C0 06              1786 	push	ar6
   06A4 C0 04              1787 	push	ar4
   06A6 C0 07              1788 	push	ar7
   06A8 C0 02              1789 	push	ar2
   06AA E5*00              1790 	mov	a,_bp
   06AC 24 08              1791 	add	a,#0x08
   06AE F8                 1792 	mov	r0,a
   06AF E6                 1793 	mov	a,@r0
   06B0 C0 E0              1794 	push	acc
   06B2 08                 1795 	inc	r0
   06B3 E6                 1796 	mov	a,@r0
   06B4 C0 E0              1797 	push	acc
   06B6 08                 1798 	inc	r0
   06B7 E6                 1799 	mov	a,@r0
   06B8 C0 E0              1800 	push	acc
   06BA E4                 1801 	clr	a
   06BB C0 E0              1802 	push	acc
   06BD C0 E0              1803 	push	acc
   06BF C0 03              1804 	push	ar3
   06C1 C0 05              1805 	push	ar5
   06C3 74rDB              1806 	mov	a,#00149$
   06C5 C0 E0              1807 	push	acc
   06C7 74s06              1808 	mov	a,#(00149$ >> 8)
   06C9 C0 E0              1809 	push	acc
   06CB C0 06              1810 	push	ar6
   06CD C0 04              1811 	push	ar4
   06CF A8*00              1812 	mov	r0,_bp
   06D1 08                 1813 	inc	r0
   06D2 86 82              1814 	mov	dpl,@r0
   06D4 08                 1815 	inc	r0
   06D5 86 83              1816 	mov	dph,@r0
   06D7 08                 1817 	inc	r0
   06D8 86 F0              1818 	mov	b,@r0
   06DA 22                 1819 	ret
   06DB                    1820 00149$:
   06DB E5 81              1821 	mov	a,sp
   06DD 24 F7              1822 	add	a,#0xf7
   06DF F5 81              1823 	mov	sp,a
   06E1 D0 04              1824 	pop	ar4
   06E3 D0 06              1825 	pop	ar6
   06E5                    1826 00106$:
                           1827 ;	../../core/net/rime/rudolph0.c:149: c->current.h.chunk++;
   06E5 A8*00              1828 	mov	r0,_bp
   06E7 08                 1829 	inc	r0
   06E8 74 58              1830 	mov	a,#0x58
   06EA 26                 1831 	add	a,@r0
   06EB FB                 1832 	mov	r3,a
   06EC E4                 1833 	clr	a
   06ED 08                 1834 	inc	r0
   06EE 36                 1835 	addc	a,@r0
   06EF FC                 1836 	mov	r4,a
   06F0 08                 1837 	inc	r0
   06F1 86 05              1838 	mov	ar5,@r0
   06F3 74 02              1839 	mov	a,#0x02
   06F5 2B                 1840 	add	a,r3
   06F6 FF                 1841 	mov	r7,a
   06F7 E4                 1842 	clr	a
   06F8 3C                 1843 	addc	a,r4
   06F9 FC                 1844 	mov	r4,a
   06FA 8D 06              1845 	mov	ar6,r5
   06FC 8F 82              1846 	mov	dpl,r7
   06FE 8C 83              1847 	mov	dph,r4
   0700 8E F0              1848 	mov	b,r6
   0702 12s00r00           1849 	lcall	__gptrget
   0705 FA                 1850 	mov	r2,a
   0706 A3                 1851 	inc	dptr
   0707 12s00r00           1852 	lcall	__gptrget
   070A FD                 1853 	mov	r5,a
   070B 0A                 1854 	inc	r2
   070C BA 00 01           1855 	cjne	r2,#0x00,00150$
   070F 0D                 1856 	inc	r5
   0710                    1857 00150$:
   0710 8F 82              1858 	mov	dpl,r7
   0712 8C 83              1859 	mov	dph,r4
   0714 8E F0              1860 	mov	b,r6
   0716 EA                 1861 	mov	a,r2
   0717 12s00r00           1862 	lcall	__gptrput
   071A A3                 1863 	inc	dptr
   071B ED                 1864 	mov	a,r5
   071C 12s00r00           1865 	lcall	__gptrput
   071F 80 1B              1866 	sjmp	00119$
   0721                    1867 00110$:
                           1868 ;	../../core/net/rime/rudolph0.c:151: } else if(p->h.chunk > c->current.h.chunk) {
   0721 E5*00              1869 	mov	a,_bp
   0723 24 0B              1870 	add	a,#0x0b
   0725 F8                 1871 	mov	r0,a
   0726 C3                 1872 	clr	c
   0727 E6                 1873 	mov	a,@r0
   0728 9E                 1874 	subb	a,r6
   0729 08                 1875 	inc	r0
   072A E6                 1876 	mov	a,@r0
   072B 9F                 1877 	subb	a,r7
   072C 50 0E              1878 	jnc	00119$
                           1879 ;	../../core/net/rime/rudolph0.c:153: send_nack(c);
   072E A8*00              1880 	mov	r0,_bp
   0730 08                 1881 	inc	r0
   0731 86 82              1882 	mov	dpl,@r0
   0733 08                 1883 	inc	r0
   0734 86 83              1884 	mov	dph,@r0
   0736 08                 1885 	inc	r0
   0737 86 F0              1886 	mov	b,@r0
   0739 12s01r11           1887 	lcall	_send_nack
   073C                    1888 00119$:
   073C 85*00 81           1889 	mov	sp,_bp
   073F D0*00              1890 	pop	_bp
   0741 22                 1891 	ret
                           1892 ;------------------------------------------------------------
                           1893 ;Allocation info for local variables in function 'recv_nack'
                           1894 ;------------------------------------------------------------
                           1895 ;polite                    Allocated to registers r5 r6 r7 
                           1896 ;c                         Allocated to stack - _bp +1
                           1897 ;p                         Allocated to registers r2 r3 r4 
                           1898 ;------------------------------------------------------------
                           1899 ;	../../core/net/rime/rudolph0.c:162: recv_nack(struct polite_conn *polite)
                           1900 ;	-----------------------------------------
                           1901 ;	 function recv_nack
                           1902 ;	-----------------------------------------
   0742                    1903 _recv_nack:
   0742 C0*00              1904 	push	_bp
   0744 85 81*00           1905 	mov	_bp,sp
   0747 05 81              1906 	inc	sp
   0749 05 81              1907 	inc	sp
   074B 05 81              1908 	inc	sp
   074D AD 82              1909 	mov	r5,dpl
   074F AE 83              1910 	mov	r6,dph
   0751 AF F0              1911 	mov	r7,b
                           1912 ;	../../core/net/rime/rudolph0.c:164: struct rudolph0_conn *c = (struct rudolph0_conn *)
   0753 ED                 1913 	mov	a,r5
   0754 24 D6              1914 	add	a,#0xD6
   0756 FD                 1915 	mov	r5,a
   0757 EE                 1916 	mov	a,r6
   0758 34 FF              1917 	addc	a,#0xFF
   075A FE                 1918 	mov	r6,a
   075B A8*00              1919 	mov	r0,_bp
   075D 08                 1920 	inc	r0
   075E A6 05              1921 	mov	@r0,ar5
   0760 08                 1922 	inc	r0
   0761 A6 06              1923 	mov	@r0,ar6
   0763 08                 1924 	inc	r0
   0764 A6 07              1925 	mov	@r0,ar7
                           1926 ;	../../core/net/rime/rudolph0.c:167: struct rudolph0_datapacket *p = packetbuf_dataptr();
   0766 12s00r00           1927 	lcall	_packetbuf_dataptr
                           1928 ;	../../core/net/rime/rudolph0.c:169: if(p->h.type == TYPE_NACK && c->state == STATE_SENDER) {
   0769 AA 82              1929 	mov	r2,dpl
   076B AB 83              1930 	mov	r3,dph
   076D AC F0              1931 	mov	r4,b
   076F 12s00r00           1932 	lcall	__gptrget
   0772 FF                 1933 	mov	r7,a
   0773 BF 01 02           1934 	cjne	r7,#0x01,00115$
   0776 80 03              1935 	sjmp	00116$
   0778                    1936 00115$:
   0778 02s08r73           1937 	ljmp	00107$
   077B                    1938 00116$:
   077B A8*00              1939 	mov	r0,_bp
   077D 08                 1940 	inc	r0
   077E 74 57              1941 	mov	a,#0x57
   0780 26                 1942 	add	a,@r0
   0781 FD                 1943 	mov	r5,a
   0782 E4                 1944 	clr	a
   0783 08                 1945 	inc	r0
   0784 36                 1946 	addc	a,@r0
   0785 FE                 1947 	mov	r6,a
   0786 08                 1948 	inc	r0
   0787 86 07              1949 	mov	ar7,@r0
   0789 8D 82              1950 	mov	dpl,r5
   078B 8E 83              1951 	mov	dph,r6
   078D 8F F0              1952 	mov	b,r7
   078F 12s00r00           1953 	lcall	__gptrget
   0792 FD                 1954 	mov	r5,a
   0793 BD 01 02           1955 	cjne	r5,#0x01,00117$
   0796 80 03              1956 	sjmp	00118$
   0798                    1957 00117$:
   0798 02s08r73           1958 	ljmp	00107$
   079B                    1959 00118$:
                           1960 ;	../../core/net/rime/rudolph0.c:170: if(p->h.version == c->current.h.version) {
   079B 74 01              1961 	mov	a,#0x01
   079D 2A                 1962 	add	a,r2
   079E FD                 1963 	mov	r5,a
   079F E4                 1964 	clr	a
   07A0 3B                 1965 	addc	a,r3
   07A1 FE                 1966 	mov	r6,a
   07A2 8C 07              1967 	mov	ar7,r4
   07A4 8D 82              1968 	mov	dpl,r5
   07A6 8E 83              1969 	mov	dph,r6
   07A8 8F F0              1970 	mov	b,r7
   07AA 12s00r00           1971 	lcall	__gptrget
   07AD FD                 1972 	mov	r5,a
   07AE C0 02              1973 	push	ar2
   07B0 C0 03              1974 	push	ar3
   07B2 C0 04              1975 	push	ar4
   07B4 A8*00              1976 	mov	r0,_bp
   07B6 08                 1977 	inc	r0
   07B7 74 59              1978 	mov	a,#0x59
   07B9 26                 1979 	add	a,@r0
   07BA FC                 1980 	mov	r4,a
   07BB E4                 1981 	clr	a
   07BC 08                 1982 	inc	r0
   07BD 36                 1983 	addc	a,@r0
   07BE FE                 1984 	mov	r6,a
   07BF 08                 1985 	inc	r0
   07C0 86 07              1986 	mov	ar7,@r0
   07C2 8C 82              1987 	mov	dpl,r4
   07C4 8E 83              1988 	mov	dph,r6
   07C6 8F F0              1989 	mov	b,r7
   07C8 12s00r00           1990 	lcall	__gptrget
   07CB FC                 1991 	mov	r4,a
   07CC ED                 1992 	mov	a,r5
   07CD B5 04 02           1993 	cjne	a,ar4,00119$
   07D0 80 08              1994 	sjmp	00120$
   07D2                    1995 00119$:
   07D2 D0 04              1996 	pop	ar4
   07D4 D0 03              1997 	pop	ar3
   07D6 D0 02              1998 	pop	ar2
   07D8 80 3B              1999 	sjmp	00102$
   07DA                    2000 00120$:
   07DA D0 04              2001 	pop	ar4
   07DC D0 03              2002 	pop	ar3
   07DE D0 02              2003 	pop	ar2
                           2004 ;	../../core/net/rime/rudolph0.c:172: c->current.h.chunk = p->h.chunk;
   07E0 A8*00              2005 	mov	r0,_bp
   07E2 08                 2006 	inc	r0
   07E3 74 5A              2007 	mov	a,#0x5A
   07E5 26                 2008 	add	a,@r0
   07E6 FD                 2009 	mov	r5,a
   07E7 E4                 2010 	clr	a
   07E8 08                 2011 	inc	r0
   07E9 36                 2012 	addc	a,@r0
   07EA FE                 2013 	mov	r6,a
   07EB 08                 2014 	inc	r0
   07EC 86 07              2015 	mov	ar7,@r0
   07EE 74 02              2016 	mov	a,#0x02
   07F0 2A                 2017 	add	a,r2
   07F1 FA                 2018 	mov	r2,a
   07F2 E4                 2019 	clr	a
   07F3 3B                 2020 	addc	a,r3
   07F4 FB                 2021 	mov	r3,a
   07F5 8A 82              2022 	mov	dpl,r2
   07F7 8B 83              2023 	mov	dph,r3
   07F9 8C F0              2024 	mov	b,r4
   07FB 12s00r00           2025 	lcall	__gptrget
   07FE FA                 2026 	mov	r2,a
   07FF A3                 2027 	inc	dptr
   0800 12s00r00           2028 	lcall	__gptrget
   0803 FB                 2029 	mov	r3,a
   0804 8D 82              2030 	mov	dpl,r5
   0806 8E 83              2031 	mov	dph,r6
   0808 8F F0              2032 	mov	b,r7
   080A EA                 2033 	mov	a,r2
   080B 12s00r00           2034 	lcall	__gptrput
   080E A3                 2035 	inc	dptr
   080F EB                 2036 	mov	a,r3
   0810 12s00r00           2037 	lcall	__gptrput
   0813 80 1D              2038 	sjmp	00103$
   0815                    2039 00102$:
                           2040 ;	../../core/net/rime/rudolph0.c:175: c->current.h.chunk = 0;
   0815 A8*00              2041 	mov	r0,_bp
   0817 08                 2042 	inc	r0
   0818 74 5A              2043 	mov	a,#0x5A
   081A 26                 2044 	add	a,@r0
   081B FD                 2045 	mov	r5,a
   081C E4                 2046 	clr	a
   081D 08                 2047 	inc	r0
   081E 36                 2048 	addc	a,@r0
   081F FE                 2049 	mov	r6,a
   0820 08                 2050 	inc	r0
   0821 86 07              2051 	mov	ar7,@r0
   0823 8D 82              2052 	mov	dpl,r5
   0825 8E 83              2053 	mov	dph,r6
   0827 8F F0              2054 	mov	b,r7
   0829 E4                 2055 	clr	a
   082A 12s00r00           2056 	lcall	__gptrput
   082D A3                 2057 	inc	dptr
   082E E4                 2058 	clr	a
   082F 12s00r00           2059 	lcall	__gptrput
   0832                    2060 00103$:
                           2061 ;	../../core/net/rime/rudolph0.c:177: read_new_datapacket(c);
   0832 A8*00              2062 	mov	r0,_bp
   0834 08                 2063 	inc	r0
   0835 86 82              2064 	mov	dpl,@r0
   0837 08                 2065 	inc	r0
   0838 86 83              2066 	mov	dph,@r0
   083A 08                 2067 	inc	r0
   083B 86 F0              2068 	mov	b,@r0
   083D 12s00r00           2069 	lcall	_read_new_datapacket
                           2070 ;	../../core/net/rime/rudolph0.c:178: stbroadcast_set_timer(&c->c, c->send_interval);
   0840 A8*00              2071 	mov	r0,_bp
   0842 08                 2072 	inc	r0
   0843 74 55              2073 	mov	a,#0x55
   0845 26                 2074 	add	a,@r0
   0846 FD                 2075 	mov	r5,a
   0847 E4                 2076 	clr	a
   0848 08                 2077 	inc	r0
   0849 36                 2078 	addc	a,@r0
   084A FE                 2079 	mov	r6,a
   084B 08                 2080 	inc	r0
   084C 86 07              2081 	mov	ar7,@r0
   084E 8D 82              2082 	mov	dpl,r5
   0850 8E 83              2083 	mov	dph,r6
   0852 8F F0              2084 	mov	b,r7
   0854 12s00r00           2085 	lcall	__gptrget
   0857 FD                 2086 	mov	r5,a
   0858 A3                 2087 	inc	dptr
   0859 12s00r00           2088 	lcall	__gptrget
   085C FE                 2089 	mov	r6,a
   085D C0 05              2090 	push	ar5
   085F C0 06              2091 	push	ar6
   0861 A8*00              2092 	mov	r0,_bp
   0863 08                 2093 	inc	r0
   0864 86 82              2094 	mov	dpl,@r0
   0866 08                 2095 	inc	r0
   0867 86 83              2096 	mov	dph,@r0
   0869 08                 2097 	inc	r0
   086A 86 F0              2098 	mov	b,@r0
   086C 12s00r00           2099 	lcall	_stbroadcast_set_timer
   086F 15 81              2100 	dec	sp
   0871 15 81              2101 	dec	sp
   0873                    2102 00107$:
   0873 85*00 81           2103 	mov	sp,_bp
   0876 D0*00              2104 	pop	_bp
   0878 22                 2105 	ret
                           2106 ;------------------------------------------------------------
                           2107 ;Allocation info for local variables in function 'rudolph0_open'
                           2108 ;------------------------------------------------------------
                           2109 ;channel                   Allocated to stack - _bp -4
                           2110 ;cb                        Allocated to stack - _bp -7
                           2111 ;c                         Allocated to stack - _bp +1
                           2112 ;------------------------------------------------------------
                           2113 ;	../../core/net/rime/rudolph0.c:186: rudolph0_open(struct rudolph0_conn *c, uint16_t channel,
                           2114 ;	-----------------------------------------
                           2115 ;	 function rudolph0_open
                           2116 ;	-----------------------------------------
   0879                    2117 _rudolph0_open:
   0879 C0*00              2118 	push	_bp
   087B 85 81*00           2119 	mov	_bp,sp
   087E C0 82              2120 	push	dpl
   0880 C0 83              2121 	push	dph
   0882 C0 F0              2122 	push	b
                           2123 ;	../../core/net/rime/rudolph0.c:189: stbroadcast_open(&c->c, channel, &stbroadcast);
   0884 74r06              2124 	mov	a,#_stbroadcast
   0886 C0 E0              2125 	push	acc
   0888 74s00              2126 	mov	a,#(_stbroadcast >> 8)
   088A C0 E0              2127 	push	acc
   088C 74 80              2128 	mov	a,#0x80
   088E C0 E0              2129 	push	acc
   0890 E5*00              2130 	mov	a,_bp
   0892 24 FC              2131 	add	a,#0xfc
   0894 F8                 2132 	mov	r0,a
   0895 E6                 2133 	mov	a,@r0
   0896 C0 E0              2134 	push	acc
   0898 08                 2135 	inc	r0
   0899 E6                 2136 	mov	a,@r0
   089A C0 E0              2137 	push	acc
   089C A8*00              2138 	mov	r0,_bp
   089E 08                 2139 	inc	r0
   089F 86 82              2140 	mov	dpl,@r0
   08A1 08                 2141 	inc	r0
   08A2 86 83              2142 	mov	dph,@r0
   08A4 08                 2143 	inc	r0
   08A5 86 F0              2144 	mov	b,@r0
   08A7 12s00r00           2145 	lcall	_stbroadcast_open
   08AA E5 81              2146 	mov	a,sp
   08AC 24 FB              2147 	add	a,#0xfb
   08AE F5 81              2148 	mov	sp,a
                           2149 ;	../../core/net/rime/rudolph0.c:190: polite_open(&c->nackc, channel + 1, &polite);
   08B0 E5*00              2150 	mov	a,_bp
   08B2 24 FC              2151 	add	a,#0xfc
   08B4 F8                 2152 	mov	r0,a
   08B5 74 01              2153 	mov	a,#0x01
   08B7 26                 2154 	add	a,@r0
   08B8 FB                 2155 	mov	r3,a
   08B9 E4                 2156 	clr	a
   08BA 08                 2157 	inc	r0
   08BB 36                 2158 	addc	a,@r0
   08BC FC                 2159 	mov	r4,a
   08BD A8*00              2160 	mov	r0,_bp
   08BF 08                 2161 	inc	r0
   08C0 74 2A              2162 	mov	a,#0x2A
   08C2 26                 2163 	add	a,@r0
   08C3 FA                 2164 	mov	r2,a
   08C4 E4                 2165 	clr	a
   08C5 08                 2166 	inc	r0
   08C6 36                 2167 	addc	a,@r0
   08C7 FE                 2168 	mov	r6,a
   08C8 08                 2169 	inc	r0
   08C9 86 07              2170 	mov	ar7,@r0
   08CB 74r00              2171 	mov	a,#_polite
   08CD C0 E0              2172 	push	acc
   08CF 74s00              2173 	mov	a,#(_polite >> 8)
   08D1 C0 E0              2174 	push	acc
   08D3 74 80              2175 	mov	a,#0x80
   08D5 C0 E0              2176 	push	acc
   08D7 C0 03              2177 	push	ar3
   08D9 C0 04              2178 	push	ar4
   08DB 8A 82              2179 	mov	dpl,r2
   08DD 8E 83              2180 	mov	dph,r6
   08DF 8F F0              2181 	mov	b,r7
   08E1 12s00r00           2182 	lcall	_polite_open
   08E4 E5 81              2183 	mov	a,sp
   08E6 24 FB              2184 	add	a,#0xfb
   08E8 F5 81              2185 	mov	sp,a
                           2186 ;	../../core/net/rime/rudolph0.c:191: c->cb = cb;
   08EA A8*00              2187 	mov	r0,_bp
   08EC 08                 2188 	inc	r0
   08ED 74 52              2189 	mov	a,#0x52
   08EF 26                 2190 	add	a,@r0
   08F0 FD                 2191 	mov	r5,a
   08F1 E4                 2192 	clr	a
   08F2 08                 2193 	inc	r0
   08F3 36                 2194 	addc	a,@r0
   08F4 FE                 2195 	mov	r6,a
   08F5 08                 2196 	inc	r0
   08F6 86 07              2197 	mov	ar7,@r0
   08F8 8D 82              2198 	mov	dpl,r5
   08FA 8E 83              2199 	mov	dph,r6
   08FC 8F F0              2200 	mov	b,r7
   08FE E5*00              2201 	mov	a,_bp
   0900 24 F9              2202 	add	a,#0xf9
   0902 F8                 2203 	mov	r0,a
   0903 E6                 2204 	mov	a,@r0
   0904 12s00r00           2205 	lcall	__gptrput
   0907 A3                 2206 	inc	dptr
   0908 08                 2207 	inc	r0
   0909 E6                 2208 	mov	a,@r0
   090A 12s00r00           2209 	lcall	__gptrput
   090D A3                 2210 	inc	dptr
   090E 08                 2211 	inc	r0
   090F E6                 2212 	mov	a,@r0
   0910 12s00r00           2213 	lcall	__gptrput
                           2214 ;	../../core/net/rime/rudolph0.c:192: c->current.h.version = 0;
   0913 A8*00              2215 	mov	r0,_bp
   0915 08                 2216 	inc	r0
   0916 74 58              2217 	mov	a,#0x58
   0918 26                 2218 	add	a,@r0
   0919 FD                 2219 	mov	r5,a
   091A E4                 2220 	clr	a
   091B 08                 2221 	inc	r0
   091C 36                 2222 	addc	a,@r0
   091D FE                 2223 	mov	r6,a
   091E 08                 2224 	inc	r0
   091F 86 07              2225 	mov	ar7,@r0
   0921 0D                 2226 	inc	r5
   0922 BD 00 01           2227 	cjne	r5,#0x00,00103$
   0925 0E                 2228 	inc	r6
   0926                    2229 00103$:
   0926 8D 82              2230 	mov	dpl,r5
   0928 8E 83              2231 	mov	dph,r6
   092A 8F F0              2232 	mov	b,r7
   092C E4                 2233 	clr	a
   092D 12s00r00           2234 	lcall	__gptrput
                           2235 ;	../../core/net/rime/rudolph0.c:193: c->state = STATE_RECEIVER;
   0930 A8*00              2236 	mov	r0,_bp
   0932 08                 2237 	inc	r0
   0933 74 57              2238 	mov	a,#0x57
   0935 26                 2239 	add	a,@r0
   0936 FD                 2240 	mov	r5,a
   0937 E4                 2241 	clr	a
   0938 08                 2242 	inc	r0
   0939 36                 2243 	addc	a,@r0
   093A FE                 2244 	mov	r6,a
   093B 08                 2245 	inc	r0
   093C 86 07              2246 	mov	ar7,@r0
   093E 8D 82              2247 	mov	dpl,r5
   0940 8E 83              2248 	mov	dph,r6
   0942 8F F0              2249 	mov	b,r7
   0944 E4                 2250 	clr	a
   0945 12s00r00           2251 	lcall	__gptrput
                           2252 ;	../../core/net/rime/rudolph0.c:194: c->send_interval = DEFAULT_SEND_INTERVAL;
   0948 A8*00              2253 	mov	r0,_bp
   094A 08                 2254 	inc	r0
   094B 74 55              2255 	mov	a,#0x55
   094D 26                 2256 	add	a,@r0
   094E FD                 2257 	mov	r5,a
   094F E4                 2258 	clr	a
   0950 08                 2259 	inc	r0
   0951 36                 2260 	addc	a,@r0
   0952 FE                 2261 	mov	r6,a
   0953 08                 2262 	inc	r0
   0954 86 07              2263 	mov	ar7,@r0
   0956 8D 82              2264 	mov	dpl,r5
   0958 8E 83              2265 	mov	dph,r6
   095A 8F F0              2266 	mov	b,r7
   095C 74 40              2267 	mov	a,#0x40
   095E 12s00r00           2268 	lcall	__gptrput
   0961 A3                 2269 	inc	dptr
   0962 E4                 2270 	clr	a
   0963 12s00r00           2271 	lcall	__gptrput
   0966 85*00 81           2272 	mov	sp,_bp
   0969 D0*00              2273 	pop	_bp
   096B 22                 2274 	ret
                           2275 ;------------------------------------------------------------
                           2276 ;Allocation info for local variables in function 'rudolph0_close'
                           2277 ;------------------------------------------------------------
                           2278 ;c                         Allocated to registers r5 r6 r7 
                           2279 ;------------------------------------------------------------
                           2280 ;	../../core/net/rime/rudolph0.c:198: rudolph0_close(struct rudolph0_conn *c)
                           2281 ;	-----------------------------------------
                           2282 ;	 function rudolph0_close
                           2283 ;	-----------------------------------------
   096C                    2284 _rudolph0_close:
                           2285 ;	../../core/net/rime/rudolph0.c:200: stbroadcast_close(&c->c);
   096C AD 82              2286 	mov	r5,dpl
   096E AE 83              2287 	mov	r6,dph
   0970 AF F0              2288 	mov	r7,b
   0972 C0 07              2289 	push	ar7
   0974 C0 06              2290 	push	ar6
   0976 C0 05              2291 	push	ar5
   0978 12s00r00           2292 	lcall	_stbroadcast_close
   097B D0 05              2293 	pop	ar5
   097D D0 06              2294 	pop	ar6
   097F D0 07              2295 	pop	ar7
                           2296 ;	../../core/net/rime/rudolph0.c:201: polite_close(&c->nackc);
   0981 74 2A              2297 	mov	a,#0x2A
   0983 2D                 2298 	add	a,r5
   0984 FD                 2299 	mov	r5,a
   0985 E4                 2300 	clr	a
   0986 3E                 2301 	addc	a,r6
   0987 FE                 2302 	mov	r6,a
   0988 8D 82              2303 	mov	dpl,r5
   098A 8E 83              2304 	mov	dph,r6
   098C 8F F0              2305 	mov	b,r7
   098E 02s00r00           2306 	ljmp	_polite_close
                           2307 ;------------------------------------------------------------
                           2308 ;Allocation info for local variables in function 'rudolph0_send'
                           2309 ;------------------------------------------------------------
                           2310 ;send_interval             Allocated to stack - _bp -4
                           2311 ;c                         Allocated to stack - _bp +1
                           2312 ;sloc0                     Allocated to stack - _bp +4
                           2313 ;------------------------------------------------------------
                           2314 ;	../../core/net/rime/rudolph0.c:205: rudolph0_send(struct rudolph0_conn *c, clock_time_t send_interval)
                           2315 ;	-----------------------------------------
                           2316 ;	 function rudolph0_send
                           2317 ;	-----------------------------------------
   0991                    2318 _rudolph0_send:
   0991 C0*00              2319 	push	_bp
   0993 85 81*00           2320 	mov	_bp,sp
   0996 C0 82              2321 	push	dpl
   0998 C0 83              2322 	push	dph
   099A C0 F0              2323 	push	b
   099C 05 81              2324 	inc	sp
   099E 05 81              2325 	inc	sp
   09A0 05 81              2326 	inc	sp
                           2327 ;	../../core/net/rime/rudolph0.c:207: c->state = STATE_SENDER;
   09A2 A8*00              2328 	mov	r0,_bp
   09A4 08                 2329 	inc	r0
   09A5 74 57              2330 	mov	a,#0x57
   09A7 26                 2331 	add	a,@r0
   09A8 FA                 2332 	mov	r2,a
   09A9 E4                 2333 	clr	a
   09AA 08                 2334 	inc	r0
   09AB 36                 2335 	addc	a,@r0
   09AC FB                 2336 	mov	r3,a
   09AD 08                 2337 	inc	r0
   09AE 86 04              2338 	mov	ar4,@r0
   09B0 8A 82              2339 	mov	dpl,r2
   09B2 8B 83              2340 	mov	dph,r3
   09B4 8C F0              2341 	mov	b,r4
   09B6 74 01              2342 	mov	a,#0x01
   09B8 12s00r00           2343 	lcall	__gptrput
                           2344 ;	../../core/net/rime/rudolph0.c:208: c->current.h.version++;
   09BB A8*00              2345 	mov	r0,_bp
   09BD 08                 2346 	inc	r0
   09BE 74 58              2347 	mov	a,#0x58
   09C0 26                 2348 	add	a,@r0
   09C1 FA                 2349 	mov	r2,a
   09C2 E4                 2350 	clr	a
   09C3 08                 2351 	inc	r0
   09C4 36                 2352 	addc	a,@r0
   09C5 FB                 2353 	mov	r3,a
   09C6 08                 2354 	inc	r0
   09C7 86 04              2355 	mov	ar4,@r0
   09C9 E5*00              2356 	mov	a,_bp
   09CB 24 04              2357 	add	a,#0x04
   09CD F8                 2358 	mov	r0,a
   09CE 74 01              2359 	mov	a,#0x01
   09D0 2A                 2360 	add	a,r2
   09D1 F6                 2361 	mov	@r0,a
   09D2 E4                 2362 	clr	a
   09D3 3B                 2363 	addc	a,r3
   09D4 08                 2364 	inc	r0
   09D5 F6                 2365 	mov	@r0,a
   09D6 08                 2366 	inc	r0
   09D7 A6 04              2367 	mov	@r0,ar4
   09D9 E5*00              2368 	mov	a,_bp
   09DB 24 04              2369 	add	a,#0x04
   09DD F8                 2370 	mov	r0,a
   09DE 86 82              2371 	mov	dpl,@r0
   09E0 08                 2372 	inc	r0
   09E1 86 83              2373 	mov	dph,@r0
   09E3 08                 2374 	inc	r0
   09E4 86 F0              2375 	mov	b,@r0
   09E6 12s00r00           2376 	lcall	__gptrget
   09E9 FF                 2377 	mov	r7,a
   09EA 0F                 2378 	inc	r7
   09EB E5*00              2379 	mov	a,_bp
   09ED 24 04              2380 	add	a,#0x04
   09EF F8                 2381 	mov	r0,a
   09F0 86 82              2382 	mov	dpl,@r0
   09F2 08                 2383 	inc	r0
   09F3 86 83              2384 	mov	dph,@r0
   09F5 08                 2385 	inc	r0
   09F6 86 F0              2386 	mov	b,@r0
   09F8 EF                 2387 	mov	a,r7
   09F9 12s00r00           2388 	lcall	__gptrput
                           2389 ;	../../core/net/rime/rudolph0.c:209: c->current.h.version++;
   09FC 0F                 2390 	inc	r7
   09FD E5*00              2391 	mov	a,_bp
   09FF 24 04              2392 	add	a,#0x04
   0A01 F8                 2393 	mov	r0,a
   0A02 86 82              2394 	mov	dpl,@r0
   0A04 08                 2395 	inc	r0
   0A05 86 83              2396 	mov	dph,@r0
   0A07 08                 2397 	inc	r0
   0A08 86 F0              2398 	mov	b,@r0
   0A0A EF                 2399 	mov	a,r7
   0A0B 12s00r00           2400 	lcall	__gptrput
                           2401 ;	../../core/net/rime/rudolph0.c:210: c->current.h.chunk = 0;
   0A0E 74 02              2402 	mov	a,#0x02
   0A10 2A                 2403 	add	a,r2
   0A11 FD                 2404 	mov	r5,a
   0A12 E4                 2405 	clr	a
   0A13 3B                 2406 	addc	a,r3
   0A14 FE                 2407 	mov	r6,a
   0A15 8C 07              2408 	mov	ar7,r4
   0A17 8D 82              2409 	mov	dpl,r5
   0A19 8E 83              2410 	mov	dph,r6
   0A1B 8F F0              2411 	mov	b,r7
   0A1D E4                 2412 	clr	a
   0A1E 12s00r00           2413 	lcall	__gptrput
   0A21 A3                 2414 	inc	dptr
   0A22 E4                 2415 	clr	a
   0A23 12s00r00           2416 	lcall	__gptrput
                           2417 ;	../../core/net/rime/rudolph0.c:211: c->current.h.type = TYPE_DATA;
   0A26 8A 82              2418 	mov	dpl,r2
   0A28 8B 83              2419 	mov	dph,r3
   0A2A 8C F0              2420 	mov	b,r4
   0A2C E4                 2421 	clr	a
   0A2D 12s00r00           2422 	lcall	__gptrput
                           2423 ;	../../core/net/rime/rudolph0.c:212: read_new_datapacket(c);
   0A30 A8*00              2424 	mov	r0,_bp
   0A32 08                 2425 	inc	r0
   0A33 86 82              2426 	mov	dpl,@r0
   0A35 08                 2427 	inc	r0
   0A36 86 83              2428 	mov	dph,@r0
   0A38 08                 2429 	inc	r0
   0A39 86 F0              2430 	mov	b,@r0
   0A3B 12s00r00           2431 	lcall	_read_new_datapacket
                           2432 ;	../../core/net/rime/rudolph0.c:213: packetbuf_reference(&c->current, sizeof(struct rudolph0_datapacket));
   0A3E A8*00              2433 	mov	r0,_bp
   0A40 08                 2434 	inc	r0
   0A41 74 58              2435 	mov	a,#0x58
   0A43 26                 2436 	add	a,@r0
   0A44 FD                 2437 	mov	r5,a
   0A45 E4                 2438 	clr	a
   0A46 08                 2439 	inc	r0
   0A47 36                 2440 	addc	a,@r0
   0A48 FE                 2441 	mov	r6,a
   0A49 08                 2442 	inc	r0
   0A4A 86 07              2443 	mov	ar7,@r0
   0A4C 74 45              2444 	mov	a,#0x45
   0A4E C0 E0              2445 	push	acc
   0A50 E4                 2446 	clr	a
   0A51 C0 E0              2447 	push	acc
   0A53 8D 82              2448 	mov	dpl,r5
   0A55 8E 83              2449 	mov	dph,r6
   0A57 8F F0              2450 	mov	b,r7
   0A59 12s00r00           2451 	lcall	_packetbuf_reference
   0A5C 15 81              2452 	dec	sp
   0A5E 15 81              2453 	dec	sp
                           2454 ;	../../core/net/rime/rudolph0.c:214: c->send_interval = send_interval;
   0A60 A8*00              2455 	mov	r0,_bp
   0A62 08                 2456 	inc	r0
   0A63 74 55              2457 	mov	a,#0x55
   0A65 26                 2458 	add	a,@r0
   0A66 FD                 2459 	mov	r5,a
   0A67 E4                 2460 	clr	a
   0A68 08                 2461 	inc	r0
   0A69 36                 2462 	addc	a,@r0
   0A6A FE                 2463 	mov	r6,a
   0A6B 08                 2464 	inc	r0
   0A6C 86 07              2465 	mov	ar7,@r0
   0A6E 8D 82              2466 	mov	dpl,r5
   0A70 8E 83              2467 	mov	dph,r6
   0A72 8F F0              2468 	mov	b,r7
   0A74 E5*00              2469 	mov	a,_bp
   0A76 24 FC              2470 	add	a,#0xfc
   0A78 F8                 2471 	mov	r0,a
   0A79 E6                 2472 	mov	a,@r0
   0A7A 12s00r00           2473 	lcall	__gptrput
   0A7D A3                 2474 	inc	dptr
   0A7E 08                 2475 	inc	r0
   0A7F E6                 2476 	mov	a,@r0
   0A80 12s00r00           2477 	lcall	__gptrput
                           2478 ;	../../core/net/rime/rudolph0.c:215: stbroadcast_send_stubborn(&c->c, c->send_interval);
   0A83 E5*00              2479 	mov	a,_bp
   0A85 24 FC              2480 	add	a,#0xfc
   0A87 F8                 2481 	mov	r0,a
   0A88 E6                 2482 	mov	a,@r0
   0A89 C0 E0              2483 	push	acc
   0A8B 08                 2484 	inc	r0
   0A8C E6                 2485 	mov	a,@r0
   0A8D C0 E0              2486 	push	acc
   0A8F A8*00              2487 	mov	r0,_bp
   0A91 08                 2488 	inc	r0
   0A92 86 82              2489 	mov	dpl,@r0
   0A94 08                 2490 	inc	r0
   0A95 86 83              2491 	mov	dph,@r0
   0A97 08                 2492 	inc	r0
   0A98 86 F0              2493 	mov	b,@r0
   0A9A 12s00r00           2494 	lcall	_stbroadcast_send_stubborn
   0A9D 15 81              2495 	dec	sp
   0A9F 15 81              2496 	dec	sp
   0AA1 85*00 81           2497 	mov	sp,_bp
   0AA4 D0*00              2498 	pop	_bp
   0AA6 22                 2499 	ret
                           2500 ;------------------------------------------------------------
                           2501 ;Allocation info for local variables in function 'rudolph0_force_restart'
                           2502 ;------------------------------------------------------------
                           2503 ;c                         Allocated to registers r5 r6 r7 
                           2504 ;------------------------------------------------------------
                           2505 ;	../../core/net/rime/rudolph0.c:219: rudolph0_force_restart(struct rudolph0_conn *c)
                           2506 ;	-----------------------------------------
                           2507 ;	 function rudolph0_force_restart
                           2508 ;	-----------------------------------------
   0AA7                    2509 _rudolph0_force_restart:
   0AA7 AD 82              2510 	mov	r5,dpl
   0AA9 AE 83              2511 	mov	r6,dph
   0AAB AF F0              2512 	mov	r7,b
                           2513 ;	../../core/net/rime/rudolph0.c:221: c->current.h.chunk = 0;
   0AAD 74 58              2514 	mov	a,#0x58
   0AAF 2D                 2515 	add	a,r5
   0AB0 FA                 2516 	mov	r2,a
   0AB1 E4                 2517 	clr	a
   0AB2 3E                 2518 	addc	a,r6
   0AB3 FB                 2519 	mov	r3,a
   0AB4 8F 04              2520 	mov	ar4,r7
   0AB6 74 02              2521 	mov	a,#0x02
   0AB8 2A                 2522 	add	a,r2
   0AB9 FA                 2523 	mov	r2,a
   0ABA E4                 2524 	clr	a
   0ABB 3B                 2525 	addc	a,r3
   0ABC FB                 2526 	mov	r3,a
   0ABD 8A 82              2527 	mov	dpl,r2
   0ABF 8B 83              2528 	mov	dph,r3
   0AC1 8C F0              2529 	mov	b,r4
   0AC3 E4                 2530 	clr	a
   0AC4 12s00r00           2531 	lcall	__gptrput
   0AC7 A3                 2532 	inc	dptr
   0AC8 E4                 2533 	clr	a
   0AC9 12s00r00           2534 	lcall	__gptrput
                           2535 ;	../../core/net/rime/rudolph0.c:222: send_nack(c);
   0ACC 8D 82              2536 	mov	dpl,r5
   0ACE 8E 83              2537 	mov	dph,r6
   0AD0 8F F0              2538 	mov	b,r7
   0AD2 02s01r11           2539 	ljmp	_send_nack
                           2540 ;------------------------------------------------------------
                           2541 ;Allocation info for local variables in function 'rudolph0_stop'
                           2542 ;------------------------------------------------------------
                           2543 ;c                         Allocated to registers r5 r6 r7 
                           2544 ;------------------------------------------------------------
                           2545 ;	../../core/net/rime/rudolph0.c:226: rudolph0_stop(struct rudolph0_conn *c)
                           2546 ;	-----------------------------------------
                           2547 ;	 function rudolph0_stop
                           2548 ;	-----------------------------------------
   0AD5                    2549 _rudolph0_stop:
                           2550 ;	../../core/net/rime/rudolph0.c:228: stbroadcast_cancel(&c->c);
   0AD5 02s00r00           2551 	ljmp	_stbroadcast_cancel
                           2552 ;------------------------------------------------------------
                           2553 ;Allocation info for local variables in function 'rudolph0_version'
                           2554 ;------------------------------------------------------------
                           2555 ;c                         Allocated to registers r5 r6 r7 
                           2556 ;------------------------------------------------------------
                           2557 ;	../../core/net/rime/rudolph0.c:232: rudolph0_version(struct rudolph0_conn *c)
                           2558 ;	-----------------------------------------
                           2559 ;	 function rudolph0_version
                           2560 ;	-----------------------------------------
   0AD8                    2561 _rudolph0_version:
   0AD8 AD 82              2562 	mov	r5,dpl
   0ADA AE 83              2563 	mov	r6,dph
   0ADC AF F0              2564 	mov	r7,b
                           2565 ;	../../core/net/rime/rudolph0.c:234: return c->current.h.version;
   0ADE 74 58              2566 	mov	a,#0x58
   0AE0 2D                 2567 	add	a,r5
   0AE1 FD                 2568 	mov	r5,a
   0AE2 E4                 2569 	clr	a
   0AE3 3E                 2570 	addc	a,r6
   0AE4 FE                 2571 	mov	r6,a
   0AE5 0D                 2572 	inc	r5
   0AE6 BD 00 01           2573 	cjne	r5,#0x00,00103$
   0AE9 0E                 2574 	inc	r6
   0AEA                    2575 00103$:
   0AEA 8D 82              2576 	mov	dpl,r5
   0AEC 8E 83              2577 	mov	dph,r6
   0AEE 8F F0              2578 	mov	b,r7
   0AF0 12s00r00           2579 	lcall	__gptrget
   0AF3 FD                 2580 	mov	r5,a
   0AF4 7F 00              2581 	mov	r7,#0x00
   0AF6 8D 82              2582 	mov	dpl,r5
   0AF8 8F 83              2583 	mov	dph,r7
   0AFA 22                 2584 	ret
                           2585 ;------------------------------------------------------------
                           2586 ;Allocation info for local variables in function 'rudolph0_set_version'
                           2587 ;------------------------------------------------------------
                           2588 ;version                   Allocated to stack - _bp -4
                           2589 ;c                         Allocated to registers r5 r6 r7 
                           2590 ;------------------------------------------------------------
                           2591 ;	../../core/net/rime/rudolph0.c:238: rudolph0_set_version(struct rudolph0_conn *c, int version)
                           2592 ;	-----------------------------------------
                           2593 ;	 function rudolph0_set_version
                           2594 ;	-----------------------------------------
   0AFB                    2595 _rudolph0_set_version:
   0AFB C0*00              2596 	push	_bp
   0AFD 85 81*00           2597 	mov	_bp,sp
   0B00 AD 82              2598 	mov	r5,dpl
   0B02 AE 83              2599 	mov	r6,dph
   0B04 AF F0              2600 	mov	r7,b
                           2601 ;	../../core/net/rime/rudolph0.c:240: c->current.h.version = version;
   0B06 74 58              2602 	mov	a,#0x58
   0B08 2D                 2603 	add	a,r5
   0B09 FD                 2604 	mov	r5,a
   0B0A E4                 2605 	clr	a
   0B0B 3E                 2606 	addc	a,r6
   0B0C FE                 2607 	mov	r6,a
   0B0D 0D                 2608 	inc	r5
   0B0E BD 00 01           2609 	cjne	r5,#0x00,00103$
   0B11 0E                 2610 	inc	r6
   0B12                    2611 00103$:
   0B12 E5*00              2612 	mov	a,_bp
   0B14 24 FC              2613 	add	a,#0xfc
   0B16 F8                 2614 	mov	r0,a
   0B17 86 04              2615 	mov	ar4,@r0
   0B19 8D 82              2616 	mov	dpl,r5
   0B1B 8E 83              2617 	mov	dph,r6
   0B1D 8F F0              2618 	mov	b,r7
   0B1F EC                 2619 	mov	a,r4
   0B20 12s00r00           2620 	lcall	__gptrput
   0B23 D0*00              2621 	pop	_bp
   0B25 22                 2622 	ret
                           2623 	.area CSEG    (CODE)
                           2624 	.area CONST   (CODE)
   0000                    2625 _polite:
   0000r42s07              2626 	.byte _recv_nack,(_recv_nack >> 8)
   0002 00 00              2627 	.byte #0x00,#0x00
   0004 00 00              2628 	.byte #0x00,#0x00
   0006                    2629 _stbroadcast:
   0006rB5s02              2630 	.byte _recv,(_recv >> 8)
   0008r1Es02              2631 	.byte _sent,(_sent >> 8)
                           2632 	.area XINIT   (CODE)
                           2633 	.area CABS    (ABS,CODE)
