                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:15 2013
                              5 ;--------------------------------------------------------
                              6 	.module stbroadcast
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _queuebuf_free
                             13 	.globl _queuebuf_to_packetbuf
                             14 	.globl _queuebuf_new_from_packetbuf
                             15 	.globl _broadcast_send
                             16 	.globl _broadcast_close
                             17 	.globl _broadcast_open
                             18 	.globl _ctimer_stop
                             19 	.globl _ctimer_set
                             20 	.globl _ctimer_reset
                             21 	.globl _IRCON2_P2IF
                             22 	.globl _IRCON2_UTX0IF
                             23 	.globl _IRCON2_UTX1IF
                             24 	.globl _IRCON2_P1IF
                             25 	.globl _IRCON2_WDTIF
                             26 	.globl _CY
                             27 	.globl _AC
                             28 	.globl _F0
                             29 	.globl _RS1
                             30 	.globl _RS0
                             31 	.globl _OV
                             32 	.globl _F1
                             33 	.globl _P
                             34 	.globl _IRCON_DMAIF
                             35 	.globl _IRCON_T1IF
                             36 	.globl _IRCON_T2IF
                             37 	.globl _IRCON_T3IF
                             38 	.globl _IRCON_T4IF
                             39 	.globl _IRCON_P0IF
                             40 	.globl _IRCON_STIF
                             41 	.globl _IEN1_DMAIE
                             42 	.globl _IEN1_T1IE
                             43 	.globl _IEN1_T2IE
                             44 	.globl _IEN1_T3IE
                             45 	.globl _IEN1_T4IE
                             46 	.globl _IEN1_P0IE
                             47 	.globl _IEN0_RFERRIE
                             48 	.globl _IEN0_ADCIE
                             49 	.globl _IEN0_URX0IE
                             50 	.globl _IEN0_URX1IE
                             51 	.globl _IEN0_ENCIE
                             52 	.globl _IEN0_STIE
                             53 	.globl _IEN0_EA
                             54 	.globl _EA
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _S0CON_ENCIF_0
                             61 	.globl _S0CON_ENCIF_1
                             62 	.globl _P1_7
                             63 	.globl _P1_6
                             64 	.globl _P1_5
                             65 	.globl _P1_4
                             66 	.globl _P1_3
                             67 	.globl _P1_2
                             68 	.globl _P1_1
                             69 	.globl _P1_0
                             70 	.globl _TCON_IT0
                             71 	.globl _TCON_RFERRIF
                             72 	.globl _TCON_IT1
                             73 	.globl _TCON_URX0IF
                             74 	.globl _TCON_ADCIF
                             75 	.globl _TCON_URX1IF
                             76 	.globl _P0_0
                             77 	.globl _P0_1
                             78 	.globl _P0_2
                             79 	.globl _P0_3
                             80 	.globl _P0_4
                             81 	.globl _P0_5
                             82 	.globl _P0_6
                             83 	.globl _P0_7
                             84 	.globl _P2DIR
                             85 	.globl _P1DIR
                             86 	.globl _P0DIR
                             87 	.globl _U1GCR
                             88 	.globl _U1UCR
                             89 	.globl _U1BAUD
                             90 	.globl _U1BUF
                             91 	.globl _U1CSR
                             92 	.globl _P2INP
                             93 	.globl _P1INP
                             94 	.globl _P2SEL
                             95 	.globl _P1SEL
                             96 	.globl _P0SEL
                             97 	.globl _ADCCFG
                             98 	.globl _PERCFG
                             99 	.globl _B
                            100 	.globl _T4CC1
                            101 	.globl _T4CCTL1
                            102 	.globl _T4CC0
                            103 	.globl _T4CCTL0
                            104 	.globl _T4CTL
                            105 	.globl _T4CNT
                            106 	.globl _RFIF
                            107 	.globl _IRCON2
                            108 	.globl _T1CCTL2
                            109 	.globl _T1CCTL1
                            110 	.globl _T1CCTL0
                            111 	.globl _T1CTL
                            112 	.globl _T1CNTH
                            113 	.globl _T1CNTL
                            114 	.globl _RFST
                            115 	.globl _ACC
                            116 	.globl _T1CC2H
                            117 	.globl _T1CC2L
                            118 	.globl _T1CC1H
                            119 	.globl _T1CC1L
                            120 	.globl _T1CC0H
                            121 	.globl _T1CC0L
                            122 	.globl _RFD
                            123 	.globl _TIMIF
                            124 	.globl _DMAREQ
                            125 	.globl _DMAARM
                            126 	.globl _DMA0CFGH
                            127 	.globl _DMA0CFGL
                            128 	.globl _DMA1CFGH
                            129 	.globl _DMA1CFGL
                            130 	.globl _DMAIRQ
                            131 	.globl _PSW
                            132 	.globl _T3CC1
                            133 	.globl _T3CCTL1
                            134 	.globl _T3CC0
                            135 	.globl _T3CCTL0
                            136 	.globl _T3CTL
                            137 	.globl _T3CNT
                            138 	.globl _WDCTL
                            139 	.globl _T2CON
                            140 	.globl _MEMCTR
                            141 	.globl _CLKCON
                            142 	.globl _U0GCR
                            143 	.globl _U0UCR
                            144 	.globl _T2CNF
                            145 	.globl _U0BAUD
                            146 	.globl _U0BUF
                            147 	.globl _IRCON
                            148 	.globl _SLEEP
                            149 	.globl _RNDH
                            150 	.globl _RNDL
                            151 	.globl _ADCH
                            152 	.globl _ADCL
                            153 	.globl _IP1
                            154 	.globl _IEN1
                            155 	.globl _RCCTL
                            156 	.globl _ADCCON3
                            157 	.globl _ADCCON2
                            158 	.globl _ADCCON1
                            159 	.globl _ENCCS
                            160 	.globl _ENCDO
                            161 	.globl _ENCDI
                            162 	.globl _FWDATA
                            163 	.globl _FCTL
                            164 	.globl _FADDRH
                            165 	.globl _FADDRL
                            166 	.globl _FWT
                            167 	.globl _IP0
                            168 	.globl _IEN0
                            169 	.globl _IE
                            170 	.globl _T2THD
                            171 	.globl _T2TLD
                            172 	.globl _T2CAPHPH
                            173 	.globl _T2CAPLPL
                            174 	.globl _T2OF2
                            175 	.globl _T2OF1
                            176 	.globl _T2OF0
                            177 	.globl _P2
                            178 	.globl _PSBANK
                            179 	.globl _FMAP
                            180 	.globl _T2PEROF2
                            181 	.globl _T2PEROF1
                            182 	.globl _T2PEROF0
                            183 	.globl _S1CON
                            184 	.globl _IEN2
                            185 	.globl _HSRC
                            186 	.globl _S0CON
                            187 	.globl _ST2
                            188 	.globl _ST1
                            189 	.globl _ST0
                            190 	.globl _T2CMP
                            191 	.globl __XPAGE
                            192 	.globl _DPS
                            193 	.globl _RFIM
                            194 	.globl _P1
                            195 	.globl _P0INP
                            196 	.globl _P1IEN
                            197 	.globl _PICTL
                            198 	.globl _P2IFG
                            199 	.globl _P1IFG
                            200 	.globl _P0IFG
                            201 	.globl _TCON
                            202 	.globl _PCON
                            203 	.globl _U0CSR
                            204 	.globl _DPH1
                            205 	.globl _DPL1
                            206 	.globl _DPH0
                            207 	.globl _DPL0
                            208 	.globl _SP
                            209 	.globl _P0
                            210 	.globl _ADC_SHADOW
                            211 	.globl _U1BUF_SHADOW
                            212 	.globl _RFD_SHADOW
                            213 	.globl _U0BUF_SHADOW
                            214 	.globl _RFSTATUS
                            215 	.globl _CHIPID
                            216 	.globl _CHVER
                            217 	.globl _FSMTC1
                            218 	.globl _RXFIFOCNT
                            219 	.globl _IOCFG3
                            220 	.globl _IOCFG2
                            221 	.globl _IOCFG1
                            222 	.globl _IOCFG0
                            223 	.globl _SHORTADDRL
                            224 	.globl _SHORTADDRH
                            225 	.globl _PANIDL
                            226 	.globl _PANIDH
                            227 	.globl _IEEE_ADDR7
                            228 	.globl _IEEE_ADDR6
                            229 	.globl _IEEE_ADDR5
                            230 	.globl _IEEE_ADDR4
                            231 	.globl _IEEE_ADDR3
                            232 	.globl _IEEE_ADDR2
                            233 	.globl _IEEE_ADDR1
                            234 	.globl _IEEE_ADDR0
                            235 	.globl _DACTSTL
                            236 	.globl _DACTSTH
                            237 	.globl _ADCTSTL
                            238 	.globl _ADCTSTH
                            239 	.globl _FSMSTATE
                            240 	.globl _AGCCTRLL
                            241 	.globl _AGCCTRLH
                            242 	.globl _MANORL
                            243 	.globl _MANORH
                            244 	.globl _MANANDL
                            245 	.globl _MANANDH
                            246 	.globl _FSMTCL
                            247 	.globl _FSMTCH
                            248 	.globl _RFPWR
                            249 	.globl _CSPT
                            250 	.globl _CSPCTRL
                            251 	.globl _CSPZ
                            252 	.globl _CSPY
                            253 	.globl _CSPX
                            254 	.globl _FSCTRLL
                            255 	.globl _FSCTRLH
                            256 	.globl _RXCTRL1L
                            257 	.globl _RXCTRL1H
                            258 	.globl _RXCTRL0L
                            259 	.globl _RXCTRL0H
                            260 	.globl _TXCTRLL
                            261 	.globl _TXCTRLH
                            262 	.globl _SYNCWORDL
                            263 	.globl _SYNCWORDH
                            264 	.globl _RSSIL
                            265 	.globl _RSSIH
                            266 	.globl _MDMCTRL1L
                            267 	.globl _MDMCTRL1H
                            268 	.globl _MDMCTRL0L
                            269 	.globl _MDMCTRL0H
                            270 	.globl _stbroadcast_open
                            271 	.globl _stbroadcast_close
                            272 	.globl _stbroadcast_set_timer
                            273 	.globl _stbroadcast_send_stubborn
                            274 	.globl _stbroadcast_cancel
                            275 ;--------------------------------------------------------
                            276 ; special function registers
                            277 ;--------------------------------------------------------
                            278 	.area RSEG    (ABS,DATA)
   0000                     279 	.org 0x0000
                    0080    280 _P0	=	0x0080
                    0081    281 _SP	=	0x0081
                    0082    282 _DPL0	=	0x0082
                    0083    283 _DPH0	=	0x0083
                    0084    284 _DPL1	=	0x0084
                    0085    285 _DPH1	=	0x0085
                    0086    286 _U0CSR	=	0x0086
                    0087    287 _PCON	=	0x0087
                    0088    288 _TCON	=	0x0088
                    0089    289 _P0IFG	=	0x0089
                    008A    290 _P1IFG	=	0x008a
                    008B    291 _P2IFG	=	0x008b
                    008C    292 _PICTL	=	0x008c
                    008D    293 _P1IEN	=	0x008d
                    008F    294 _P0INP	=	0x008f
                    0090    295 _P1	=	0x0090
                    0091    296 _RFIM	=	0x0091
                    0092    297 _DPS	=	0x0092
                    0093    298 __XPAGE	=	0x0093
                    0094    299 _T2CMP	=	0x0094
                    0095    300 _ST0	=	0x0095
                    0096    301 _ST1	=	0x0096
                    0097    302 _ST2	=	0x0097
                    0098    303 _S0CON	=	0x0098
                    0099    304 _HSRC	=	0x0099
                    009A    305 _IEN2	=	0x009a
                    009B    306 _S1CON	=	0x009b
                    009C    307 _T2PEROF0	=	0x009c
                    009D    308 _T2PEROF1	=	0x009d
                    009E    309 _T2PEROF2	=	0x009e
                    009F    310 _FMAP	=	0x009f
                    009F    311 _PSBANK	=	0x009f
                    00A0    312 _P2	=	0x00a0
                    00A1    313 _T2OF0	=	0x00a1
                    00A2    314 _T2OF1	=	0x00a2
                    00A3    315 _T2OF2	=	0x00a3
                    00A4    316 _T2CAPLPL	=	0x00a4
                    00A5    317 _T2CAPHPH	=	0x00a5
                    00A6    318 _T2TLD	=	0x00a6
                    00A7    319 _T2THD	=	0x00a7
                    00A8    320 _IE	=	0x00a8
                    00A8    321 _IEN0	=	0x00a8
                    00A9    322 _IP0	=	0x00a9
                    00AB    323 _FWT	=	0x00ab
                    00AC    324 _FADDRL	=	0x00ac
                    00AD    325 _FADDRH	=	0x00ad
                    00AE    326 _FCTL	=	0x00ae
                    00AF    327 _FWDATA	=	0x00af
                    00B1    328 _ENCDI	=	0x00b1
                    00B2    329 _ENCDO	=	0x00b2
                    00B3    330 _ENCCS	=	0x00b3
                    00B4    331 _ADCCON1	=	0x00b4
                    00B5    332 _ADCCON2	=	0x00b5
                    00B6    333 _ADCCON3	=	0x00b6
                    00B7    334 _RCCTL	=	0x00b7
                    00B8    335 _IEN1	=	0x00b8
                    00B9    336 _IP1	=	0x00b9
                    00BA    337 _ADCL	=	0x00ba
                    00BB    338 _ADCH	=	0x00bb
                    00BC    339 _RNDL	=	0x00bc
                    00BD    340 _RNDH	=	0x00bd
                    00BE    341 _SLEEP	=	0x00be
                    00C0    342 _IRCON	=	0x00c0
                    00C1    343 _U0BUF	=	0x00c1
                    00C2    344 _U0BAUD	=	0x00c2
                    00C3    345 _T2CNF	=	0x00c3
                    00C4    346 _U0UCR	=	0x00c4
                    00C5    347 _U0GCR	=	0x00c5
                    00C6    348 _CLKCON	=	0x00c6
                    00C7    349 _MEMCTR	=	0x00c7
                    00C8    350 _T2CON	=	0x00c8
                    00C9    351 _WDCTL	=	0x00c9
                    00CA    352 _T3CNT	=	0x00ca
                    00CB    353 _T3CTL	=	0x00cb
                    00CC    354 _T3CCTL0	=	0x00cc
                    00CD    355 _T3CC0	=	0x00cd
                    00CE    356 _T3CCTL1	=	0x00ce
                    00CF    357 _T3CC1	=	0x00cf
                    00D0    358 _PSW	=	0x00d0
                    00D1    359 _DMAIRQ	=	0x00d1
                    00D2    360 _DMA1CFGL	=	0x00d2
                    00D3    361 _DMA1CFGH	=	0x00d3
                    00D4    362 _DMA0CFGL	=	0x00d4
                    00D5    363 _DMA0CFGH	=	0x00d5
                    00D6    364 _DMAARM	=	0x00d6
                    00D7    365 _DMAREQ	=	0x00d7
                    00D8    366 _TIMIF	=	0x00d8
                    00D9    367 _RFD	=	0x00d9
                    00DA    368 _T1CC0L	=	0x00da
                    00DB    369 _T1CC0H	=	0x00db
                    00DC    370 _T1CC1L	=	0x00dc
                    00DD    371 _T1CC1H	=	0x00dd
                    00DE    372 _T1CC2L	=	0x00de
                    00DF    373 _T1CC2H	=	0x00df
                    00E0    374 _ACC	=	0x00e0
                    00E1    375 _RFST	=	0x00e1
                    00E2    376 _T1CNTL	=	0x00e2
                    00E3    377 _T1CNTH	=	0x00e3
                    00E4    378 _T1CTL	=	0x00e4
                    00E5    379 _T1CCTL0	=	0x00e5
                    00E6    380 _T1CCTL1	=	0x00e6
                    00E7    381 _T1CCTL2	=	0x00e7
                    00E8    382 _IRCON2	=	0x00e8
                    00E9    383 _RFIF	=	0x00e9
                    00EA    384 _T4CNT	=	0x00ea
                    00EB    385 _T4CTL	=	0x00eb
                    00EC    386 _T4CCTL0	=	0x00ec
                    00ED    387 _T4CC0	=	0x00ed
                    00EE    388 _T4CCTL1	=	0x00ee
                    00EF    389 _T4CC1	=	0x00ef
                    00F0    390 _B	=	0x00f0
                    00F1    391 _PERCFG	=	0x00f1
                    00F2    392 _ADCCFG	=	0x00f2
                    00F3    393 _P0SEL	=	0x00f3
                    00F4    394 _P1SEL	=	0x00f4
                    00F5    395 _P2SEL	=	0x00f5
                    00F6    396 _P1INP	=	0x00f6
                    00F7    397 _P2INP	=	0x00f7
                    00F8    398 _U1CSR	=	0x00f8
                    00F9    399 _U1BUF	=	0x00f9
                    00FA    400 _U1BAUD	=	0x00fa
                    00FB    401 _U1UCR	=	0x00fb
                    00FC    402 _U1GCR	=	0x00fc
                    00FD    403 _P0DIR	=	0x00fd
                    00FE    404 _P1DIR	=	0x00fe
                    00FF    405 _P2DIR	=	0x00ff
                            406 ;--------------------------------------------------------
                            407 ; special function bits
                            408 ;--------------------------------------------------------
                            409 	.area RSEG    (ABS,DATA)
   0000                     410 	.org 0x0000
                    0087    411 _P0_7	=	0x0087
                    0086    412 _P0_6	=	0x0086
                    0085    413 _P0_5	=	0x0085
                    0084    414 _P0_4	=	0x0084
                    0083    415 _P0_3	=	0x0083
                    0082    416 _P0_2	=	0x0082
                    0081    417 _P0_1	=	0x0081
                    0080    418 _P0_0	=	0x0080
                    008F    419 _TCON_URX1IF	=	0x008f
                    008D    420 _TCON_ADCIF	=	0x008d
                    008B    421 _TCON_URX0IF	=	0x008b
                    008A    422 _TCON_IT1	=	0x008a
                    0089    423 _TCON_RFERRIF	=	0x0089
                    0088    424 _TCON_IT0	=	0x0088
                    0090    425 _P1_0	=	0x0090
                    0091    426 _P1_1	=	0x0091
                    0092    427 _P1_2	=	0x0092
                    0093    428 _P1_3	=	0x0093
                    0094    429 _P1_4	=	0x0094
                    0095    430 _P1_5	=	0x0095
                    0096    431 _P1_6	=	0x0096
                    0097    432 _P1_7	=	0x0097
                    0099    433 _S0CON_ENCIF_1	=	0x0099
                    0098    434 _S0CON_ENCIF_0	=	0x0098
                    00A0    435 _P2_0	=	0x00a0
                    00A1    436 _P2_1	=	0x00a1
                    00A2    437 _P2_2	=	0x00a2
                    00A3    438 _P2_3	=	0x00a3
                    00A4    439 _P2_4	=	0x00a4
                    00AF    440 _EA	=	0x00af
                    00AF    441 _IEN0_EA	=	0x00af
                    00AD    442 _IEN0_STIE	=	0x00ad
                    00AC    443 _IEN0_ENCIE	=	0x00ac
                    00AB    444 _IEN0_URX1IE	=	0x00ab
                    00AA    445 _IEN0_URX0IE	=	0x00aa
                    00A9    446 _IEN0_ADCIE	=	0x00a9
                    00A8    447 _IEN0_RFERRIE	=	0x00a8
                    00BD    448 _IEN1_P0IE	=	0x00bd
                    00BC    449 _IEN1_T4IE	=	0x00bc
                    00BB    450 _IEN1_T3IE	=	0x00bb
                    00BA    451 _IEN1_T2IE	=	0x00ba
                    00B9    452 _IEN1_T1IE	=	0x00b9
                    00B8    453 _IEN1_DMAIE	=	0x00b8
                    00C7    454 _IRCON_STIF	=	0x00c7
                    00C5    455 _IRCON_P0IF	=	0x00c5
                    00C4    456 _IRCON_T4IF	=	0x00c4
                    00C3    457 _IRCON_T3IF	=	0x00c3
                    00C2    458 _IRCON_T2IF	=	0x00c2
                    00C1    459 _IRCON_T1IF	=	0x00c1
                    00C0    460 _IRCON_DMAIF	=	0x00c0
                    00D0    461 _P	=	0x00d0
                    00D1    462 _F1	=	0x00d1
                    00D2    463 _OV	=	0x00d2
                    00D3    464 _RS0	=	0x00d3
                    00D4    465 _RS1	=	0x00d4
                    00D5    466 _F0	=	0x00d5
                    00D6    467 _AC	=	0x00d6
                    00D7    468 _CY	=	0x00d7
                    00EC    469 _IRCON2_WDTIF	=	0x00ec
                    00EB    470 _IRCON2_P1IF	=	0x00eb
                    00EA    471 _IRCON2_UTX1IF	=	0x00ea
                    00E9    472 _IRCON2_UTX0IF	=	0x00e9
                    00E8    473 _IRCON2_P2IF	=	0x00e8
                            474 ;--------------------------------------------------------
                            475 ; overlayable register banks
                            476 ;--------------------------------------------------------
                            477 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     478 	.ds 8
                            479 ;--------------------------------------------------------
                            480 ; internal ram data
                            481 ;--------------------------------------------------------
                            482 	.area DSEG    (DATA)
                            483 ;--------------------------------------------------------
                            484 ; overlayable items in internal ram 
                            485 ;--------------------------------------------------------
                            486 	.area OSEG    (OVR,DATA)
                            487 ;--------------------------------------------------------
                            488 ; indirectly addressable internal ram data
                            489 ;--------------------------------------------------------
                            490 	.area ISEG    (DATA)
                            491 ;--------------------------------------------------------
                            492 ; absolute internal ram data
                            493 ;--------------------------------------------------------
                            494 	.area IABS    (ABS,DATA)
                            495 	.area IABS    (ABS,DATA)
                            496 ;--------------------------------------------------------
                            497 ; bit data
                            498 ;--------------------------------------------------------
                            499 	.area BSEG    (BIT)
                            500 ;--------------------------------------------------------
                            501 ; paged external ram data
                            502 ;--------------------------------------------------------
                            503 	.area PSEG    (PAG,XDATA)
                            504 ;--------------------------------------------------------
                            505 ; external ram data
                            506 ;--------------------------------------------------------
                            507 	.area XSEG    (XDATA)
                    DF02    508 _MDMCTRL0H	=	0xdf02
                    DF03    509 _MDMCTRL0L	=	0xdf03
                    DF04    510 _MDMCTRL1H	=	0xdf04
                    DF05    511 _MDMCTRL1L	=	0xdf05
                    DF06    512 _RSSIH	=	0xdf06
                    DF07    513 _RSSIL	=	0xdf07
                    DF08    514 _SYNCWORDH	=	0xdf08
                    DF09    515 _SYNCWORDL	=	0xdf09
                    DF0A    516 _TXCTRLH	=	0xdf0a
                    DF0B    517 _TXCTRLL	=	0xdf0b
                    DF0C    518 _RXCTRL0H	=	0xdf0c
                    DF0D    519 _RXCTRL0L	=	0xdf0d
                    DF0E    520 _RXCTRL1H	=	0xdf0e
                    DF0F    521 _RXCTRL1L	=	0xdf0f
                    DF10    522 _FSCTRLH	=	0xdf10
                    DF11    523 _FSCTRLL	=	0xdf11
                    DF12    524 _CSPX	=	0xdf12
                    DF13    525 _CSPY	=	0xdf13
                    DF14    526 _CSPZ	=	0xdf14
                    DF15    527 _CSPCTRL	=	0xdf15
                    DF16    528 _CSPT	=	0xdf16
                    DF17    529 _RFPWR	=	0xdf17
                    DF20    530 _FSMTCH	=	0xdf20
                    DF21    531 _FSMTCL	=	0xdf21
                    DF22    532 _MANANDH	=	0xdf22
                    DF23    533 _MANANDL	=	0xdf23
                    DF24    534 _MANORH	=	0xdf24
                    DF25    535 _MANORL	=	0xdf25
                    DF26    536 _AGCCTRLH	=	0xdf26
                    DF27    537 _AGCCTRLL	=	0xdf27
                    DF39    538 _FSMSTATE	=	0xdf39
                    DF3A    539 _ADCTSTH	=	0xdf3a
                    DF3B    540 _ADCTSTL	=	0xdf3b
                    DF3C    541 _DACTSTH	=	0xdf3c
                    DF3D    542 _DACTSTL	=	0xdf3d
                    DF43    543 _IEEE_ADDR0	=	0xdf43
                    DF44    544 _IEEE_ADDR1	=	0xdf44
                    DF45    545 _IEEE_ADDR2	=	0xdf45
                    DF46    546 _IEEE_ADDR3	=	0xdf46
                    DF47    547 _IEEE_ADDR4	=	0xdf47
                    DF48    548 _IEEE_ADDR5	=	0xdf48
                    DF49    549 _IEEE_ADDR6	=	0xdf49
                    DF4A    550 _IEEE_ADDR7	=	0xdf4a
                    DF4B    551 _PANIDH	=	0xdf4b
                    DF4C    552 _PANIDL	=	0xdf4c
                    DF4D    553 _SHORTADDRH	=	0xdf4d
                    DF4E    554 _SHORTADDRL	=	0xdf4e
                    DF4F    555 _IOCFG0	=	0xdf4f
                    DF50    556 _IOCFG1	=	0xdf50
                    DF51    557 _IOCFG2	=	0xdf51
                    DF52    558 _IOCFG3	=	0xdf52
                    DF53    559 _RXFIFOCNT	=	0xdf53
                    DF54    560 _FSMTC1	=	0xdf54
                    DF60    561 _CHVER	=	0xdf60
                    DF61    562 _CHIPID	=	0xdf61
                    DF62    563 _RFSTATUS	=	0xdf62
                    DFC1    564 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    565 _RFD_SHADOW	=	0xdfd9
                    DFF9    566 _U1BUF_SHADOW	=	0xdff9
                    DFBA    567 _ADC_SHADOW	=	0xdfba
                            568 ;--------------------------------------------------------
                            569 ; absolute external ram data
                            570 ;--------------------------------------------------------
                            571 	.area XABS    (ABS,XDATA)
                            572 ;--------------------------------------------------------
                            573 ; external initialized ram data
                            574 ;--------------------------------------------------------
                            575 	.area XISEG   (XDATA)
                            576 	.area HOME    (CODE)
                            577 	.area GSINIT0 (CODE)
                            578 	.area GSINIT1 (CODE)
                            579 	.area GSINIT2 (CODE)
                            580 	.area GSINIT3 (CODE)
                            581 	.area GSINIT4 (CODE)
                            582 	.area GSINIT5 (CODE)
                            583 	.area GSINIT  (CODE)
                            584 	.area GSFINAL (CODE)
                            585 	.area CSEG    (CODE)
                            586 ;--------------------------------------------------------
                            587 ; global & static initialisations
                            588 ;--------------------------------------------------------
                            589 	.area HOME    (CODE)
                            590 	.area GSINIT  (CODE)
                            591 	.area GSFINAL (CODE)
                            592 	.area GSINIT  (CODE)
                            593 ;--------------------------------------------------------
                            594 ; Home
                            595 ;--------------------------------------------------------
                            596 	.area HOME    (CODE)
                            597 	.area HOME    (CODE)
                            598 ;--------------------------------------------------------
                            599 ; code
                            600 ;--------------------------------------------------------
                            601 	.area CSEG    (CODE)
                            602 ;------------------------------------------------------------
                            603 ;Allocation info for local variables in function 'recv_from_broadcast'
                            604 ;------------------------------------------------------------
                            605 ;sender                    Allocated to stack - _bp -5
                            606 ;broadcast                 Allocated to registers r5 r6 r7 
                            607 ;c                         Allocated to registers r5 r6 r7 
                            608 ;------------------------------------------------------------
                            609 ;	../../core/net/rime/stbroadcast.c:53: recv_from_broadcast(struct broadcast_conn *broadcast, const rimeaddr_t *sender)
                            610 ;	-----------------------------------------
                            611 ;	 function recv_from_broadcast
                            612 ;	-----------------------------------------
   0000                     613 _recv_from_broadcast:
                    0007    614 	ar7 = 0x07
                    0006    615 	ar6 = 0x06
                    0005    616 	ar5 = 0x05
                    0004    617 	ar4 = 0x04
                    0003    618 	ar3 = 0x03
                    0002    619 	ar2 = 0x02
                    0001    620 	ar1 = 0x01
                    0000    621 	ar0 = 0x00
   0000 C0*00               622 	push	_bp
   0002 85 81*00            623 	mov	_bp,sp
   0005 AD 82               624 	mov	r5,dpl
   0007 AE 83               625 	mov	r6,dph
   0009 AF F0               626 	mov	r7,b
                            627 ;	../../core/net/rime/stbroadcast.c:55: register struct stbroadcast_conn *c = (struct stbroadcast_conn *)broadcast;
                            628 ;	../../core/net/rime/stbroadcast.c:57: if(c->u->recv != NULL) {
   000B 74 27               629 	mov	a,#0x27
   000D 2D                  630 	add	a,r5
   000E FA                  631 	mov	r2,a
   000F E4                  632 	clr	a
   0010 3E                  633 	addc	a,r6
   0011 FB                  634 	mov	r3,a
   0012 8F 04               635 	mov	ar4,r7
   0014 8A 82               636 	mov	dpl,r2
   0016 8B 83               637 	mov	dph,r3
   0018 8C F0               638 	mov	b,r4
   001A 12s00r00            639 	lcall	__gptrget
   001D FA                  640 	mov	r2,a
   001E A3                  641 	inc	dptr
   001F 12s00r00            642 	lcall	__gptrget
   0022 FB                  643 	mov	r3,a
   0023 A3                  644 	inc	dptr
   0024 12s00r00            645 	lcall	__gptrget
   0027 FC                  646 	mov	r4,a
   0028 8A 82               647 	mov	dpl,r2
   002A 8B 83               648 	mov	dph,r3
   002C 8C F0               649 	mov	b,r4
   002E 12s00r00            650 	lcall	__gptrget
   0031 FB                  651 	mov	r3,a
   0032 A3                  652 	inc	dptr
   0033 12s00r00            653 	lcall	__gptrget
   0036 FC                  654 	mov	r4,a
   0037 4B                  655 	orl	a,r3
   0038 60 1B               656 	jz	00103$
                            657 ;	../../core/net/rime/stbroadcast.c:58: c->u->recv(c);
   003A C0 04               658 	push	ar4
   003C C0 03               659 	push	ar3
   003E 74r51               660 	mov	a,#00108$
   0040 C0 E0               661 	push	acc
   0042 74s00               662 	mov	a,#(00108$ >> 8)
   0044 C0 E0               663 	push	acc
   0046 C0 03               664 	push	ar3
   0048 C0 04               665 	push	ar4
   004A 8D 82               666 	mov	dpl,r5
   004C 8E 83               667 	mov	dph,r6
   004E 8F F0               668 	mov	b,r7
   0050 22                  669 	ret
   0051                     670 00108$:
   0051 D0 03               671 	pop	ar3
   0053 D0 04               672 	pop	ar4
   0055                     673 00103$:
   0055 D0*00               674 	pop	_bp
   0057 22                  675 	ret
                            676 ;------------------------------------------------------------
                            677 ;Allocation info for local variables in function 'stbroadcast_open'
                            678 ;------------------------------------------------------------
                            679 ;channel                   Allocated to stack - _bp -4
                            680 ;u                         Allocated to stack - _bp -7
                            681 ;c                         Allocated to registers r5 r6 r7 
                            682 ;------------------------------------------------------------
                            683 ;	../../core/net/rime/stbroadcast.c:65: stbroadcast_open(struct stbroadcast_conn *c, uint16_t channel,
                            684 ;	-----------------------------------------
                            685 ;	 function stbroadcast_open
                            686 ;	-----------------------------------------
   0058                     687 _stbroadcast_open:
   0058 C0*00               688 	push	_bp
   005A 85 81*00            689 	mov	_bp,sp
   005D AD 82               690 	mov	r5,dpl
   005F AE 83               691 	mov	r6,dph
   0061 AF F0               692 	mov	r7,b
                            693 ;	../../core/net/rime/stbroadcast.c:68: broadcast_open(&c->c, channel, &stbroadcast);
   0063 C0 07               694 	push	ar7
   0065 C0 06               695 	push	ar6
   0067 C0 05               696 	push	ar5
   0069 74r00               697 	mov	a,#_stbroadcast
   006B C0 E0               698 	push	acc
   006D 74s00               699 	mov	a,#(_stbroadcast >> 8)
   006F C0 E0               700 	push	acc
   0071 74 80               701 	mov	a,#0x80
   0073 C0 E0               702 	push	acc
   0075 E5*00               703 	mov	a,_bp
   0077 24 FC               704 	add	a,#0xfc
   0079 F8                  705 	mov	r0,a
   007A E6                  706 	mov	a,@r0
   007B C0 E0               707 	push	acc
   007D 08                  708 	inc	r0
   007E E6                  709 	mov	a,@r0
   007F C0 E0               710 	push	acc
   0081 8D 82               711 	mov	dpl,r5
   0083 8E 83               712 	mov	dph,r6
   0085 8F F0               713 	mov	b,r7
   0087 12s00r00            714 	lcall	_broadcast_open
   008A E5 81               715 	mov	a,sp
   008C 24 FB               716 	add	a,#0xfb
   008E F5 81               717 	mov	sp,a
   0090 D0 05               718 	pop	ar5
   0092 D0 06               719 	pop	ar6
   0094 D0 07               720 	pop	ar7
                            721 ;	../../core/net/rime/stbroadcast.c:69: c->u = u;
   0096 74 27               722 	mov	a,#0x27
   0098 2D                  723 	add	a,r5
   0099 FD                  724 	mov	r5,a
   009A E4                  725 	clr	a
   009B 3E                  726 	addc	a,r6
   009C FE                  727 	mov	r6,a
   009D 8D 82               728 	mov	dpl,r5
   009F 8E 83               729 	mov	dph,r6
   00A1 8F F0               730 	mov	b,r7
   00A3 E5*00               731 	mov	a,_bp
   00A5 24 F9               732 	add	a,#0xf9
   00A7 F8                  733 	mov	r0,a
   00A8 E6                  734 	mov	a,@r0
   00A9 12s00r00            735 	lcall	__gptrput
   00AC A3                  736 	inc	dptr
   00AD 08                  737 	inc	r0
   00AE E6                  738 	mov	a,@r0
   00AF 12s00r00            739 	lcall	__gptrput
   00B2 A3                  740 	inc	dptr
   00B3 08                  741 	inc	r0
   00B4 E6                  742 	mov	a,@r0
   00B5 12s00r00            743 	lcall	__gptrput
   00B8 D0*00               744 	pop	_bp
   00BA 22                  745 	ret
                            746 ;------------------------------------------------------------
                            747 ;Allocation info for local variables in function 'stbroadcast_close'
                            748 ;------------------------------------------------------------
                            749 ;c                         Allocated to registers r5 r6 r7 
                            750 ;------------------------------------------------------------
                            751 ;	../../core/net/rime/stbroadcast.c:73: stbroadcast_close(struct stbroadcast_conn *c)
                            752 ;	-----------------------------------------
                            753 ;	 function stbroadcast_close
                            754 ;	-----------------------------------------
   00BB                     755 _stbroadcast_close:
                            756 ;	../../core/net/rime/stbroadcast.c:75: broadcast_close(&c->c);
   00BB AD 82               757 	mov	r5,dpl
   00BD AE 83               758 	mov	r6,dph
   00BF AF F0               759 	mov	r7,b
   00C1 C0 07               760 	push	ar7
   00C3 C0 06               761 	push	ar6
   00C5 C0 05               762 	push	ar5
   00C7 12s00r00            763 	lcall	_broadcast_close
   00CA D0 05               764 	pop	ar5
   00CC D0 06               765 	pop	ar6
   00CE D0 07               766 	pop	ar7
                            767 ;	../../core/net/rime/stbroadcast.c:76: ctimer_stop(&c->t);
   00D0 74 0F               768 	mov	a,#0x0F
   00D2 2D                  769 	add	a,r5
   00D3 FD                  770 	mov	r5,a
   00D4 E4                  771 	clr	a
   00D5 3E                  772 	addc	a,r6
   00D6 FE                  773 	mov	r6,a
   00D7 8D 82               774 	mov	dpl,r5
   00D9 8E 83               775 	mov	dph,r6
   00DB 8F F0               776 	mov	b,r7
   00DD 02s00r00            777 	ljmp	_ctimer_stop
                            778 ;------------------------------------------------------------
                            779 ;Allocation info for local variables in function 'send'
                            780 ;------------------------------------------------------------
                            781 ;ptr                       Allocated to registers r5 r6 r7 
                            782 ;c                         Allocated to registers r5 r6 r7 
                            783 ;------------------------------------------------------------
                            784 ;	../../core/net/rime/stbroadcast.c:80: send(void *ptr)
                            785 ;	-----------------------------------------
                            786 ;	 function send
                            787 ;	-----------------------------------------
   00E0                     788 _send:
   00E0 AD 82               789 	mov	r5,dpl
   00E2 AE 83               790 	mov	r6,dph
   00E4 AF F0               791 	mov	r7,b
                            792 ;	../../core/net/rime/stbroadcast.c:82: struct stbroadcast_conn *c = ptr;
                            793 ;	../../core/net/rime/stbroadcast.c:85: queuebuf_to_packetbuf(c->buf);
   00E6 74 24               794 	mov	a,#0x24
   00E8 2D                  795 	add	a,r5
   00E9 FA                  796 	mov	r2,a
   00EA E4                  797 	clr	a
   00EB 3E                  798 	addc	a,r6
   00EC FB                  799 	mov	r3,a
   00ED 8F 04               800 	mov	ar4,r7
   00EF 8A 82               801 	mov	dpl,r2
   00F1 8B 83               802 	mov	dph,r3
   00F3 8C F0               803 	mov	b,r4
   00F5 12s00r00            804 	lcall	__gptrget
   00F8 FA                  805 	mov	r2,a
   00F9 A3                  806 	inc	dptr
   00FA 12s00r00            807 	lcall	__gptrget
   00FD FB                  808 	mov	r3,a
   00FE A3                  809 	inc	dptr
   00FF 12s00r00            810 	lcall	__gptrget
   0102 FC                  811 	mov	r4,a
   0103 8A 82               812 	mov	dpl,r2
   0105 8B 83               813 	mov	dph,r3
   0107 8C F0               814 	mov	b,r4
   0109 C0 07               815 	push	ar7
   010B C0 06               816 	push	ar6
   010D C0 05               817 	push	ar5
   010F 12s00r00            818 	lcall	_queuebuf_to_packetbuf
   0112 D0 05               819 	pop	ar5
   0114 D0 06               820 	pop	ar6
   0116 D0 07               821 	pop	ar7
                            822 ;	../../core/net/rime/stbroadcast.c:86: broadcast_send(&c->c);
   0118 8D 82               823 	mov	dpl,r5
   011A 8E 83               824 	mov	dph,r6
   011C 8F F0               825 	mov	b,r7
   011E C0 07               826 	push	ar7
   0120 C0 06               827 	push	ar6
   0122 C0 05               828 	push	ar5
   0124 12s00r00            829 	lcall	_broadcast_send
   0127 D0 05               830 	pop	ar5
   0129 D0 06               831 	pop	ar6
   012B D0 07               832 	pop	ar7
                            833 ;	../../core/net/rime/stbroadcast.c:87: ctimer_reset(&c->t);
   012D 74 0F               834 	mov	a,#0x0F
   012F 2D                  835 	add	a,r5
   0130 FA                  836 	mov	r2,a
   0131 E4                  837 	clr	a
   0132 3E                  838 	addc	a,r6
   0133 FB                  839 	mov	r3,a
   0134 8F 04               840 	mov	ar4,r7
   0136 8A 82               841 	mov	dpl,r2
   0138 8B 83               842 	mov	dph,r3
   013A 8C F0               843 	mov	b,r4
   013C C0 07               844 	push	ar7
   013E C0 06               845 	push	ar6
   0140 C0 05               846 	push	ar5
   0142 12s00r00            847 	lcall	_ctimer_reset
   0145 D0 05               848 	pop	ar5
   0147 D0 06               849 	pop	ar6
   0149 D0 07               850 	pop	ar7
                            851 ;	../../core/net/rime/stbroadcast.c:88: if(c->u->sent != NULL) {
   014B 74 27               852 	mov	a,#0x27
   014D 2D                  853 	add	a,r5
   014E FA                  854 	mov	r2,a
   014F E4                  855 	clr	a
   0150 3E                  856 	addc	a,r6
   0151 FB                  857 	mov	r3,a
   0152 8F 04               858 	mov	ar4,r7
   0154 8A 82               859 	mov	dpl,r2
   0156 8B 83               860 	mov	dph,r3
   0158 8C F0               861 	mov	b,r4
   015A 12s00r00            862 	lcall	__gptrget
   015D FA                  863 	mov	r2,a
   015E A3                  864 	inc	dptr
   015F 12s00r00            865 	lcall	__gptrget
   0162 FB                  866 	mov	r3,a
   0163 A3                  867 	inc	dptr
   0164 12s00r00            868 	lcall	__gptrget
   0167 FC                  869 	mov	r4,a
   0168 74 02               870 	mov	a,#0x02
   016A 2A                  871 	add	a,r2
   016B FA                  872 	mov	r2,a
   016C E4                  873 	clr	a
   016D 3B                  874 	addc	a,r3
   016E FB                  875 	mov	r3,a
   016F 8A 82               876 	mov	dpl,r2
   0171 8B 83               877 	mov	dph,r3
   0173 8C F0               878 	mov	b,r4
   0175 12s00r00            879 	lcall	__gptrget
   0178 FB                  880 	mov	r3,a
   0179 A3                  881 	inc	dptr
   017A 12s00r00            882 	lcall	__gptrget
   017D FC                  883 	mov	r4,a
   017E 4B                  884 	orl	a,r3
   017F 60 1B               885 	jz	00103$
                            886 ;	../../core/net/rime/stbroadcast.c:89: c->u->sent(c);
   0181 C0 04               887 	push	ar4
   0183 C0 03               888 	push	ar3
   0185 74r98               889 	mov	a,#00108$
   0187 C0 E0               890 	push	acc
   0189 74s01               891 	mov	a,#(00108$ >> 8)
   018B C0 E0               892 	push	acc
   018D C0 03               893 	push	ar3
   018F C0 04               894 	push	ar4
   0191 8D 82               895 	mov	dpl,r5
   0193 8E 83               896 	mov	dph,r6
   0195 8F F0               897 	mov	b,r7
   0197 22                  898 	ret
   0198                     899 00108$:
   0198 D0 03               900 	pop	ar3
   019A D0 04               901 	pop	ar4
   019C                     902 00103$:
   019C 22                  903 	ret
                            904 ;------------------------------------------------------------
                            905 ;Allocation info for local variables in function 'stbroadcast_set_timer'
                            906 ;------------------------------------------------------------
                            907 ;t                         Allocated to stack - _bp -4
                            908 ;c                         Allocated to registers r5 r6 r7 
                            909 ;------------------------------------------------------------
                            910 ;	../../core/net/rime/stbroadcast.c:94: stbroadcast_set_timer(struct stbroadcast_conn *c, clock_time_t t)
                            911 ;	-----------------------------------------
                            912 ;	 function stbroadcast_set_timer
                            913 ;	-----------------------------------------
   019D                     914 _stbroadcast_set_timer:
   019D C0*00               915 	push	_bp
   019F 85 81*00            916 	mov	_bp,sp
   01A2 AD 82               917 	mov	r5,dpl
   01A4 AE 83               918 	mov	r6,dph
   01A6 AF F0               919 	mov	r7,b
                            920 ;	../../core/net/rime/stbroadcast.c:96: ctimer_set(&c->t, t, send, c);
   01A8 8D 02               921 	mov	ar2,r5
   01AA 8E 03               922 	mov	ar3,r6
   01AC 8F 04               923 	mov	ar4,r7
   01AE 74 0F               924 	mov	a,#0x0F
   01B0 2D                  925 	add	a,r5
   01B1 FD                  926 	mov	r5,a
   01B2 E4                  927 	clr	a
   01B3 3E                  928 	addc	a,r6
   01B4 FE                  929 	mov	r6,a
   01B5 C0 02               930 	push	ar2
   01B7 C0 03               931 	push	ar3
   01B9 C0 04               932 	push	ar4
   01BB 74rE0               933 	mov	a,#_send
   01BD C0 E0               934 	push	acc
   01BF 74s00               935 	mov	a,#(_send >> 8)
   01C1 C0 E0               936 	push	acc
   01C3 E5*00               937 	mov	a,_bp
   01C5 24 FC               938 	add	a,#0xfc
   01C7 F8                  939 	mov	r0,a
   01C8 E6                  940 	mov	a,@r0
   01C9 C0 E0               941 	push	acc
   01CB 08                  942 	inc	r0
   01CC E6                  943 	mov	a,@r0
   01CD C0 E0               944 	push	acc
   01CF 8D 82               945 	mov	dpl,r5
   01D1 8E 83               946 	mov	dph,r6
   01D3 8F F0               947 	mov	b,r7
   01D5 12s00r00            948 	lcall	_ctimer_set
   01D8 E5 81               949 	mov	a,sp
   01DA 24 F9               950 	add	a,#0xf9
   01DC F5 81               951 	mov	sp,a
   01DE D0*00               952 	pop	_bp
   01E0 22                  953 	ret
                            954 ;------------------------------------------------------------
                            955 ;Allocation info for local variables in function 'stbroadcast_send_stubborn'
                            956 ;------------------------------------------------------------
                            957 ;t                         Allocated to stack - _bp -4
                            958 ;c                         Allocated to stack - _bp +1
                            959 ;sloc0                     Allocated to stack - _bp +4
                            960 ;------------------------------------------------------------
                            961 ;	../../core/net/rime/stbroadcast.c:100: stbroadcast_send_stubborn(struct stbroadcast_conn *c, clock_time_t t)
                            962 ;	-----------------------------------------
                            963 ;	 function stbroadcast_send_stubborn
                            964 ;	-----------------------------------------
   01E1                     965 _stbroadcast_send_stubborn:
   01E1 C0*00               966 	push	_bp
   01E3 85 81*00            967 	mov	_bp,sp
   01E6 C0 82               968 	push	dpl
   01E8 C0 83               969 	push	dph
   01EA C0 F0               970 	push	b
                            971 ;	../../core/net/rime/stbroadcast.c:102: if(c->buf != NULL) {
   01EC A8*00               972 	mov	r0,_bp
   01EE 08                  973 	inc	r0
   01EF 74 24               974 	mov	a,#0x24
   01F1 26                  975 	add	a,@r0
   01F2 FA                  976 	mov	r2,a
   01F3 E4                  977 	clr	a
   01F4 08                  978 	inc	r0
   01F5 36                  979 	addc	a,@r0
   01F6 FB                  980 	mov	r3,a
   01F7 08                  981 	inc	r0
   01F8 86 04               982 	mov	ar4,@r0
   01FA 8A 82               983 	mov	dpl,r2
   01FC 8B 83               984 	mov	dph,r3
   01FE 8C F0               985 	mov	b,r4
   0200 12s00r00            986 	lcall	__gptrget
   0203 FF                  987 	mov	r7,a
   0204 A3                  988 	inc	dptr
   0205 12s00r00            989 	lcall	__gptrget
   0208 FE                  990 	mov	r6,a
   0209 A3                  991 	inc	dptr
   020A 12s00r00            992 	lcall	__gptrget
   020D FD                  993 	mov	r5,a
   020E EF                  994 	mov	a,r7
   020F 4E                  995 	orl	a,r6
   0210 60 15               996 	jz	00102$
                            997 ;	../../core/net/rime/stbroadcast.c:103: queuebuf_free(c->buf);
   0212 8F 82               998 	mov	dpl,r7
   0214 8E 83               999 	mov	dph,r6
   0216 8D F0              1000 	mov	b,r5
   0218 C0 04              1001 	push	ar4
   021A C0 03              1002 	push	ar3
   021C C0 02              1003 	push	ar2
   021E 12s00r00           1004 	lcall	_queuebuf_free
   0221 D0 02              1005 	pop	ar2
   0223 D0 03              1006 	pop	ar3
   0225 D0 04              1007 	pop	ar4
   0227                    1008 00102$:
                           1009 ;	../../core/net/rime/stbroadcast.c:105: c->buf = queuebuf_new_from_packetbuf();
   0227 C0 04              1010 	push	ar4
   0229 C0 03              1011 	push	ar3
   022B C0 02              1012 	push	ar2
   022D 12s00r00           1013 	lcall	_queuebuf_new_from_packetbuf
   0230 AD 82              1014 	mov	r5,dpl
   0232 AE 83              1015 	mov	r6,dph
   0234 AF F0              1016 	mov	r7,b
   0236 D0 02              1017 	pop	ar2
   0238 D0 03              1018 	pop	ar3
   023A D0 04              1019 	pop	ar4
   023C 8A 82              1020 	mov	dpl,r2
   023E 8B 83              1021 	mov	dph,r3
   0240 8C F0              1022 	mov	b,r4
   0242 ED                 1023 	mov	a,r5
   0243 12s00r00           1024 	lcall	__gptrput
   0246 A3                 1025 	inc	dptr
   0247 EE                 1026 	mov	a,r6
   0248 12s00r00           1027 	lcall	__gptrput
   024B A3                 1028 	inc	dptr
   024C EF                 1029 	mov	a,r7
   024D 12s00r00           1030 	lcall	__gptrput
                           1031 ;	../../core/net/rime/stbroadcast.c:106: if(c->buf == NULL) {
   0250 ED                 1032 	mov	a,r5
   0251 4E                 1033 	orl	a,r6
   0252 70 05              1034 	jnz	00104$
                           1035 ;	../../core/net/rime/stbroadcast.c:107: return 0;
   0254 90 00 00           1036 	mov	dptr,#0x0000
   0257 80 35              1037 	sjmp	00105$
   0259                    1038 00104$:
                           1039 ;	../../core/net/rime/stbroadcast.c:109: send(c);
   0259 A8*00              1040 	mov	r0,_bp
   025B 08                 1041 	inc	r0
   025C 86 05              1042 	mov	ar5,@r0
   025E 08                 1043 	inc	r0
   025F 86 06              1044 	mov	ar6,@r0
   0261 08                 1045 	inc	r0
   0262 86 07              1046 	mov	ar7,@r0
   0264 8D 82              1047 	mov	dpl,r5
   0266 8E 83              1048 	mov	dph,r6
   0268 8F F0              1049 	mov	b,r7
   026A 12s00rE0           1050 	lcall	_send
                           1051 ;	../../core/net/rime/stbroadcast.c:110: stbroadcast_set_timer(c, t);
   026D E5*00              1052 	mov	a,_bp
   026F 24 FC              1053 	add	a,#0xfc
   0271 F8                 1054 	mov	r0,a
   0272 E6                 1055 	mov	a,@r0
   0273 C0 E0              1056 	push	acc
   0275 08                 1057 	inc	r0
   0276 E6                 1058 	mov	a,@r0
   0277 C0 E0              1059 	push	acc
   0279 A8*00              1060 	mov	r0,_bp
   027B 08                 1061 	inc	r0
   027C 86 82              1062 	mov	dpl,@r0
   027E 08                 1063 	inc	r0
   027F 86 83              1064 	mov	dph,@r0
   0281 08                 1065 	inc	r0
   0282 86 F0              1066 	mov	b,@r0
   0284 12s01r9D           1067 	lcall	_stbroadcast_set_timer
   0287 15 81              1068 	dec	sp
   0289 15 81              1069 	dec	sp
                           1070 ;	../../core/net/rime/stbroadcast.c:111: return 1;
   028B 90 00 01           1071 	mov	dptr,#0x0001
   028E                    1072 00105$:
   028E 85*00 81           1073 	mov	sp,_bp
   0291 D0*00              1074 	pop	_bp
   0293 22                 1075 	ret
                           1076 ;------------------------------------------------------------
                           1077 ;Allocation info for local variables in function 'stbroadcast_cancel'
                           1078 ;------------------------------------------------------------
                           1079 ;c                         Allocated to registers r5 r6 r7 
                           1080 ;------------------------------------------------------------
                           1081 ;	../../core/net/rime/stbroadcast.c:116: stbroadcast_cancel(struct stbroadcast_conn *c)
                           1082 ;	-----------------------------------------
                           1083 ;	 function stbroadcast_cancel
                           1084 ;	-----------------------------------------
   0294                    1085 _stbroadcast_cancel:
   0294 AD 82              1086 	mov	r5,dpl
   0296 AE 83              1087 	mov	r6,dph
   0298 AF F0              1088 	mov	r7,b
                           1089 ;	../../core/net/rime/stbroadcast.c:118: ctimer_stop(&c->t);
   029A 74 0F              1090 	mov	a,#0x0F
   029C 2D                 1091 	add	a,r5
   029D FD                 1092 	mov	r5,a
   029E E4                 1093 	clr	a
   029F 3E                 1094 	addc	a,r6
   02A0 FE                 1095 	mov	r6,a
   02A1 8D 82              1096 	mov	dpl,r5
   02A3 8E 83              1097 	mov	dph,r6
   02A5 8F F0              1098 	mov	b,r7
   02A7 02s00r00           1099 	ljmp	_ctimer_stop
                           1100 	.area CSEG    (CODE)
                           1101 	.area CONST   (CODE)
   0000                    1102 _stbroadcast:
   0000r00s00              1103 	.byte _recv_from_broadcast,(_recv_from_broadcast >> 8)
   0002 00 00              1104 	.byte #0x00,#0x00
                           1105 	.area XINIT   (CODE)
                           1106 	.area CABS    (ABS,CODE)
