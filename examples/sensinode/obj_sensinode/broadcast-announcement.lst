                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:15 2013
                              5 ;--------------------------------------------------------
                              6 	.module broadcast_announcement
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _broadcast_announcement_beacon_interval
                             13 	.globl _broadcast_announcement_stop
                             14 	.globl _broadcast_announcement_init
                             15 	.globl _random_rand
                             16 	.globl _list_item_next
                             17 	.globl _broadcast_send
                             18 	.globl _broadcast_close
                             19 	.globl _broadcast_open
                             20 	.globl _packetbuf_set_datalen
                             21 	.globl _packetbuf_datalen
                             22 	.globl _packetbuf_dataptr
                             23 	.globl _packetbuf_clear
                             24 	.globl _announcement_register_observer_callback
                             25 	.globl _announcement_heard
                             26 	.globl _announcement_list
                             27 	.globl _ctimer_stop
                             28 	.globl _ctimer_set
                             29 	.globl _memcpy
                             30 	.globl _IRCON2_P2IF
                             31 	.globl _IRCON2_UTX0IF
                             32 	.globl _IRCON2_UTX1IF
                             33 	.globl _IRCON2_P1IF
                             34 	.globl _IRCON2_WDTIF
                             35 	.globl _CY
                             36 	.globl _AC
                             37 	.globl _F0
                             38 	.globl _RS1
                             39 	.globl _RS0
                             40 	.globl _OV
                             41 	.globl _F1
                             42 	.globl _P
                             43 	.globl _IRCON_DMAIF
                             44 	.globl _IRCON_T1IF
                             45 	.globl _IRCON_T2IF
                             46 	.globl _IRCON_T3IF
                             47 	.globl _IRCON_T4IF
                             48 	.globl _IRCON_P0IF
                             49 	.globl _IRCON_STIF
                             50 	.globl _IEN1_DMAIE
                             51 	.globl _IEN1_T1IE
                             52 	.globl _IEN1_T2IE
                             53 	.globl _IEN1_T3IE
                             54 	.globl _IEN1_T4IE
                             55 	.globl _IEN1_P0IE
                             56 	.globl _IEN0_RFERRIE
                             57 	.globl _IEN0_ADCIE
                             58 	.globl _IEN0_URX0IE
                             59 	.globl _IEN0_URX1IE
                             60 	.globl _IEN0_ENCIE
                             61 	.globl _IEN0_STIE
                             62 	.globl _IEN0_EA
                             63 	.globl _EA
                             64 	.globl _P2_4
                             65 	.globl _P2_3
                             66 	.globl _P2_2
                             67 	.globl _P2_1
                             68 	.globl _P2_0
                             69 	.globl _S0CON_ENCIF_0
                             70 	.globl _S0CON_ENCIF_1
                             71 	.globl _P1_7
                             72 	.globl _P1_6
                             73 	.globl _P1_5
                             74 	.globl _P1_4
                             75 	.globl _P1_3
                             76 	.globl _P1_2
                             77 	.globl _P1_1
                             78 	.globl _P1_0
                             79 	.globl _TCON_IT0
                             80 	.globl _TCON_RFERRIF
                             81 	.globl _TCON_IT1
                             82 	.globl _TCON_URX0IF
                             83 	.globl _TCON_ADCIF
                             84 	.globl _TCON_URX1IF
                             85 	.globl _P0_0
                             86 	.globl _P0_1
                             87 	.globl _P0_2
                             88 	.globl _P0_3
                             89 	.globl _P0_4
                             90 	.globl _P0_5
                             91 	.globl _P0_6
                             92 	.globl _P0_7
                             93 	.globl _P2DIR
                             94 	.globl _P1DIR
                             95 	.globl _P0DIR
                             96 	.globl _U1GCR
                             97 	.globl _U1UCR
                             98 	.globl _U1BAUD
                             99 	.globl _U1BUF
                            100 	.globl _U1CSR
                            101 	.globl _P2INP
                            102 	.globl _P1INP
                            103 	.globl _P2SEL
                            104 	.globl _P1SEL
                            105 	.globl _P0SEL
                            106 	.globl _ADCCFG
                            107 	.globl _PERCFG
                            108 	.globl _B
                            109 	.globl _T4CC1
                            110 	.globl _T4CCTL1
                            111 	.globl _T4CC0
                            112 	.globl _T4CCTL0
                            113 	.globl _T4CTL
                            114 	.globl _T4CNT
                            115 	.globl _RFIF
                            116 	.globl _IRCON2
                            117 	.globl _T1CCTL2
                            118 	.globl _T1CCTL1
                            119 	.globl _T1CCTL0
                            120 	.globl _T1CTL
                            121 	.globl _T1CNTH
                            122 	.globl _T1CNTL
                            123 	.globl _RFST
                            124 	.globl _ACC
                            125 	.globl _T1CC2H
                            126 	.globl _T1CC2L
                            127 	.globl _T1CC1H
                            128 	.globl _T1CC1L
                            129 	.globl _T1CC0H
                            130 	.globl _T1CC0L
                            131 	.globl _RFD
                            132 	.globl _TIMIF
                            133 	.globl _DMAREQ
                            134 	.globl _DMAARM
                            135 	.globl _DMA0CFGH
                            136 	.globl _DMA0CFGL
                            137 	.globl _DMA1CFGH
                            138 	.globl _DMA1CFGL
                            139 	.globl _DMAIRQ
                            140 	.globl _PSW
                            141 	.globl _T3CC1
                            142 	.globl _T3CCTL1
                            143 	.globl _T3CC0
                            144 	.globl _T3CCTL0
                            145 	.globl _T3CTL
                            146 	.globl _T3CNT
                            147 	.globl _WDCTL
                            148 	.globl _T2CON
                            149 	.globl _MEMCTR
                            150 	.globl _CLKCON
                            151 	.globl _U0GCR
                            152 	.globl _U0UCR
                            153 	.globl _T2CNF
                            154 	.globl _U0BAUD
                            155 	.globl _U0BUF
                            156 	.globl _IRCON
                            157 	.globl _SLEEP
                            158 	.globl _RNDH
                            159 	.globl _RNDL
                            160 	.globl _ADCH
                            161 	.globl _ADCL
                            162 	.globl _IP1
                            163 	.globl _IEN1
                            164 	.globl _RCCTL
                            165 	.globl _ADCCON3
                            166 	.globl _ADCCON2
                            167 	.globl _ADCCON1
                            168 	.globl _ENCCS
                            169 	.globl _ENCDO
                            170 	.globl _ENCDI
                            171 	.globl _FWDATA
                            172 	.globl _FCTL
                            173 	.globl _FADDRH
                            174 	.globl _FADDRL
                            175 	.globl _FWT
                            176 	.globl _IP0
                            177 	.globl _IEN0
                            178 	.globl _IE
                            179 	.globl _T2THD
                            180 	.globl _T2TLD
                            181 	.globl _T2CAPHPH
                            182 	.globl _T2CAPLPL
                            183 	.globl _T2OF2
                            184 	.globl _T2OF1
                            185 	.globl _T2OF0
                            186 	.globl _P2
                            187 	.globl _PSBANK
                            188 	.globl _FMAP
                            189 	.globl _T2PEROF2
                            190 	.globl _T2PEROF1
                            191 	.globl _T2PEROF0
                            192 	.globl _S1CON
                            193 	.globl _IEN2
                            194 	.globl _HSRC
                            195 	.globl _S0CON
                            196 	.globl _ST2
                            197 	.globl _ST1
                            198 	.globl _ST0
                            199 	.globl _T2CMP
                            200 	.globl __XPAGE
                            201 	.globl _DPS
                            202 	.globl _RFIM
                            203 	.globl _P1
                            204 	.globl _P0INP
                            205 	.globl _P1IEN
                            206 	.globl _PICTL
                            207 	.globl _P2IFG
                            208 	.globl _P1IFG
                            209 	.globl _P0IFG
                            210 	.globl _TCON
                            211 	.globl _PCON
                            212 	.globl _U0CSR
                            213 	.globl _DPH1
                            214 	.globl _DPL1
                            215 	.globl _DPH0
                            216 	.globl _DPL0
                            217 	.globl _SP
                            218 	.globl _P0
                            219 	.globl _ADC_SHADOW
                            220 	.globl _U1BUF_SHADOW
                            221 	.globl _RFD_SHADOW
                            222 	.globl _U0BUF_SHADOW
                            223 	.globl _RFSTATUS
                            224 	.globl _CHIPID
                            225 	.globl _CHVER
                            226 	.globl _FSMTC1
                            227 	.globl _RXFIFOCNT
                            228 	.globl _IOCFG3
                            229 	.globl _IOCFG2
                            230 	.globl _IOCFG1
                            231 	.globl _IOCFG0
                            232 	.globl _SHORTADDRL
                            233 	.globl _SHORTADDRH
                            234 	.globl _PANIDL
                            235 	.globl _PANIDH
                            236 	.globl _IEEE_ADDR7
                            237 	.globl _IEEE_ADDR6
                            238 	.globl _IEEE_ADDR5
                            239 	.globl _IEEE_ADDR4
                            240 	.globl _IEEE_ADDR3
                            241 	.globl _IEEE_ADDR2
                            242 	.globl _IEEE_ADDR1
                            243 	.globl _IEEE_ADDR0
                            244 	.globl _DACTSTL
                            245 	.globl _DACTSTH
                            246 	.globl _ADCTSTL
                            247 	.globl _ADCTSTH
                            248 	.globl _FSMSTATE
                            249 	.globl _AGCCTRLL
                            250 	.globl _AGCCTRLH
                            251 	.globl _MANORL
                            252 	.globl _MANORH
                            253 	.globl _MANANDL
                            254 	.globl _MANANDH
                            255 	.globl _FSMTCL
                            256 	.globl _FSMTCH
                            257 	.globl _RFPWR
                            258 	.globl _CSPT
                            259 	.globl _CSPCTRL
                            260 	.globl _CSPZ
                            261 	.globl _CSPY
                            262 	.globl _CSPX
                            263 	.globl _FSCTRLL
                            264 	.globl _FSCTRLH
                            265 	.globl _RXCTRL1L
                            266 	.globl _RXCTRL1H
                            267 	.globl _RXCTRL0L
                            268 	.globl _RXCTRL0H
                            269 	.globl _TXCTRLL
                            270 	.globl _TXCTRLH
                            271 	.globl _SYNCWORDL
                            272 	.globl _SYNCWORDH
                            273 	.globl _RSSIL
                            274 	.globl _RSSIH
                            275 	.globl _MDMCTRL1L
                            276 	.globl _MDMCTRL1H
                            277 	.globl _MDMCTRL0L
                            278 	.globl _MDMCTRL0H
                            279 ;--------------------------------------------------------
                            280 ; special function registers
                            281 ;--------------------------------------------------------
                            282 	.area RSEG    (ABS,DATA)
   0000                     283 	.org 0x0000
                    0080    284 _P0	=	0x0080
                    0081    285 _SP	=	0x0081
                    0082    286 _DPL0	=	0x0082
                    0083    287 _DPH0	=	0x0083
                    0084    288 _DPL1	=	0x0084
                    0085    289 _DPH1	=	0x0085
                    0086    290 _U0CSR	=	0x0086
                    0087    291 _PCON	=	0x0087
                    0088    292 _TCON	=	0x0088
                    0089    293 _P0IFG	=	0x0089
                    008A    294 _P1IFG	=	0x008a
                    008B    295 _P2IFG	=	0x008b
                    008C    296 _PICTL	=	0x008c
                    008D    297 _P1IEN	=	0x008d
                    008F    298 _P0INP	=	0x008f
                    0090    299 _P1	=	0x0090
                    0091    300 _RFIM	=	0x0091
                    0092    301 _DPS	=	0x0092
                    0093    302 __XPAGE	=	0x0093
                    0094    303 _T2CMP	=	0x0094
                    0095    304 _ST0	=	0x0095
                    0096    305 _ST1	=	0x0096
                    0097    306 _ST2	=	0x0097
                    0098    307 _S0CON	=	0x0098
                    0099    308 _HSRC	=	0x0099
                    009A    309 _IEN2	=	0x009a
                    009B    310 _S1CON	=	0x009b
                    009C    311 _T2PEROF0	=	0x009c
                    009D    312 _T2PEROF1	=	0x009d
                    009E    313 _T2PEROF2	=	0x009e
                    009F    314 _FMAP	=	0x009f
                    009F    315 _PSBANK	=	0x009f
                    00A0    316 _P2	=	0x00a0
                    00A1    317 _T2OF0	=	0x00a1
                    00A2    318 _T2OF1	=	0x00a2
                    00A3    319 _T2OF2	=	0x00a3
                    00A4    320 _T2CAPLPL	=	0x00a4
                    00A5    321 _T2CAPHPH	=	0x00a5
                    00A6    322 _T2TLD	=	0x00a6
                    00A7    323 _T2THD	=	0x00a7
                    00A8    324 _IE	=	0x00a8
                    00A8    325 _IEN0	=	0x00a8
                    00A9    326 _IP0	=	0x00a9
                    00AB    327 _FWT	=	0x00ab
                    00AC    328 _FADDRL	=	0x00ac
                    00AD    329 _FADDRH	=	0x00ad
                    00AE    330 _FCTL	=	0x00ae
                    00AF    331 _FWDATA	=	0x00af
                    00B1    332 _ENCDI	=	0x00b1
                    00B2    333 _ENCDO	=	0x00b2
                    00B3    334 _ENCCS	=	0x00b3
                    00B4    335 _ADCCON1	=	0x00b4
                    00B5    336 _ADCCON2	=	0x00b5
                    00B6    337 _ADCCON3	=	0x00b6
                    00B7    338 _RCCTL	=	0x00b7
                    00B8    339 _IEN1	=	0x00b8
                    00B9    340 _IP1	=	0x00b9
                    00BA    341 _ADCL	=	0x00ba
                    00BB    342 _ADCH	=	0x00bb
                    00BC    343 _RNDL	=	0x00bc
                    00BD    344 _RNDH	=	0x00bd
                    00BE    345 _SLEEP	=	0x00be
                    00C0    346 _IRCON	=	0x00c0
                    00C1    347 _U0BUF	=	0x00c1
                    00C2    348 _U0BAUD	=	0x00c2
                    00C3    349 _T2CNF	=	0x00c3
                    00C4    350 _U0UCR	=	0x00c4
                    00C5    351 _U0GCR	=	0x00c5
                    00C6    352 _CLKCON	=	0x00c6
                    00C7    353 _MEMCTR	=	0x00c7
                    00C8    354 _T2CON	=	0x00c8
                    00C9    355 _WDCTL	=	0x00c9
                    00CA    356 _T3CNT	=	0x00ca
                    00CB    357 _T3CTL	=	0x00cb
                    00CC    358 _T3CCTL0	=	0x00cc
                    00CD    359 _T3CC0	=	0x00cd
                    00CE    360 _T3CCTL1	=	0x00ce
                    00CF    361 _T3CC1	=	0x00cf
                    00D0    362 _PSW	=	0x00d0
                    00D1    363 _DMAIRQ	=	0x00d1
                    00D2    364 _DMA1CFGL	=	0x00d2
                    00D3    365 _DMA1CFGH	=	0x00d3
                    00D4    366 _DMA0CFGL	=	0x00d4
                    00D5    367 _DMA0CFGH	=	0x00d5
                    00D6    368 _DMAARM	=	0x00d6
                    00D7    369 _DMAREQ	=	0x00d7
                    00D8    370 _TIMIF	=	0x00d8
                    00D9    371 _RFD	=	0x00d9
                    00DA    372 _T1CC0L	=	0x00da
                    00DB    373 _T1CC0H	=	0x00db
                    00DC    374 _T1CC1L	=	0x00dc
                    00DD    375 _T1CC1H	=	0x00dd
                    00DE    376 _T1CC2L	=	0x00de
                    00DF    377 _T1CC2H	=	0x00df
                    00E0    378 _ACC	=	0x00e0
                    00E1    379 _RFST	=	0x00e1
                    00E2    380 _T1CNTL	=	0x00e2
                    00E3    381 _T1CNTH	=	0x00e3
                    00E4    382 _T1CTL	=	0x00e4
                    00E5    383 _T1CCTL0	=	0x00e5
                    00E6    384 _T1CCTL1	=	0x00e6
                    00E7    385 _T1CCTL2	=	0x00e7
                    00E8    386 _IRCON2	=	0x00e8
                    00E9    387 _RFIF	=	0x00e9
                    00EA    388 _T4CNT	=	0x00ea
                    00EB    389 _T4CTL	=	0x00eb
                    00EC    390 _T4CCTL0	=	0x00ec
                    00ED    391 _T4CC0	=	0x00ed
                    00EE    392 _T4CCTL1	=	0x00ee
                    00EF    393 _T4CC1	=	0x00ef
                    00F0    394 _B	=	0x00f0
                    00F1    395 _PERCFG	=	0x00f1
                    00F2    396 _ADCCFG	=	0x00f2
                    00F3    397 _P0SEL	=	0x00f3
                    00F4    398 _P1SEL	=	0x00f4
                    00F5    399 _P2SEL	=	0x00f5
                    00F6    400 _P1INP	=	0x00f6
                    00F7    401 _P2INP	=	0x00f7
                    00F8    402 _U1CSR	=	0x00f8
                    00F9    403 _U1BUF	=	0x00f9
                    00FA    404 _U1BAUD	=	0x00fa
                    00FB    405 _U1UCR	=	0x00fb
                    00FC    406 _U1GCR	=	0x00fc
                    00FD    407 _P0DIR	=	0x00fd
                    00FE    408 _P1DIR	=	0x00fe
                    00FF    409 _P2DIR	=	0x00ff
                            410 ;--------------------------------------------------------
                            411 ; special function bits
                            412 ;--------------------------------------------------------
                            413 	.area RSEG    (ABS,DATA)
   0000                     414 	.org 0x0000
                    0087    415 _P0_7	=	0x0087
                    0086    416 _P0_6	=	0x0086
                    0085    417 _P0_5	=	0x0085
                    0084    418 _P0_4	=	0x0084
                    0083    419 _P0_3	=	0x0083
                    0082    420 _P0_2	=	0x0082
                    0081    421 _P0_1	=	0x0081
                    0080    422 _P0_0	=	0x0080
                    008F    423 _TCON_URX1IF	=	0x008f
                    008D    424 _TCON_ADCIF	=	0x008d
                    008B    425 _TCON_URX0IF	=	0x008b
                    008A    426 _TCON_IT1	=	0x008a
                    0089    427 _TCON_RFERRIF	=	0x0089
                    0088    428 _TCON_IT0	=	0x0088
                    0090    429 _P1_0	=	0x0090
                    0091    430 _P1_1	=	0x0091
                    0092    431 _P1_2	=	0x0092
                    0093    432 _P1_3	=	0x0093
                    0094    433 _P1_4	=	0x0094
                    0095    434 _P1_5	=	0x0095
                    0096    435 _P1_6	=	0x0096
                    0097    436 _P1_7	=	0x0097
                    0099    437 _S0CON_ENCIF_1	=	0x0099
                    0098    438 _S0CON_ENCIF_0	=	0x0098
                    00A0    439 _P2_0	=	0x00a0
                    00A1    440 _P2_1	=	0x00a1
                    00A2    441 _P2_2	=	0x00a2
                    00A3    442 _P2_3	=	0x00a3
                    00A4    443 _P2_4	=	0x00a4
                    00AF    444 _EA	=	0x00af
                    00AF    445 _IEN0_EA	=	0x00af
                    00AD    446 _IEN0_STIE	=	0x00ad
                    00AC    447 _IEN0_ENCIE	=	0x00ac
                    00AB    448 _IEN0_URX1IE	=	0x00ab
                    00AA    449 _IEN0_URX0IE	=	0x00aa
                    00A9    450 _IEN0_ADCIE	=	0x00a9
                    00A8    451 _IEN0_RFERRIE	=	0x00a8
                    00BD    452 _IEN1_P0IE	=	0x00bd
                    00BC    453 _IEN1_T4IE	=	0x00bc
                    00BB    454 _IEN1_T3IE	=	0x00bb
                    00BA    455 _IEN1_T2IE	=	0x00ba
                    00B9    456 _IEN1_T1IE	=	0x00b9
                    00B8    457 _IEN1_DMAIE	=	0x00b8
                    00C7    458 _IRCON_STIF	=	0x00c7
                    00C5    459 _IRCON_P0IF	=	0x00c5
                    00C4    460 _IRCON_T4IF	=	0x00c4
                    00C3    461 _IRCON_T3IF	=	0x00c3
                    00C2    462 _IRCON_T2IF	=	0x00c2
                    00C1    463 _IRCON_T1IF	=	0x00c1
                    00C0    464 _IRCON_DMAIF	=	0x00c0
                    00D0    465 _P	=	0x00d0
                    00D1    466 _F1	=	0x00d1
                    00D2    467 _OV	=	0x00d2
                    00D3    468 _RS0	=	0x00d3
                    00D4    469 _RS1	=	0x00d4
                    00D5    470 _F0	=	0x00d5
                    00D6    471 _AC	=	0x00d6
                    00D7    472 _CY	=	0x00d7
                    00EC    473 _IRCON2_WDTIF	=	0x00ec
                    00EB    474 _IRCON2_P1IF	=	0x00eb
                    00EA    475 _IRCON2_UTX1IF	=	0x00ea
                    00E9    476 _IRCON2_UTX0IF	=	0x00e9
                    00E8    477 _IRCON2_P2IF	=	0x00e8
                            478 ;--------------------------------------------------------
                            479 ; overlayable register banks
                            480 ;--------------------------------------------------------
                            481 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     482 	.ds 8
                            483 ;--------------------------------------------------------
                            484 ; internal ram data
                            485 ;--------------------------------------------------------
                            486 	.area DSEG    (DATA)
                            487 ;--------------------------------------------------------
                            488 ; overlayable items in internal ram 
                            489 ;--------------------------------------------------------
                            490 	.area OSEG    (OVR,DATA)
                            491 ;--------------------------------------------------------
                            492 ; indirectly addressable internal ram data
                            493 ;--------------------------------------------------------
                            494 	.area ISEG    (DATA)
                            495 ;--------------------------------------------------------
                            496 ; absolute internal ram data
                            497 ;--------------------------------------------------------
                            498 	.area IABS    (ABS,DATA)
                            499 	.area IABS    (ABS,DATA)
                            500 ;--------------------------------------------------------
                            501 ; bit data
                            502 ;--------------------------------------------------------
                            503 	.area BSEG    (BIT)
                            504 ;--------------------------------------------------------
                            505 ; paged external ram data
                            506 ;--------------------------------------------------------
                            507 	.area PSEG    (PAG,XDATA)
                            508 ;--------------------------------------------------------
                            509 ; external ram data
                            510 ;--------------------------------------------------------
                            511 	.area XSEG    (XDATA)
                    DF02    512 _MDMCTRL0H	=	0xdf02
                    DF03    513 _MDMCTRL0L	=	0xdf03
                    DF04    514 _MDMCTRL1H	=	0xdf04
                    DF05    515 _MDMCTRL1L	=	0xdf05
                    DF06    516 _RSSIH	=	0xdf06
                    DF07    517 _RSSIL	=	0xdf07
                    DF08    518 _SYNCWORDH	=	0xdf08
                    DF09    519 _SYNCWORDL	=	0xdf09
                    DF0A    520 _TXCTRLH	=	0xdf0a
                    DF0B    521 _TXCTRLL	=	0xdf0b
                    DF0C    522 _RXCTRL0H	=	0xdf0c
                    DF0D    523 _RXCTRL0L	=	0xdf0d
                    DF0E    524 _RXCTRL1H	=	0xdf0e
                    DF0F    525 _RXCTRL1L	=	0xdf0f
                    DF10    526 _FSCTRLH	=	0xdf10
                    DF11    527 _FSCTRLL	=	0xdf11
                    DF12    528 _CSPX	=	0xdf12
                    DF13    529 _CSPY	=	0xdf13
                    DF14    530 _CSPZ	=	0xdf14
                    DF15    531 _CSPCTRL	=	0xdf15
                    DF16    532 _CSPT	=	0xdf16
                    DF17    533 _RFPWR	=	0xdf17
                    DF20    534 _FSMTCH	=	0xdf20
                    DF21    535 _FSMTCL	=	0xdf21
                    DF22    536 _MANANDH	=	0xdf22
                    DF23    537 _MANANDL	=	0xdf23
                    DF24    538 _MANORH	=	0xdf24
                    DF25    539 _MANORL	=	0xdf25
                    DF26    540 _AGCCTRLH	=	0xdf26
                    DF27    541 _AGCCTRLL	=	0xdf27
                    DF39    542 _FSMSTATE	=	0xdf39
                    DF3A    543 _ADCTSTH	=	0xdf3a
                    DF3B    544 _ADCTSTL	=	0xdf3b
                    DF3C    545 _DACTSTH	=	0xdf3c
                    DF3D    546 _DACTSTL	=	0xdf3d
                    DF43    547 _IEEE_ADDR0	=	0xdf43
                    DF44    548 _IEEE_ADDR1	=	0xdf44
                    DF45    549 _IEEE_ADDR2	=	0xdf45
                    DF46    550 _IEEE_ADDR3	=	0xdf46
                    DF47    551 _IEEE_ADDR4	=	0xdf47
                    DF48    552 _IEEE_ADDR5	=	0xdf48
                    DF49    553 _IEEE_ADDR6	=	0xdf49
                    DF4A    554 _IEEE_ADDR7	=	0xdf4a
                    DF4B    555 _PANIDH	=	0xdf4b
                    DF4C    556 _PANIDL	=	0xdf4c
                    DF4D    557 _SHORTADDRH	=	0xdf4d
                    DF4E    558 _SHORTADDRL	=	0xdf4e
                    DF4F    559 _IOCFG0	=	0xdf4f
                    DF50    560 _IOCFG1	=	0xdf50
                    DF51    561 _IOCFG2	=	0xdf51
                    DF52    562 _IOCFG3	=	0xdf52
                    DF53    563 _RXFIFOCNT	=	0xdf53
                    DF54    564 _FSMTC1	=	0xdf54
                    DF60    565 _CHVER	=	0xdf60
                    DF61    566 _CHIPID	=	0xdf61
                    DF62    567 _RFSTATUS	=	0xdf62
                    DFC1    568 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    569 _RFD_SHADOW	=	0xdfd9
                    DFF9    570 _U1BUF_SHADOW	=	0xdff9
                    DFBA    571 _ADC_SHADOW	=	0xdfba
   0000                     572 _c:
   0000                     573 	.ds 67
                            574 ;--------------------------------------------------------
                            575 ; absolute external ram data
                            576 ;--------------------------------------------------------
                            577 	.area XABS    (ABS,XDATA)
                            578 ;--------------------------------------------------------
                            579 ; external initialized ram data
                            580 ;--------------------------------------------------------
                            581 	.area XISEG   (XDATA)
                            582 	.area HOME    (CODE)
                            583 	.area GSINIT0 (CODE)
                            584 	.area GSINIT1 (CODE)
                            585 	.area GSINIT2 (CODE)
                            586 	.area GSINIT3 (CODE)
                            587 	.area GSINIT4 (CODE)
                            588 	.area GSINIT5 (CODE)
                            589 	.area GSINIT  (CODE)
                            590 	.area GSFINAL (CODE)
                            591 	.area CSEG    (CODE)
                            592 ;--------------------------------------------------------
                            593 ; global & static initialisations
                            594 ;--------------------------------------------------------
                            595 	.area HOME    (CODE)
                            596 	.area GSINIT  (CODE)
                            597 	.area GSFINAL (CODE)
                            598 	.area GSINIT  (CODE)
                            599 ;--------------------------------------------------------
                            600 ; Home
                            601 ;--------------------------------------------------------
                            602 	.area HOME    (CODE)
                            603 	.area HOME    (CODE)
                            604 ;--------------------------------------------------------
                            605 ; code
                            606 ;--------------------------------------------------------
                            607 	.area CSEG    (CODE)
                            608 ;------------------------------------------------------------
                            609 ;Allocation info for local variables in function 'send_adv'
                            610 ;------------------------------------------------------------
                            611 ;ptr                       Allocated to registers 
                            612 ;adata                     Allocated to stack - _bp +1
                            613 ;a                         Allocated to stack - _bp +4
                            614 ;sloc0                     Allocated to stack - _bp +7
                            615 ;sloc1                     Allocated to stack - _bp +9
                            616 ;------------------------------------------------------------
                            617 ;	../../core/net/rime/broadcast-announcement.c:100: send_adv(void *ptr)
                            618 ;	-----------------------------------------
                            619 ;	 function send_adv
                            620 ;	-----------------------------------------
   0000                     621 _send_adv:
                    0007    622 	ar7 = 0x07
                    0006    623 	ar6 = 0x06
                    0005    624 	ar5 = 0x05
                    0004    625 	ar4 = 0x04
                    0003    626 	ar3 = 0x03
                    0002    627 	ar2 = 0x02
                    0001    628 	ar1 = 0x01
                    0000    629 	ar0 = 0x00
   0000 C0*00               630 	push	_bp
   0002 E5 81               631 	mov	a,sp
   0004 F5*00               632 	mov	_bp,a
   0006 24 0B               633 	add	a,#0x0B
   0008 F5 81               634 	mov	sp,a
                            635 ;	../../core/net/rime/broadcast-announcement.c:105: packetbuf_clear();
   000A 12s00r00            636 	lcall	_packetbuf_clear
                            637 ;	../../core/net/rime/broadcast-announcement.c:106: adata = packetbuf_dataptr();
   000D 12s00r00            638 	lcall	_packetbuf_dataptr
   0010 AD 82               639 	mov	r5,dpl
   0012 AE 83               640 	mov	r6,dph
   0014 AF F0               641 	mov	r7,b
   0016 A8*00               642 	mov	r0,_bp
   0018 08                  643 	inc	r0
   0019 A6 05               644 	mov	@r0,ar5
   001B 08                  645 	inc	r0
   001C A6 06               646 	mov	@r0,ar6
   001E 08                  647 	inc	r0
   001F A6 07               648 	mov	@r0,ar7
                            649 ;	../../core/net/rime/broadcast-announcement.c:107: adata->num = 0;
   0021 A8*00               650 	mov	r0,_bp
   0023 08                  651 	inc	r0
   0024 86 82               652 	mov	dpl,@r0
   0026 08                  653 	inc	r0
   0027 86 83               654 	mov	dph,@r0
   0029 08                  655 	inc	r0
   002A 86 F0               656 	mov	b,@r0
   002C E4                  657 	clr	a
   002D 12s00r00            658 	lcall	__gptrput
   0030 A3                  659 	inc	dptr
   0031 E4                  660 	clr	a
   0032 12s00r00            661 	lcall	__gptrput
                            662 ;	../../core/net/rime/broadcast-announcement.c:108: for(a = announcement_list(); a != NULL && a->has_value; a = list_item_next(a)) {
   0035 12s00r00            663 	lcall	_announcement_list
   0038 AA 82               664 	mov	r2,dpl
   003A AB 83               665 	mov	r3,dph
   003C AC F0               666 	mov	r4,b
   003E E5*00               667 	mov	a,_bp
   0040 24 04               668 	add	a,#0x04
   0042 F8                  669 	mov	r0,a
   0043 A6 02               670 	mov	@r0,ar2
   0045 08                  671 	inc	r0
   0046 A6 03               672 	mov	@r0,ar3
   0048 08                  673 	inc	r0
   0049 A6 04               674 	mov	@r0,ar4
   004B A8*00               675 	mov	r0,_bp
   004D 08                  676 	inc	r0
   004E 74 02               677 	mov	a,#0x02
   0050 26                  678 	add	a,@r0
   0051 FA                  679 	mov	r2,a
   0052 E4                  680 	clr	a
   0053 08                  681 	inc	r0
   0054 36                  682 	addc	a,@r0
   0055 FB                  683 	mov	r3,a
   0056 08                  684 	inc	r0
   0057 86 04               685 	mov	ar4,@r0
   0059                     686 00104$:
   0059 E5*00               687 	mov	a,_bp
   005B 24 04               688 	add	a,#0x04
   005D F8                  689 	mov	r0,a
   005E E4                  690 	clr	a
   005F C0 E0               691 	push	acc
   0061 E4                  692 	clr	a
   0062 C0 E0               693 	push	acc
   0064 E4                  694 	clr	a
   0065 C0 E0               695 	push	acc
   0067 86 82               696 	mov	dpl,@r0
   0069 08                  697 	inc	r0
   006A 86 83               698 	mov	dph,@r0
   006C 08                  699 	inc	r0
   006D 86 F0               700 	mov	b,@r0
   006F 12s00r00            701 	lcall	___gptr_cmp
   0072 15 81               702 	dec	sp
   0074 15 81               703 	dec	sp
   0076 15 81               704 	dec	sp
   0078 70 03               705 	jnz	00118$
   007A 02s01rCD            706 	ljmp	00107$
   007D                     707 00118$:
   007D C0 02               708 	push	ar2
   007F C0 03               709 	push	ar3
   0081 C0 04               710 	push	ar4
   0083 E5*00               711 	mov	a,_bp
   0085 24 04               712 	add	a,#0x04
   0087 F8                  713 	mov	r0,a
   0088 74 09               714 	mov	a,#0x09
   008A 26                  715 	add	a,@r0
   008B FA                  716 	mov	r2,a
   008C E4                  717 	clr	a
   008D 08                  718 	inc	r0
   008E 36                  719 	addc	a,@r0
   008F FB                  720 	mov	r3,a
   0090 08                  721 	inc	r0
   0091 86 04               722 	mov	ar4,@r0
   0093 8A 82               723 	mov	dpl,r2
   0095 8B 83               724 	mov	dph,r3
   0097 8C F0               725 	mov	b,r4
   0099 12s00r00            726 	lcall	__gptrget
   009C D0 04               727 	pop	ar4
   009E D0 03               728 	pop	ar3
   00A0 D0 02               729 	pop	ar2
   00A2 70 03               730 	jnz	00119$
   00A4 02s01rCD            731 	ljmp	00107$
   00A7                     732 00119$:
                            733 ;	../../core/net/rime/broadcast-announcement.c:109: adata->data[adata->num].id = a->id;
   00A7 A8*00               734 	mov	r0,_bp
   00A9 08                  735 	inc	r0
   00AA 86 82               736 	mov	dpl,@r0
   00AC 08                  737 	inc	r0
   00AD 86 83               738 	mov	dph,@r0
   00AF 08                  739 	inc	r0
   00B0 86 F0               740 	mov	b,@r0
   00B2 12s00r00            741 	lcall	__gptrget
   00B5 FE                  742 	mov	r6,a
   00B6 A3                  743 	inc	dptr
   00B7 12s00r00            744 	lcall	__gptrget
   00BA FF                  745 	mov	r7,a
   00BB E5*00               746 	mov	a,_bp
   00BD 24 07               747 	add	a,#0x07
   00BF F8                  748 	mov	r0,a
   00C0 A6 06               749 	mov	@r0,ar6
   00C2 EF                  750 	mov	a,r7
   00C3 C6                  751 	xch	a,@r0
   00C4 25 E0               752 	add	a,acc
   00C6 C6                  753 	xch	a,@r0
   00C7 33                  754 	rlc	a
   00C8 C6                  755 	xch	a,@r0
   00C9 25 E0               756 	add	a,acc
   00CB C6                  757 	xch	a,@r0
   00CC 33                  758 	rlc	a
   00CD 08                  759 	inc	r0
   00CE F6                  760 	mov	@r0,a
   00CF E5*00               761 	mov	a,_bp
   00D1 24 07               762 	add	a,#0x07
   00D3 F8                  763 	mov	r0,a
   00D4 E5*00               764 	mov	a,_bp
   00D6 24 09               765 	add	a,#0x09
   00D8 F9                  766 	mov	r1,a
   00D9 E6                  767 	mov	a,@r0
   00DA 2A                  768 	add	a,r2
   00DB F7                  769 	mov	@r1,a
   00DC 08                  770 	inc	r0
   00DD E6                  771 	mov	a,@r0
   00DE 3B                  772 	addc	a,r3
   00DF 09                  773 	inc	r1
   00E0 F7                  774 	mov	@r1,a
   00E1 09                  775 	inc	r1
   00E2 A7 04               776 	mov	@r1,ar4
   00E4 E5*00               777 	mov	a,_bp
   00E6 24 04               778 	add	a,#0x04
   00E8 F8                  779 	mov	r0,a
   00E9 74 03               780 	mov	a,#0x03
   00EB 26                  781 	add	a,@r0
   00EC FD                  782 	mov	r5,a
   00ED E4                  783 	clr	a
   00EE 08                  784 	inc	r0
   00EF 36                  785 	addc	a,@r0
   00F0 FE                  786 	mov	r6,a
   00F1 08                  787 	inc	r0
   00F2 86 07               788 	mov	ar7,@r0
   00F4 8D 82               789 	mov	dpl,r5
   00F6 8E 83               790 	mov	dph,r6
   00F8 8F F0               791 	mov	b,r7
   00FA 12s00r00            792 	lcall	__gptrget
   00FD FD                  793 	mov	r5,a
   00FE A3                  794 	inc	dptr
   00FF 12s00r00            795 	lcall	__gptrget
   0102 FE                  796 	mov	r6,a
   0103 E5*00               797 	mov	a,_bp
   0105 24 09               798 	add	a,#0x09
   0107 F8                  799 	mov	r0,a
   0108 86 82               800 	mov	dpl,@r0
   010A 08                  801 	inc	r0
   010B 86 83               802 	mov	dph,@r0
   010D 08                  803 	inc	r0
   010E 86 F0               804 	mov	b,@r0
   0110 ED                  805 	mov	a,r5
   0111 12s00r00            806 	lcall	__gptrput
   0114 A3                  807 	inc	dptr
   0115 EE                  808 	mov	a,r6
   0116 12s00r00            809 	lcall	__gptrput
                            810 ;	../../core/net/rime/broadcast-announcement.c:110: adata->data[adata->num].value = a->value;
   0119 E5*00               811 	mov	a,_bp
   011B 24 07               812 	add	a,#0x07
   011D F8                  813 	mov	r0,a
   011E E6                  814 	mov	a,@r0
   011F 2A                  815 	add	a,r2
   0120 FD                  816 	mov	r5,a
   0121 08                  817 	inc	r0
   0122 E6                  818 	mov	a,@r0
   0123 3B                  819 	addc	a,r3
   0124 FE                  820 	mov	r6,a
   0125 8C 07               821 	mov	ar7,r4
   0127 74 02               822 	mov	a,#0x02
   0129 2D                  823 	add	a,r5
   012A FD                  824 	mov	r5,a
   012B E4                  825 	clr	a
   012C 3E                  826 	addc	a,r6
   012D FE                  827 	mov	r6,a
   012E C0 02               828 	push	ar2
   0130 C0 03               829 	push	ar3
   0132 C0 04               830 	push	ar4
   0134 E5*00               831 	mov	a,_bp
   0136 24 04               832 	add	a,#0x04
   0138 F8                  833 	mov	r0,a
   0139 74 05               834 	mov	a,#0x05
   013B 26                  835 	add	a,@r0
   013C FA                  836 	mov	r2,a
   013D E4                  837 	clr	a
   013E 08                  838 	inc	r0
   013F 36                  839 	addc	a,@r0
   0140 FB                  840 	mov	r3,a
   0141 08                  841 	inc	r0
   0142 86 04               842 	mov	ar4,@r0
   0144 8A 82               843 	mov	dpl,r2
   0146 8B 83               844 	mov	dph,r3
   0148 8C F0               845 	mov	b,r4
   014A 12s00r00            846 	lcall	__gptrget
   014D FA                  847 	mov	r2,a
   014E A3                  848 	inc	dptr
   014F 12s00r00            849 	lcall	__gptrget
   0152 FB                  850 	mov	r3,a
   0153 8D 82               851 	mov	dpl,r5
   0155 8E 83               852 	mov	dph,r6
   0157 8F F0               853 	mov	b,r7
   0159 EA                  854 	mov	a,r2
   015A 12s00r00            855 	lcall	__gptrput
   015D A3                  856 	inc	dptr
   015E EB                  857 	mov	a,r3
   015F 12s00r00            858 	lcall	__gptrput
                            859 ;	../../core/net/rime/broadcast-announcement.c:111: adata->num++;
   0162 A8*00               860 	mov	r0,_bp
   0164 08                  861 	inc	r0
   0165 86 82               862 	mov	dpl,@r0
   0167 08                  863 	inc	r0
   0168 86 83               864 	mov	dph,@r0
   016A 08                  865 	inc	r0
   016B 86 F0               866 	mov	b,@r0
   016D 12s00r00            867 	lcall	__gptrget
   0170 FE                  868 	mov	r6,a
   0171 A3                  869 	inc	dptr
   0172 12s00r00            870 	lcall	__gptrget
   0175 FF                  871 	mov	r7,a
   0176 0E                  872 	inc	r6
   0177 BE 00 01            873 	cjne	r6,#0x00,00120$
   017A 0F                  874 	inc	r7
   017B                     875 00120$:
   017B A8*00               876 	mov	r0,_bp
   017D 08                  877 	inc	r0
   017E 86 82               878 	mov	dpl,@r0
   0180 08                  879 	inc	r0
   0181 86 83               880 	mov	dph,@r0
   0183 08                  881 	inc	r0
   0184 86 F0               882 	mov	b,@r0
   0186 EE                  883 	mov	a,r6
   0187 12s00r00            884 	lcall	__gptrput
   018A A3                  885 	inc	dptr
   018B EF                  886 	mov	a,r7
   018C 12s00r00            887 	lcall	__gptrput
                            888 ;	../../core/net/rime/broadcast-announcement.c:108: for(a = announcement_list(); a != NULL && a->has_value; a = list_item_next(a)) {
   018F E5*00               889 	mov	a,_bp
   0191 24 04               890 	add	a,#0x04
   0193 F8                  891 	mov	r0,a
   0194 86 02               892 	mov	ar2,@r0
   0196 08                  893 	inc	r0
   0197 86 03               894 	mov	ar3,@r0
   0199 08                  895 	inc	r0
   019A 86 04               896 	mov	ar4,@r0
   019C 8A 82               897 	mov	dpl,r2
   019E 8B 83               898 	mov	dph,r3
   01A0 8C F0               899 	mov	b,r4
   01A2 C0 04               900 	push	ar4
   01A4 C0 03               901 	push	ar3
   01A6 C0 02               902 	push	ar2
   01A8 12s00r00            903 	lcall	_list_item_next
   01AB AD 82               904 	mov	r5,dpl
   01AD AE 83               905 	mov	r6,dph
   01AF AF F0               906 	mov	r7,b
   01B1 D0 02               907 	pop	ar2
   01B3 D0 03               908 	pop	ar3
   01B5 D0 04               909 	pop	ar4
   01B7 E5*00               910 	mov	a,_bp
   01B9 24 04               911 	add	a,#0x04
   01BB F8                  912 	mov	r0,a
   01BC A6 05               913 	mov	@r0,ar5
   01BE 08                  914 	inc	r0
   01BF A6 06               915 	mov	@r0,ar6
   01C1 08                  916 	inc	r0
   01C2 A6 07               917 	mov	@r0,ar7
   01C4 D0 04               918 	pop	ar4
   01C6 D0 03               919 	pop	ar3
   01C8 D0 02               920 	pop	ar2
   01CA 02s00r59            921 	ljmp	00104$
   01CD                     922 00107$:
                            923 ;	../../core/net/rime/broadcast-announcement.c:115: sizeof(struct announcement_data) * adata->num);
   01CD A8*00               924 	mov	r0,_bp
   01CF 08                  925 	inc	r0
   01D0 86 82               926 	mov	dpl,@r0
   01D2 08                  927 	inc	r0
   01D3 86 83               928 	mov	dph,@r0
   01D5 08                  929 	inc	r0
   01D6 86 F0               930 	mov	b,@r0
   01D8 12s00r00            931 	lcall	__gptrget
   01DB FE                  932 	mov	r6,a
   01DC A3                  933 	inc	dptr
   01DD 12s00r00            934 	lcall	__gptrget
   01E0 CE                  935 	xch	a,r6
   01E1 25 E0               936 	add	a,acc
   01E3 CE                  937 	xch	a,r6
   01E4 33                  938 	rlc	a
   01E5 CE                  939 	xch	a,r6
   01E6 25 E0               940 	add	a,acc
   01E8 CE                  941 	xch	a,r6
   01E9 33                  942 	rlc	a
   01EA FF                  943 	mov	r7,a
   01EB 74 02               944 	mov	a,#0x02
   01ED 2E                  945 	add	a,r6
   01EE FE                  946 	mov	r6,a
   01EF E4                  947 	clr	a
   01F0 3F                  948 	addc	a,r7
   01F1 FF                  949 	mov	r7,a
   01F2 8E 82               950 	mov	dpl,r6
   01F4 8F 83               951 	mov	dph,r7
   01F6 12s00r00            952 	lcall	_packetbuf_set_datalen
                            953 ;	../../core/net/rime/broadcast-announcement.c:120: if(adata->num > 0) {
   01F9 A8*00               954 	mov	r0,_bp
   01FB 08                  955 	inc	r0
   01FC 86 82               956 	mov	dpl,@r0
   01FE 08                  957 	inc	r0
   01FF 86 83               958 	mov	dph,@r0
   0201 08                  959 	inc	r0
   0202 86 F0               960 	mov	b,@r0
   0204 12s00r00            961 	lcall	__gptrget
   0207 FE                  962 	mov	r6,a
   0208 A3                  963 	inc	dptr
   0209 12s00r00            964 	lcall	__gptrget
   020C FF                  965 	mov	r7,a
   020D 4E                  966 	orl	a,r6
   020E 60 09               967 	jz	00108$
                            968 ;	../../core/net/rime/broadcast-announcement.c:122: broadcast_send(&c.c);
   0210 90s00r00            969 	mov	dptr,#_c
   0213 75 F0 00            970 	mov	b,#0x00
   0216 12s00r00            971 	lcall	_broadcast_send
   0219                     972 00108$:
   0219 85*00 81            973 	mov	sp,_bp
   021C D0*00               974 	pop	_bp
   021E 22                  975 	ret
                            976 ;------------------------------------------------------------
                            977 ;Allocation info for local variables in function 'adv_packet_received'
                            978 ;------------------------------------------------------------
                            979 ;from                      Allocated to stack - _bp -5
                            980 ;ibc                       Allocated to registers 
                            981 ;adata                     Allocated to stack - _bp +1
                            982 ;data                      Allocated to stack - _bp +3
                            983 ;ptr                       Allocated to stack - _bp +7
                            984 ;i                         Allocated to stack - _bp +10
                            985 ;sloc0                     Allocated to stack - _bp +12
                            986 ;------------------------------------------------------------
                            987 ;	../../core/net/rime/broadcast-announcement.c:130: adv_packet_received(struct broadcast_conn *ibc, const rimeaddr_t *from)
                            988 ;	-----------------------------------------
                            989 ;	 function adv_packet_received
                            990 ;	-----------------------------------------
   021F                     991 _adv_packet_received:
   021F C0*00               992 	push	_bp
   0221 E5 81               993 	mov	a,sp
   0223 F5*00               994 	mov	_bp,a
   0225 24 0E               995 	add	a,#0x0E
   0227 F5 81               996 	mov	sp,a
                            997 ;	../../core/net/rime/broadcast-announcement.c:137: ptr = packetbuf_dataptr();
   0229 12s00r00            998 	lcall	_packetbuf_dataptr
   022C AD 82               999 	mov	r5,dpl
   022E AE 83              1000 	mov	r6,dph
   0230 AF F0              1001 	mov	r7,b
   0232 E5*00              1002 	mov	a,_bp
   0234 24 07              1003 	add	a,#0x07
   0236 F8                 1004 	mov	r0,a
   0237 A6 05              1005 	mov	@r0,ar5
   0239 08                 1006 	inc	r0
   023A A6 06              1007 	mov	@r0,ar6
   023C 08                 1008 	inc	r0
   023D A6 07              1009 	mov	@r0,ar7
                           1010 ;	../../core/net/rime/broadcast-announcement.c:140: memcpy(&adata, ptr, sizeof(struct announcement_msg));
   023F E5*00              1011 	mov	a,_bp
   0241 24 07              1012 	add	a,#0x07
   0243 F8                 1013 	mov	r0,a
   0244 86 02              1014 	mov	ar2,@r0
   0246 08                 1015 	inc	r0
   0247 86 03              1016 	mov	ar3,@r0
   0249 08                 1017 	inc	r0
   024A 86 04              1018 	mov	ar4,@r0
   024C AF*00              1019 	mov	r7,_bp
   024E 0F                 1020 	inc	r7
   024F 7E 00              1021 	mov	r6,#0x00
   0251 7D 40              1022 	mov	r5,#0x40
   0253 74 02              1023 	mov	a,#0x02
   0255 C0 E0              1024 	push	acc
   0257 E4                 1025 	clr	a
   0258 C0 E0              1026 	push	acc
   025A C0 02              1027 	push	ar2
   025C C0 03              1028 	push	ar3
   025E C0 04              1029 	push	ar4
   0260 8F 82              1030 	mov	dpl,r7
   0262 8E 83              1031 	mov	dph,r6
   0264 8D F0              1032 	mov	b,r5
   0266 12s00r00           1033 	lcall	_memcpy
   0269 E5 81              1034 	mov	a,sp
   026B 24 FB              1035 	add	a,#0xfb
   026D F5 81              1036 	mov	sp,a
                           1037 ;	../../core/net/rime/broadcast-announcement.c:145: if(ANNOUNCEMENT_MSG_HEADERLEN + adata.num * sizeof(struct announcement_data) > packetbuf_datalen()) {
   026F A9*00              1038 	mov	r1,_bp
   0271 09                 1039 	inc	r1
   0272 87 06              1040 	mov	ar6,@r1
   0274 09                 1041 	inc	r1
   0275 E7                 1042 	mov	a,@r1
   0276 CE                 1043 	xch	a,r6
   0277 25 E0              1044 	add	a,acc
   0279 CE                 1045 	xch	a,r6
   027A 33                 1046 	rlc	a
   027B CE                 1047 	xch	a,r6
   027C 25 E0              1048 	add	a,acc
   027E CE                 1049 	xch	a,r6
   027F 33                 1050 	rlc	a
   0280 FF                 1051 	mov	r7,a
   0281 74 02              1052 	mov	a,#0x02
   0283 2E                 1053 	add	a,r6
   0284 FE                 1054 	mov	r6,a
   0285 E4                 1055 	clr	a
   0286 3F                 1056 	addc	a,r7
   0287 FF                 1057 	mov	r7,a
   0288 C0 07              1058 	push	ar7
   028A C0 06              1059 	push	ar6
   028C 12s00r00           1060 	lcall	_packetbuf_datalen
   028F AC 82              1061 	mov	r4,dpl
   0291 AD 83              1062 	mov	r5,dph
   0293 D0 06              1063 	pop	ar6
   0295 D0 07              1064 	pop	ar7
   0297 C3                 1065 	clr	c
   0298 EC                 1066 	mov	a,r4
   0299 9E                 1067 	subb	a,r6
   029A ED                 1068 	mov	a,r5
   029B 9F                 1069 	subb	a,r7
   029C 50 03              1070 	jnc	00102$
                           1071 ;	../../core/net/rime/broadcast-announcement.c:149: return;
   029E 02s03r9C           1072 	ljmp	00107$
   02A1                    1073 00102$:
                           1074 ;	../../core/net/rime/broadcast-announcement.c:152: ptr += ANNOUNCEMENT_MSG_HEADERLEN;
   02A1 E5*00              1075 	mov	a,_bp
   02A3 24 07              1076 	add	a,#0x07
   02A5 F8                 1077 	mov	r0,a
   02A6 74 02              1078 	mov	a,#0x02
   02A8 26                 1079 	add	a,@r0
   02A9 FD                 1080 	mov	r5,a
   02AA E4                 1081 	clr	a
   02AB 08                 1082 	inc	r0
   02AC 36                 1083 	addc	a,@r0
   02AD FE                 1084 	mov	r6,a
   02AE 08                 1085 	inc	r0
   02AF 86 07              1086 	mov	ar7,@r0
                           1087 ;	../../core/net/rime/broadcast-announcement.c:153: for(i = 0; i < adata.num; ++i) {
   02B1 A9*00              1088 	mov	r1,_bp
   02B3 09                 1089 	inc	r1
   02B4 E5*00              1090 	mov	a,_bp
   02B6 24 0A              1091 	add	a,#0x0a
   02B8 F8                 1092 	mov	r0,a
   02B9 E4                 1093 	clr	a
   02BA F6                 1094 	mov	@r0,a
   02BB 08                 1095 	inc	r0
   02BC F6                 1096 	mov	@r0,a
   02BD                    1097 00103$:
   02BD C0 05              1098 	push	ar5
   02BF C0 06              1099 	push	ar6
   02C1 C0 07              1100 	push	ar7
   02C3 87 02              1101 	mov	ar2,@r1
   02C5 09                 1102 	inc	r1
   02C6 87 07              1103 	mov	ar7,@r1
   02C8 19                 1104 	dec	r1
   02C9 E5*00              1105 	mov	a,_bp
   02CB 24 0A              1106 	add	a,#0x0a
   02CD F8                 1107 	mov	r0,a
   02CE 86 05              1108 	mov	ar5,@r0
   02D0 08                 1109 	inc	r0
   02D1 86 06              1110 	mov	ar6,@r0
   02D3 C3                 1111 	clr	c
   02D4 ED                 1112 	mov	a,r5
   02D5 9A                 1113 	subb	a,r2
   02D6 EE                 1114 	mov	a,r6
   02D7 9F                 1115 	subb	a,r7
   02D8 D0 07              1116 	pop	ar7
   02DA D0 06              1117 	pop	ar6
   02DC D0 05              1118 	pop	ar5
   02DE 40 03              1119 	jc	00117$
   02E0 02s03r9C           1120 	ljmp	00107$
   02E3                    1121 00117$:
                           1122 ;	../../core/net/rime/broadcast-announcement.c:155: memcpy(&data, ptr, sizeof(struct announcement_data));
   02E3 C0 01              1123 	push	ar1
   02E5 E5*00              1124 	mov	a,_bp
   02E7 24 0C              1125 	add	a,#0x0c
   02E9 F8                 1126 	mov	r0,a
   02EA A6 05              1127 	mov	@r0,ar5
   02EC 08                 1128 	inc	r0
   02ED A6 06              1129 	mov	@r0,ar6
   02EF 08                 1130 	inc	r0
   02F0 A6 07              1131 	mov	@r0,ar7
   02F2 E5*00              1132 	mov	a,_bp
   02F4 24 03              1133 	add	a,#0x03
   02F6 FC                 1134 	mov	r4,a
   02F7 7B 00              1135 	mov	r3,#0x00
   02F9 7A 40              1136 	mov	r2,#0x40
   02FB C0 07              1137 	push	ar7
   02FD C0 06              1138 	push	ar6
   02FF C0 05              1139 	push	ar5
   0301 C0 01              1140 	push	ar1
   0303 74 04              1141 	mov	a,#0x04
   0305 C0 E0              1142 	push	acc
   0307 E4                 1143 	clr	a
   0308 C0 E0              1144 	push	acc
   030A E5*00              1145 	mov	a,_bp
   030C 24 0C              1146 	add	a,#0x0c
   030E F8                 1147 	mov	r0,a
   030F E6                 1148 	mov	a,@r0
   0310 C0 E0              1149 	push	acc
   0312 08                 1150 	inc	r0
   0313 E6                 1151 	mov	a,@r0
   0314 C0 E0              1152 	push	acc
   0316 08                 1153 	inc	r0
   0317 E6                 1154 	mov	a,@r0
   0318 C0 E0              1155 	push	acc
   031A 8C 82              1156 	mov	dpl,r4
   031C 8B 83              1157 	mov	dph,r3
   031E 8A F0              1158 	mov	b,r2
   0320 12s00r00           1159 	lcall	_memcpy
   0323 E5 81              1160 	mov	a,sp
   0325 24 FB              1161 	add	a,#0xfb
   0327 F5 81              1162 	mov	sp,a
   0329 D0 01              1163 	pop	ar1
   032B D0 05              1164 	pop	ar5
   032D D0 06              1165 	pop	ar6
   032F D0 07              1166 	pop	ar7
                           1167 ;	../../core/net/rime/broadcast-announcement.c:156: announcement_heard(from, data.id, data.value);
   0331 E5*00              1168 	mov	a,_bp
   0333 24 03              1169 	add	a,#0x03
   0335 F9                 1170 	mov	r1,a
   0336 24 02              1171 	add	a,#0x02
   0338 F8                 1172 	mov	r0,a
   0339 C0 01              1173 	push	ar1
   033B E5*00              1174 	mov	a,_bp
   033D 24 0C              1175 	add	a,#0x0c
   033F F9                 1176 	mov	r1,a
   0340 E6                 1177 	mov	a,@r0
   0341 F7                 1178 	mov	@r1,a
   0342 08                 1179 	inc	r0
   0343 E6                 1180 	mov	a,@r0
   0344 09                 1181 	inc	r1
   0345 F7                 1182 	mov	@r1,a
   0346 18                 1183 	dec	r0
   0347 D0 01              1184 	pop	ar1
   0349 87 02              1185 	mov	ar2,@r1
   034B 09                 1186 	inc	r1
   034C 87 04              1187 	mov	ar4,@r1
   034E 19                 1188 	dec	r1
   034F C0 07              1189 	push	ar7
   0351 C0 06              1190 	push	ar6
   0353 C0 05              1191 	push	ar5
   0355 C0 01              1192 	push	ar1
   0357 E5*00              1193 	mov	a,_bp
   0359 24 0C              1194 	add	a,#0x0c
   035B F8                 1195 	mov	r0,a
   035C E6                 1196 	mov	a,@r0
   035D C0 E0              1197 	push	acc
   035F 08                 1198 	inc	r0
   0360 E6                 1199 	mov	a,@r0
   0361 C0 E0              1200 	push	acc
   0363 C0 02              1201 	push	ar2
   0365 C0 04              1202 	push	ar4
   0367 E5*00              1203 	mov	a,_bp
   0369 24 FB              1204 	add	a,#0xfb
   036B F8                 1205 	mov	r0,a
   036C 86 82              1206 	mov	dpl,@r0
   036E 08                 1207 	inc	r0
   036F 86 83              1208 	mov	dph,@r0
   0371 08                 1209 	inc	r0
   0372 86 F0              1210 	mov	b,@r0
   0374 12s00r00           1211 	lcall	_announcement_heard
   0377 E5 81              1212 	mov	a,sp
   0379 24 FC              1213 	add	a,#0xfc
   037B F5 81              1214 	mov	sp,a
   037D D0 01              1215 	pop	ar1
   037F D0 05              1216 	pop	ar5
   0381 D0 06              1217 	pop	ar6
   0383 D0 07              1218 	pop	ar7
                           1219 ;	../../core/net/rime/broadcast-announcement.c:157: ptr += sizeof(struct announcement_data);
   0385 74 04              1220 	mov	a,#0x04
   0387 2D                 1221 	add	a,r5
   0388 FD                 1222 	mov	r5,a
   0389 E4                 1223 	clr	a
   038A 3E                 1224 	addc	a,r6
   038B FE                 1225 	mov	r6,a
                           1226 ;	../../core/net/rime/broadcast-announcement.c:153: for(i = 0; i < adata.num; ++i) {
   038C E5*00              1227 	mov	a,_bp
   038E 24 0A              1228 	add	a,#0x0a
   0390 F8                 1229 	mov	r0,a
   0391 06                 1230 	inc	@r0
   0392 B6 00 02           1231 	cjne	@r0,#0x00,00118$
   0395 08                 1232 	inc	r0
   0396 06                 1233 	inc	@r0
   0397                    1234 00118$:
   0397 D0 01              1235 	pop	ar1
   0399 02s02rBD           1236 	ljmp	00103$
   039C                    1237 00107$:
   039C 85*00 81           1238 	mov	sp,_bp
   039F D0*00              1239 	pop	_bp
   03A1 22                 1240 	ret
                           1241 ;------------------------------------------------------------
                           1242 ;Allocation info for local variables in function 'adv_packet_sent'
                           1243 ;------------------------------------------------------------
                           1244 ;status                    Allocated to stack - _bp -4
                           1245 ;num_tx                    Allocated to stack - _bp -6
                           1246 ;bc                        Allocated to registers 
                           1247 ;------------------------------------------------------------
                           1248 ;	../../core/net/rime/broadcast-announcement.c:162: adv_packet_sent(struct broadcast_conn *bc, int status, int num_tx)
                           1249 ;	-----------------------------------------
                           1250 ;	 function adv_packet_sent
                           1251 ;	-----------------------------------------
   03A2                    1252 _adv_packet_sent:
   03A2 C0*00              1253 	push	_bp
   03A4 85 81*00           1254 	mov	_bp,sp
                           1255 ;	../../core/net/rime/broadcast-announcement.c:164: }
   03A7 D0*00              1256 	pop	_bp
   03A9 22                 1257 	ret
                           1258 ;------------------------------------------------------------
                           1259 ;Allocation info for local variables in function 'set_timers'
                           1260 ;------------------------------------------------------------
                           1261 ;	../../core/net/rime/broadcast-announcement.c:169: set_timers(void)
                           1262 ;	-----------------------------------------
                           1263 ;	 function set_timers
                           1264 ;	-----------------------------------------
   03AA                    1265 _set_timers:
                           1266 ;	../../core/net/rime/broadcast-announcement.c:171: ctimer_set(&c.interval_timer, c.current_interval, send_timer, NULL);
   03AA 90s00r3F           1267 	mov	dptr,#(_c + 0x003f)
   03AD E0                 1268 	movx	a,@dptr
   03AE FE                 1269 	mov	r6,a
   03AF A3                 1270 	inc	dptr
   03B0 E0                 1271 	movx	a,@dptr
   03B1 FF                 1272 	mov	r7,a
   03B2 E4                 1273 	clr	a
   03B3 C0 E0              1274 	push	acc
   03B5 C0 E0              1275 	push	acc
   03B7 C0 E0              1276 	push	acc
   03B9 74r19              1277 	mov	a,#_send_timer
   03BB C0 E0              1278 	push	acc
   03BD 74s04              1279 	mov	a,#(_send_timer >> 8)
   03BF C0 E0              1280 	push	acc
   03C1 C0 06              1281 	push	ar6
   03C3 C0 07              1282 	push	ar7
   03C5 90s00r24           1283 	mov	dptr,#(_c + 0x0024)
   03C8 75 F0 00           1284 	mov	b,#0x00
   03CB 12s00r00           1285 	lcall	_ctimer_set
   03CE E5 81              1286 	mov	a,sp
   03D0 24 F9              1287 	add	a,#0xf9
   03D2 F5 81              1288 	mov	sp,a
                           1289 ;	../../core/net/rime/broadcast-announcement.c:172: ctimer_set(&c.send_timer, random_rand() % c.current_interval,
   03D4 12s00r00           1290 	lcall	_random_rand
   03D7 AE 82              1291 	mov	r6,dpl
   03D9 AF 83              1292 	mov	r7,dph
   03DB 90s00r3F           1293 	mov	dptr,#(_c + 0x003f)
   03DE E0                 1294 	movx	a,@dptr
   03DF FC                 1295 	mov	r4,a
   03E0 A3                 1296 	inc	dptr
   03E1 E0                 1297 	movx	a,@dptr
   03E2 FD                 1298 	mov	r5,a
   03E3 C0 04              1299 	push	ar4
   03E5 C0 05              1300 	push	ar5
   03E7 8E 82              1301 	mov	dpl,r6
   03E9 8F 83              1302 	mov	dph,r7
   03EB 12s00r00           1303 	lcall	__moduint
   03EE AE 82              1304 	mov	r6,dpl
   03F0 AF 83              1305 	mov	r7,dph
   03F2 15 81              1306 	dec	sp
   03F4 15 81              1307 	dec	sp
   03F6 E4                 1308 	clr	a
   03F7 C0 E0              1309 	push	acc
   03F9 C0 E0              1310 	push	acc
   03FB C0 E0              1311 	push	acc
   03FD 74r00              1312 	mov	a,#_send_adv
   03FF C0 E0              1313 	push	acc
   0401 74s00              1314 	mov	a,#(_send_adv >> 8)
   0403 C0 E0              1315 	push	acc
   0405 C0 06              1316 	push	ar6
   0407 C0 07              1317 	push	ar7
   0409 90s00r0F           1318 	mov	dptr,#(_c + 0x000f)
   040C 75 F0 00           1319 	mov	b,#0x00
   040F 12s00r00           1320 	lcall	_ctimer_set
   0412 E5 81              1321 	mov	a,sp
   0414 24 F9              1322 	add	a,#0xf9
   0416 F5 81              1323 	mov	sp,a
   0418 22                 1324 	ret
                           1325 ;------------------------------------------------------------
                           1326 ;Allocation info for local variables in function 'send_timer'
                           1327 ;------------------------------------------------------------
                           1328 ;ptr                       Allocated to registers 
                           1329 ;interval                  Allocated to registers r6 r7 
                           1330 ;------------------------------------------------------------
                           1331 ;	../../core/net/rime/broadcast-announcement.c:177: send_timer(void *ptr)
                           1332 ;	-----------------------------------------
                           1333 ;	 function send_timer
                           1334 ;	-----------------------------------------
   0419                    1335 _send_timer:
                           1336 ;	../../core/net/rime/broadcast-announcement.c:181: interval = c.current_interval * 2;
   0419 90s00r3F           1337 	mov	dptr,#(_c + 0x003f)
   041C E0                 1338 	movx	a,@dptr
   041D FE                 1339 	mov	r6,a
   041E A3                 1340 	inc	dptr
   041F E0                 1341 	movx	a,@dptr
   0420 CE                 1342 	xch	a,r6
   0421 25 E0              1343 	add	a,acc
   0423 CE                 1344 	xch	a,r6
   0424 33                 1345 	rlc	a
   0425 FF                 1346 	mov	r7,a
                           1347 ;	../../core/net/rime/broadcast-announcement.c:183: if(interval > c.max_interval) {
   0426 90s00r3D           1348 	mov	dptr,#(_c + 0x003d)
   0429 E0                 1349 	movx	a,@dptr
   042A FC                 1350 	mov	r4,a
   042B A3                 1351 	inc	dptr
   042C E0                 1352 	movx	a,@dptr
   042D FD                 1353 	mov	r5,a
   042E C3                 1354 	clr	c
   042F EC                 1355 	mov	a,r4
   0430 9E                 1356 	subb	a,r6
   0431 ED                 1357 	mov	a,r5
   0432 9F                 1358 	subb	a,r7
   0433 50 04              1359 	jnc	00102$
                           1360 ;	../../core/net/rime/broadcast-announcement.c:184: interval = c.max_interval;
   0435 8C 06              1361 	mov	ar6,r4
   0437 8D 07              1362 	mov	ar7,r5
   0439                    1363 00102$:
                           1364 ;	../../core/net/rime/broadcast-announcement.c:187: c.current_interval = interval;
   0439 90s00r3F           1365 	mov	dptr,#(_c + 0x003f)
   043C EE                 1366 	mov	a,r6
   043D F0                 1367 	movx	@dptr,a
   043E A3                 1368 	inc	dptr
   043F EF                 1369 	mov	a,r7
   0440 F0                 1370 	movx	@dptr,a
                           1371 ;	../../core/net/rime/broadcast-announcement.c:191: set_timers();
   0441 02s03rAA           1372 	ljmp	_set_timers
                           1373 ;------------------------------------------------------------
                           1374 ;Allocation info for local variables in function 'new_announcement'
                           1375 ;------------------------------------------------------------
                           1376 ;has_value                 Allocated to stack - _bp -3
                           1377 ;newval                    Allocated to stack - _bp -5
                           1378 ;oldval                    Allocated to stack - _bp -7
                           1379 ;bump                      Allocated to stack - _bp -8
                           1380 ;id                        Allocated to registers 
                           1381 ;------------------------------------------------------------
                           1382 ;	../../core/net/rime/broadcast-announcement.c:195: new_announcement(uint16_t id, uint8_t has_value,
                           1383 ;	-----------------------------------------
                           1384 ;	 function new_announcement
                           1385 ;	-----------------------------------------
   0444                    1386 _new_announcement:
   0444 C0*00              1387 	push	_bp
   0446 85 81*00           1388 	mov	_bp,sp
                           1389 ;	../../core/net/rime/broadcast-announcement.c:198: if(bump == ANNOUNCEMENT_BUMP) {
   0449 E5*00              1390 	mov	a,_bp
   044B 24 F8              1391 	add	a,#0xf8
   044D F8                 1392 	mov	r0,a
   044E B6 01 13           1393 	cjne	@r0,#0x01,00103$
                           1394 ;	../../core/net/rime/broadcast-announcement.c:199: c.current_interval = c.initial_interval;
   0451 90s00r39           1395 	mov	dptr,#(_c + 0x0039)
   0454 E0                 1396 	movx	a,@dptr
   0455 FE                 1397 	mov	r6,a
   0456 A3                 1398 	inc	dptr
   0457 E0                 1399 	movx	a,@dptr
   0458 FF                 1400 	mov	r7,a
   0459 90s00r3F           1401 	mov	dptr,#(_c + 0x003f)
   045C EE                 1402 	mov	a,r6
   045D F0                 1403 	movx	@dptr,a
   045E A3                 1404 	inc	dptr
   045F EF                 1405 	mov	a,r7
   0460 F0                 1406 	movx	@dptr,a
                           1407 ;	../../core/net/rime/broadcast-announcement.c:200: set_timers();
   0461 12s03rAA           1408 	lcall	_set_timers
   0464                    1409 00103$:
   0464 D0*00              1410 	pop	_bp
   0466 22                 1411 	ret
                           1412 ;------------------------------------------------------------
                           1413 ;Allocation info for local variables in function 'broadcast_announcement_init'
                           1414 ;------------------------------------------------------------
                           1415 ;initial                   Allocated to stack - _bp -4
                           1416 ;min                       Allocated to stack - _bp -6
                           1417 ;max                       Allocated to stack - _bp -8
                           1418 ;channel                   Allocated to registers r6 r7 
                           1419 ;------------------------------------------------------------
                           1420 ;	../../core/net/rime/broadcast-announcement.c:211: broadcast_announcement_init(uint16_t channel,
                           1421 ;	-----------------------------------------
                           1422 ;	 function broadcast_announcement_init
                           1423 ;	-----------------------------------------
   0467                    1424 _broadcast_announcement_init:
   0467 C0*00              1425 	push	_bp
   0469 85 81*00           1426 	mov	_bp,sp
   046C AE 82              1427 	mov	r6,dpl
   046E AF 83              1428 	mov	r7,dph
                           1429 ;	../../core/net/rime/broadcast-announcement.c:216: broadcast_open(&c.c, channel, &broadcast_callbacks);
   0470 74r00              1430 	mov	a,#_broadcast_callbacks
   0472 C0 E0              1431 	push	acc
   0474 74s00              1432 	mov	a,#(_broadcast_callbacks >> 8)
   0476 C0 E0              1433 	push	acc
   0478 74 80              1434 	mov	a,#0x80
   047A C0 E0              1435 	push	acc
   047C C0 06              1436 	push	ar6
   047E C0 07              1437 	push	ar7
   0480 90s00r00           1438 	mov	dptr,#_c
   0483 75 F0 00           1439 	mov	b,#0x00
   0486 12s00r00           1440 	lcall	_broadcast_open
   0489 E5 81              1441 	mov	a,sp
   048B 24 FB              1442 	add	a,#0xfb
   048D F5 81              1443 	mov	sp,a
                           1444 ;	../../core/net/rime/broadcast-announcement.c:217: c.initial_interval = initial;
   048F 90s00r39           1445 	mov	dptr,#(_c + 0x0039)
   0492 E5*00              1446 	mov	a,_bp
   0494 24 FC              1447 	add	a,#0xfc
   0496 F8                 1448 	mov	r0,a
   0497 E6                 1449 	mov	a,@r0
   0498 F0                 1450 	movx	@dptr,a
   0499 A3                 1451 	inc	dptr
   049A 08                 1452 	inc	r0
   049B E6                 1453 	mov	a,@r0
   049C F0                 1454 	movx	@dptr,a
                           1455 ;	../../core/net/rime/broadcast-announcement.c:218: c.min_interval = min;
   049D 90s00r3B           1456 	mov	dptr,#(_c + 0x003b)
   04A0 E5*00              1457 	mov	a,_bp
   04A2 24 FA              1458 	add	a,#0xfa
   04A4 F8                 1459 	mov	r0,a
   04A5 E6                 1460 	mov	a,@r0
   04A6 F0                 1461 	movx	@dptr,a
   04A7 A3                 1462 	inc	dptr
   04A8 08                 1463 	inc	r0
   04A9 E6                 1464 	mov	a,@r0
   04AA F0                 1465 	movx	@dptr,a
                           1466 ;	../../core/net/rime/broadcast-announcement.c:219: c.max_interval = max;
   04AB 90s00r3D           1467 	mov	dptr,#(_c + 0x003d)
   04AE E5*00              1468 	mov	a,_bp
   04B0 24 F8              1469 	add	a,#0xf8
   04B2 F8                 1470 	mov	r0,a
   04B3 E6                 1471 	mov	a,@r0
   04B4 F0                 1472 	movx	@dptr,a
   04B5 A3                 1473 	inc	dptr
   04B6 08                 1474 	inc	r0
   04B7 E6                 1475 	mov	a,@r0
   04B8 F0                 1476 	movx	@dptr,a
                           1477 ;	../../core/net/rime/broadcast-announcement.c:221: announcement_register_observer_callback(new_announcement);
   04B9 90s04r44           1478 	mov	dptr,#_new_announcement
   04BC 12s00r00           1479 	lcall	_announcement_register_observer_callback
   04BF D0*00              1480 	pop	_bp
   04C1 22                 1481 	ret
                           1482 ;------------------------------------------------------------
                           1483 ;Allocation info for local variables in function 'broadcast_announcement_stop'
                           1484 ;------------------------------------------------------------
                           1485 ;	../../core/net/rime/broadcast-announcement.c:225: broadcast_announcement_stop(void)
                           1486 ;	-----------------------------------------
                           1487 ;	 function broadcast_announcement_stop
                           1488 ;	-----------------------------------------
   04C2                    1489 _broadcast_announcement_stop:
                           1490 ;	../../core/net/rime/broadcast-announcement.c:227: ctimer_stop(&c.interval_timer);
   04C2 90s00r24           1491 	mov	dptr,#(_c + 0x0024)
   04C5 75 F0 00           1492 	mov	b,#0x00
   04C8 12s00r00           1493 	lcall	_ctimer_stop
                           1494 ;	../../core/net/rime/broadcast-announcement.c:228: ctimer_stop(&c.send_timer);
   04CB 90s00r0F           1495 	mov	dptr,#(_c + 0x000f)
   04CE 75 F0 00           1496 	mov	b,#0x00
   04D1 12s00r00           1497 	lcall	_ctimer_stop
                           1498 ;	../../core/net/rime/broadcast-announcement.c:229: broadcast_close(&c.c);
   04D4 90s00r00           1499 	mov	dptr,#_c
   04D7 75 F0 00           1500 	mov	b,#0x00
   04DA 02s00r00           1501 	ljmp	_broadcast_close
                           1502 ;------------------------------------------------------------
                           1503 ;Allocation info for local variables in function 'broadcast_announcement_beacon_interval'
                           1504 ;------------------------------------------------------------
                           1505 ;	../../core/net/rime/broadcast-announcement.c:233: broadcast_announcement_beacon_interval(void)
                           1506 ;	-----------------------------------------
                           1507 ;	 function broadcast_announcement_beacon_interval
                           1508 ;	-----------------------------------------
   04DD                    1509 _broadcast_announcement_beacon_interval:
                           1510 ;	../../core/net/rime/broadcast-announcement.c:235: return c.current_interval;
   04DD 90s00r3F           1511 	mov	dptr,#(_c + 0x003f)
   04E0 E0                 1512 	movx	a,@dptr
   04E1 FE                 1513 	mov	r6,a
   04E2 A3                 1514 	inc	dptr
   04E3 E0                 1515 	movx	a,@dptr
   04E4 8E 82              1516 	mov	dpl,r6
   04E6 F5 83              1517 	mov	dph,a
   04E8 22                 1518 	ret
                           1519 	.area CSEG    (CODE)
                           1520 	.area CONST   (CODE)
   0000                    1521 _broadcast_callbacks:
   0000r1Fs02              1522 	.byte _adv_packet_received,(_adv_packet_received >> 8)
   0002rA2s03              1523 	.byte _adv_packet_sent,(_adv_packet_sent >> 8)
                           1524 	.area XINIT   (CODE)
                           1525 	.area CABS    (ABS,CODE)
