                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:30 2013
                              5 ;--------------------------------------------------------
                              6 	.module dhcpc
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _dhcpc_unconfigured
                             13 	.globl _dhcpc_configured
                             14 	.globl _tcpip_poll_udp
                             15 	.globl _udp_new
                             16 	.globl _uip_htons
                             17 	.globl _uip_send
                             18 	.globl _etimer_expired
                             19 	.globl _etimer_set
                             20 	.globl _memset
                             21 	.globl _memcmp
                             22 	.globl _memcpy
                             23 	.globl _IRCON2_P2IF
                             24 	.globl _IRCON2_UTX0IF
                             25 	.globl _IRCON2_UTX1IF
                             26 	.globl _IRCON2_P1IF
                             27 	.globl _IRCON2_WDTIF
                             28 	.globl _CY
                             29 	.globl _AC
                             30 	.globl _F0
                             31 	.globl _RS1
                             32 	.globl _RS0
                             33 	.globl _OV
                             34 	.globl _F1
                             35 	.globl _P
                             36 	.globl _IRCON_DMAIF
                             37 	.globl _IRCON_T1IF
                             38 	.globl _IRCON_T2IF
                             39 	.globl _IRCON_T3IF
                             40 	.globl _IRCON_T4IF
                             41 	.globl _IRCON_P0IF
                             42 	.globl _IRCON_STIF
                             43 	.globl _IEN1_DMAIE
                             44 	.globl _IEN1_T1IE
                             45 	.globl _IEN1_T2IE
                             46 	.globl _IEN1_T3IE
                             47 	.globl _IEN1_T4IE
                             48 	.globl _IEN1_P0IE
                             49 	.globl _IEN0_RFERRIE
                             50 	.globl _IEN0_ADCIE
                             51 	.globl _IEN0_URX0IE
                             52 	.globl _IEN0_URX1IE
                             53 	.globl _IEN0_ENCIE
                             54 	.globl _IEN0_STIE
                             55 	.globl _IEN0_EA
                             56 	.globl _EA
                             57 	.globl _P2_4
                             58 	.globl _P2_3
                             59 	.globl _P2_2
                             60 	.globl _P2_1
                             61 	.globl _P2_0
                             62 	.globl _S0CON_ENCIF_0
                             63 	.globl _S0CON_ENCIF_1
                             64 	.globl _P1_7
                             65 	.globl _P1_6
                             66 	.globl _P1_5
                             67 	.globl _P1_4
                             68 	.globl _P1_3
                             69 	.globl _P1_2
                             70 	.globl _P1_1
                             71 	.globl _P1_0
                             72 	.globl _TCON_IT0
                             73 	.globl _TCON_RFERRIF
                             74 	.globl _TCON_IT1
                             75 	.globl _TCON_URX0IF
                             76 	.globl _TCON_ADCIF
                             77 	.globl _TCON_URX1IF
                             78 	.globl _P0_0
                             79 	.globl _P0_1
                             80 	.globl _P0_2
                             81 	.globl _P0_3
                             82 	.globl _P0_4
                             83 	.globl _P0_5
                             84 	.globl _P0_6
                             85 	.globl _P0_7
                             86 	.globl _P2DIR
                             87 	.globl _P1DIR
                             88 	.globl _P0DIR
                             89 	.globl _U1GCR
                             90 	.globl _U1UCR
                             91 	.globl _U1BAUD
                             92 	.globl _U1BUF
                             93 	.globl _U1CSR
                             94 	.globl _P2INP
                             95 	.globl _P1INP
                             96 	.globl _P2SEL
                             97 	.globl _P1SEL
                             98 	.globl _P0SEL
                             99 	.globl _ADCCFG
                            100 	.globl _PERCFG
                            101 	.globl _B
                            102 	.globl _T4CC1
                            103 	.globl _T4CCTL1
                            104 	.globl _T4CC0
                            105 	.globl _T4CCTL0
                            106 	.globl _T4CTL
                            107 	.globl _T4CNT
                            108 	.globl _RFIF
                            109 	.globl _IRCON2
                            110 	.globl _T1CCTL2
                            111 	.globl _T1CCTL1
                            112 	.globl _T1CCTL0
                            113 	.globl _T1CTL
                            114 	.globl _T1CNTH
                            115 	.globl _T1CNTL
                            116 	.globl _RFST
                            117 	.globl _ACC
                            118 	.globl _T1CC2H
                            119 	.globl _T1CC2L
                            120 	.globl _T1CC1H
                            121 	.globl _T1CC1L
                            122 	.globl _T1CC0H
                            123 	.globl _T1CC0L
                            124 	.globl _RFD
                            125 	.globl _TIMIF
                            126 	.globl _DMAREQ
                            127 	.globl _DMAARM
                            128 	.globl _DMA0CFGH
                            129 	.globl _DMA0CFGL
                            130 	.globl _DMA1CFGH
                            131 	.globl _DMA1CFGL
                            132 	.globl _DMAIRQ
                            133 	.globl _PSW
                            134 	.globl _T3CC1
                            135 	.globl _T3CCTL1
                            136 	.globl _T3CC0
                            137 	.globl _T3CCTL0
                            138 	.globl _T3CTL
                            139 	.globl _T3CNT
                            140 	.globl _WDCTL
                            141 	.globl _T2CON
                            142 	.globl _MEMCTR
                            143 	.globl _CLKCON
                            144 	.globl _U0GCR
                            145 	.globl _U0UCR
                            146 	.globl _T2CNF
                            147 	.globl _U0BAUD
                            148 	.globl _U0BUF
                            149 	.globl _IRCON
                            150 	.globl _SLEEP
                            151 	.globl _RNDH
                            152 	.globl _RNDL
                            153 	.globl _ADCH
                            154 	.globl _ADCL
                            155 	.globl _IP1
                            156 	.globl _IEN1
                            157 	.globl _RCCTL
                            158 	.globl _ADCCON3
                            159 	.globl _ADCCON2
                            160 	.globl _ADCCON1
                            161 	.globl _ENCCS
                            162 	.globl _ENCDO
                            163 	.globl _ENCDI
                            164 	.globl _FWDATA
                            165 	.globl _FCTL
                            166 	.globl _FADDRH
                            167 	.globl _FADDRL
                            168 	.globl _FWT
                            169 	.globl _IP0
                            170 	.globl _IEN0
                            171 	.globl _IE
                            172 	.globl _T2THD
                            173 	.globl _T2TLD
                            174 	.globl _T2CAPHPH
                            175 	.globl _T2CAPLPL
                            176 	.globl _T2OF2
                            177 	.globl _T2OF1
                            178 	.globl _T2OF0
                            179 	.globl _P2
                            180 	.globl _PSBANK
                            181 	.globl _FMAP
                            182 	.globl _T2PEROF2
                            183 	.globl _T2PEROF1
                            184 	.globl _T2PEROF0
                            185 	.globl _S1CON
                            186 	.globl _IEN2
                            187 	.globl _HSRC
                            188 	.globl _S0CON
                            189 	.globl _ST2
                            190 	.globl _ST1
                            191 	.globl _ST0
                            192 	.globl _T2CMP
                            193 	.globl __XPAGE
                            194 	.globl _DPS
                            195 	.globl _RFIM
                            196 	.globl _P1
                            197 	.globl _P0INP
                            198 	.globl _P1IEN
                            199 	.globl _PICTL
                            200 	.globl _P2IFG
                            201 	.globl _P1IFG
                            202 	.globl _P0IFG
                            203 	.globl _TCON
                            204 	.globl _PCON
                            205 	.globl _U0CSR
                            206 	.globl _DPH1
                            207 	.globl _DPL1
                            208 	.globl _DPH0
                            209 	.globl _DPL0
                            210 	.globl _SP
                            211 	.globl _P0
                            212 	.globl _ADC_SHADOW
                            213 	.globl _U1BUF_SHADOW
                            214 	.globl _RFD_SHADOW
                            215 	.globl _U0BUF_SHADOW
                            216 	.globl _RFSTATUS
                            217 	.globl _CHIPID
                            218 	.globl _CHVER
                            219 	.globl _FSMTC1
                            220 	.globl _RXFIFOCNT
                            221 	.globl _IOCFG3
                            222 	.globl _IOCFG2
                            223 	.globl _IOCFG1
                            224 	.globl _IOCFG0
                            225 	.globl _SHORTADDRL
                            226 	.globl _SHORTADDRH
                            227 	.globl _PANIDL
                            228 	.globl _PANIDH
                            229 	.globl _IEEE_ADDR7
                            230 	.globl _IEEE_ADDR6
                            231 	.globl _IEEE_ADDR5
                            232 	.globl _IEEE_ADDR4
                            233 	.globl _IEEE_ADDR3
                            234 	.globl _IEEE_ADDR2
                            235 	.globl _IEEE_ADDR1
                            236 	.globl _IEEE_ADDR0
                            237 	.globl _DACTSTL
                            238 	.globl _DACTSTH
                            239 	.globl _ADCTSTL
                            240 	.globl _ADCTSTH
                            241 	.globl _FSMSTATE
                            242 	.globl _AGCCTRLL
                            243 	.globl _AGCCTRLH
                            244 	.globl _MANORL
                            245 	.globl _MANORH
                            246 	.globl _MANANDL
                            247 	.globl _MANANDH
                            248 	.globl _FSMTCL
                            249 	.globl _FSMTCH
                            250 	.globl _RFPWR
                            251 	.globl _CSPT
                            252 	.globl _CSPCTRL
                            253 	.globl _CSPZ
                            254 	.globl _CSPY
                            255 	.globl _CSPX
                            256 	.globl _FSCTRLL
                            257 	.globl _FSCTRLH
                            258 	.globl _RXCTRL1L
                            259 	.globl _RXCTRL1H
                            260 	.globl _RXCTRL0L
                            261 	.globl _RXCTRL0H
                            262 	.globl _TXCTRLL
                            263 	.globl _TXCTRLH
                            264 	.globl _SYNCWORDL
                            265 	.globl _SYNCWORDH
                            266 	.globl _RSSIL
                            267 	.globl _RSSIH
                            268 	.globl _MDMCTRL1L
                            269 	.globl _MDMCTRL1H
                            270 	.globl _MDMCTRL0L
                            271 	.globl _MDMCTRL0H
                            272 	.globl _dhcpc_init
                            273 	.globl _dhcpc_appcall
                            274 	.globl _dhcpc_request
                            275 ;--------------------------------------------------------
                            276 ; special function registers
                            277 ;--------------------------------------------------------
                            278 	.area RSEG    (ABS,DATA)
   0000                     279 	.org 0x0000
                    0080    280 _P0	=	0x0080
                    0081    281 _SP	=	0x0081
                    0082    282 _DPL0	=	0x0082
                    0083    283 _DPH0	=	0x0083
                    0084    284 _DPL1	=	0x0084
                    0085    285 _DPH1	=	0x0085
                    0086    286 _U0CSR	=	0x0086
                    0087    287 _PCON	=	0x0087
                    0088    288 _TCON	=	0x0088
                    0089    289 _P0IFG	=	0x0089
                    008A    290 _P1IFG	=	0x008a
                    008B    291 _P2IFG	=	0x008b
                    008C    292 _PICTL	=	0x008c
                    008D    293 _P1IEN	=	0x008d
                    008F    294 _P0INP	=	0x008f
                    0090    295 _P1	=	0x0090
                    0091    296 _RFIM	=	0x0091
                    0092    297 _DPS	=	0x0092
                    0093    298 __XPAGE	=	0x0093
                    0094    299 _T2CMP	=	0x0094
                    0095    300 _ST0	=	0x0095
                    0096    301 _ST1	=	0x0096
                    0097    302 _ST2	=	0x0097
                    0098    303 _S0CON	=	0x0098
                    0099    304 _HSRC	=	0x0099
                    009A    305 _IEN2	=	0x009a
                    009B    306 _S1CON	=	0x009b
                    009C    307 _T2PEROF0	=	0x009c
                    009D    308 _T2PEROF1	=	0x009d
                    009E    309 _T2PEROF2	=	0x009e
                    009F    310 _FMAP	=	0x009f
                    009F    311 _PSBANK	=	0x009f
                    00A0    312 _P2	=	0x00a0
                    00A1    313 _T2OF0	=	0x00a1
                    00A2    314 _T2OF1	=	0x00a2
                    00A3    315 _T2OF2	=	0x00a3
                    00A4    316 _T2CAPLPL	=	0x00a4
                    00A5    317 _T2CAPHPH	=	0x00a5
                    00A6    318 _T2TLD	=	0x00a6
                    00A7    319 _T2THD	=	0x00a7
                    00A8    320 _IE	=	0x00a8
                    00A8    321 _IEN0	=	0x00a8
                    00A9    322 _IP0	=	0x00a9
                    00AB    323 _FWT	=	0x00ab
                    00AC    324 _FADDRL	=	0x00ac
                    00AD    325 _FADDRH	=	0x00ad
                    00AE    326 _FCTL	=	0x00ae
                    00AF    327 _FWDATA	=	0x00af
                    00B1    328 _ENCDI	=	0x00b1
                    00B2    329 _ENCDO	=	0x00b2
                    00B3    330 _ENCCS	=	0x00b3
                    00B4    331 _ADCCON1	=	0x00b4
                    00B5    332 _ADCCON2	=	0x00b5
                    00B6    333 _ADCCON3	=	0x00b6
                    00B7    334 _RCCTL	=	0x00b7
                    00B8    335 _IEN1	=	0x00b8
                    00B9    336 _IP1	=	0x00b9
                    00BA    337 _ADCL	=	0x00ba
                    00BB    338 _ADCH	=	0x00bb
                    00BC    339 _RNDL	=	0x00bc
                    00BD    340 _RNDH	=	0x00bd
                    00BE    341 _SLEEP	=	0x00be
                    00C0    342 _IRCON	=	0x00c0
                    00C1    343 _U0BUF	=	0x00c1
                    00C2    344 _U0BAUD	=	0x00c2
                    00C3    345 _T2CNF	=	0x00c3
                    00C4    346 _U0UCR	=	0x00c4
                    00C5    347 _U0GCR	=	0x00c5
                    00C6    348 _CLKCON	=	0x00c6
                    00C7    349 _MEMCTR	=	0x00c7
                    00C8    350 _T2CON	=	0x00c8
                    00C9    351 _WDCTL	=	0x00c9
                    00CA    352 _T3CNT	=	0x00ca
                    00CB    353 _T3CTL	=	0x00cb
                    00CC    354 _T3CCTL0	=	0x00cc
                    00CD    355 _T3CC0	=	0x00cd
                    00CE    356 _T3CCTL1	=	0x00ce
                    00CF    357 _T3CC1	=	0x00cf
                    00D0    358 _PSW	=	0x00d0
                    00D1    359 _DMAIRQ	=	0x00d1
                    00D2    360 _DMA1CFGL	=	0x00d2
                    00D3    361 _DMA1CFGH	=	0x00d3
                    00D4    362 _DMA0CFGL	=	0x00d4
                    00D5    363 _DMA0CFGH	=	0x00d5
                    00D6    364 _DMAARM	=	0x00d6
                    00D7    365 _DMAREQ	=	0x00d7
                    00D8    366 _TIMIF	=	0x00d8
                    00D9    367 _RFD	=	0x00d9
                    00DA    368 _T1CC0L	=	0x00da
                    00DB    369 _T1CC0H	=	0x00db
                    00DC    370 _T1CC1L	=	0x00dc
                    00DD    371 _T1CC1H	=	0x00dd
                    00DE    372 _T1CC2L	=	0x00de
                    00DF    373 _T1CC2H	=	0x00df
                    00E0    374 _ACC	=	0x00e0
                    00E1    375 _RFST	=	0x00e1
                    00E2    376 _T1CNTL	=	0x00e2
                    00E3    377 _T1CNTH	=	0x00e3
                    00E4    378 _T1CTL	=	0x00e4
                    00E5    379 _T1CCTL0	=	0x00e5
                    00E6    380 _T1CCTL1	=	0x00e6
                    00E7    381 _T1CCTL2	=	0x00e7
                    00E8    382 _IRCON2	=	0x00e8
                    00E9    383 _RFIF	=	0x00e9
                    00EA    384 _T4CNT	=	0x00ea
                    00EB    385 _T4CTL	=	0x00eb
                    00EC    386 _T4CCTL0	=	0x00ec
                    00ED    387 _T4CC0	=	0x00ed
                    00EE    388 _T4CCTL1	=	0x00ee
                    00EF    389 _T4CC1	=	0x00ef
                    00F0    390 _B	=	0x00f0
                    00F1    391 _PERCFG	=	0x00f1
                    00F2    392 _ADCCFG	=	0x00f2
                    00F3    393 _P0SEL	=	0x00f3
                    00F4    394 _P1SEL	=	0x00f4
                    00F5    395 _P2SEL	=	0x00f5
                    00F6    396 _P1INP	=	0x00f6
                    00F7    397 _P2INP	=	0x00f7
                    00F8    398 _U1CSR	=	0x00f8
                    00F9    399 _U1BUF	=	0x00f9
                    00FA    400 _U1BAUD	=	0x00fa
                    00FB    401 _U1UCR	=	0x00fb
                    00FC    402 _U1GCR	=	0x00fc
                    00FD    403 _P0DIR	=	0x00fd
                    00FE    404 _P1DIR	=	0x00fe
                    00FF    405 _P2DIR	=	0x00ff
                            406 ;--------------------------------------------------------
                            407 ; special function bits
                            408 ;--------------------------------------------------------
                            409 	.area RSEG    (ABS,DATA)
   0000                     410 	.org 0x0000
                    0087    411 _P0_7	=	0x0087
                    0086    412 _P0_6	=	0x0086
                    0085    413 _P0_5	=	0x0085
                    0084    414 _P0_4	=	0x0084
                    0083    415 _P0_3	=	0x0083
                    0082    416 _P0_2	=	0x0082
                    0081    417 _P0_1	=	0x0081
                    0080    418 _P0_0	=	0x0080
                    008F    419 _TCON_URX1IF	=	0x008f
                    008D    420 _TCON_ADCIF	=	0x008d
                    008B    421 _TCON_URX0IF	=	0x008b
                    008A    422 _TCON_IT1	=	0x008a
                    0089    423 _TCON_RFERRIF	=	0x0089
                    0088    424 _TCON_IT0	=	0x0088
                    0090    425 _P1_0	=	0x0090
                    0091    426 _P1_1	=	0x0091
                    0092    427 _P1_2	=	0x0092
                    0093    428 _P1_3	=	0x0093
                    0094    429 _P1_4	=	0x0094
                    0095    430 _P1_5	=	0x0095
                    0096    431 _P1_6	=	0x0096
                    0097    432 _P1_7	=	0x0097
                    0099    433 _S0CON_ENCIF_1	=	0x0099
                    0098    434 _S0CON_ENCIF_0	=	0x0098
                    00A0    435 _P2_0	=	0x00a0
                    00A1    436 _P2_1	=	0x00a1
                    00A2    437 _P2_2	=	0x00a2
                    00A3    438 _P2_3	=	0x00a3
                    00A4    439 _P2_4	=	0x00a4
                    00AF    440 _EA	=	0x00af
                    00AF    441 _IEN0_EA	=	0x00af
                    00AD    442 _IEN0_STIE	=	0x00ad
                    00AC    443 _IEN0_ENCIE	=	0x00ac
                    00AB    444 _IEN0_URX1IE	=	0x00ab
                    00AA    445 _IEN0_URX0IE	=	0x00aa
                    00A9    446 _IEN0_ADCIE	=	0x00a9
                    00A8    447 _IEN0_RFERRIE	=	0x00a8
                    00BD    448 _IEN1_P0IE	=	0x00bd
                    00BC    449 _IEN1_T4IE	=	0x00bc
                    00BB    450 _IEN1_T3IE	=	0x00bb
                    00BA    451 _IEN1_T2IE	=	0x00ba
                    00B9    452 _IEN1_T1IE	=	0x00b9
                    00B8    453 _IEN1_DMAIE	=	0x00b8
                    00C7    454 _IRCON_STIF	=	0x00c7
                    00C5    455 _IRCON_P0IF	=	0x00c5
                    00C4    456 _IRCON_T4IF	=	0x00c4
                    00C3    457 _IRCON_T3IF	=	0x00c3
                    00C2    458 _IRCON_T2IF	=	0x00c2
                    00C1    459 _IRCON_T1IF	=	0x00c1
                    00C0    460 _IRCON_DMAIF	=	0x00c0
                    00D0    461 _P	=	0x00d0
                    00D1    462 _F1	=	0x00d1
                    00D2    463 _OV	=	0x00d2
                    00D3    464 _RS0	=	0x00d3
                    00D4    465 _RS1	=	0x00d4
                    00D5    466 _F0	=	0x00d5
                    00D6    467 _AC	=	0x00d6
                    00D7    468 _CY	=	0x00d7
                    00EC    469 _IRCON2_WDTIF	=	0x00ec
                    00EB    470 _IRCON2_P1IF	=	0x00eb
                    00EA    471 _IRCON2_UTX1IF	=	0x00ea
                    00E9    472 _IRCON2_UTX0IF	=	0x00e9
                    00E8    473 _IRCON2_P2IF	=	0x00e8
                            474 ;--------------------------------------------------------
                            475 ; overlayable register banks
                            476 ;--------------------------------------------------------
                            477 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     478 	.ds 8
                            479 ;--------------------------------------------------------
                            480 ; internal ram data
                            481 ;--------------------------------------------------------
                            482 	.area DSEG    (DATA)
                            483 ;--------------------------------------------------------
                            484 ; overlayable items in internal ram 
                            485 ;--------------------------------------------------------
                            486 	.area OSEG    (OVR,DATA)
                            487 ;--------------------------------------------------------
                            488 ; indirectly addressable internal ram data
                            489 ;--------------------------------------------------------
                            490 	.area ISEG    (DATA)
                            491 ;--------------------------------------------------------
                            492 ; absolute internal ram data
                            493 ;--------------------------------------------------------
                            494 	.area IABS    (ABS,DATA)
                            495 	.area IABS    (ABS,DATA)
                            496 ;--------------------------------------------------------
                            497 ; bit data
                            498 ;--------------------------------------------------------
                            499 	.area BSEG    (BIT)
                            500 ;--------------------------------------------------------
                            501 ; paged external ram data
                            502 ;--------------------------------------------------------
                            503 	.area PSEG    (PAG,XDATA)
                            504 ;--------------------------------------------------------
                            505 ; external ram data
                            506 ;--------------------------------------------------------
                            507 	.area XSEG    (XDATA)
                    DF02    508 _MDMCTRL0H	=	0xdf02
                    DF03    509 _MDMCTRL0L	=	0xdf03
                    DF04    510 _MDMCTRL1H	=	0xdf04
                    DF05    511 _MDMCTRL1L	=	0xdf05
                    DF06    512 _RSSIH	=	0xdf06
                    DF07    513 _RSSIL	=	0xdf07
                    DF08    514 _SYNCWORDH	=	0xdf08
                    DF09    515 _SYNCWORDL	=	0xdf09
                    DF0A    516 _TXCTRLH	=	0xdf0a
                    DF0B    517 _TXCTRLL	=	0xdf0b
                    DF0C    518 _RXCTRL0H	=	0xdf0c
                    DF0D    519 _RXCTRL0L	=	0xdf0d
                    DF0E    520 _RXCTRL1H	=	0xdf0e
                    DF0F    521 _RXCTRL1L	=	0xdf0f
                    DF10    522 _FSCTRLH	=	0xdf10
                    DF11    523 _FSCTRLL	=	0xdf11
                    DF12    524 _CSPX	=	0xdf12
                    DF13    525 _CSPY	=	0xdf13
                    DF14    526 _CSPZ	=	0xdf14
                    DF15    527 _CSPCTRL	=	0xdf15
                    DF16    528 _CSPT	=	0xdf16
                    DF17    529 _RFPWR	=	0xdf17
                    DF20    530 _FSMTCH	=	0xdf20
                    DF21    531 _FSMTCL	=	0xdf21
                    DF22    532 _MANANDH	=	0xdf22
                    DF23    533 _MANANDL	=	0xdf23
                    DF24    534 _MANORH	=	0xdf24
                    DF25    535 _MANORL	=	0xdf25
                    DF26    536 _AGCCTRLH	=	0xdf26
                    DF27    537 _AGCCTRLL	=	0xdf27
                    DF39    538 _FSMSTATE	=	0xdf39
                    DF3A    539 _ADCTSTH	=	0xdf3a
                    DF3B    540 _ADCTSTL	=	0xdf3b
                    DF3C    541 _DACTSTH	=	0xdf3c
                    DF3D    542 _DACTSTL	=	0xdf3d
                    DF43    543 _IEEE_ADDR0	=	0xdf43
                    DF44    544 _IEEE_ADDR1	=	0xdf44
                    DF45    545 _IEEE_ADDR2	=	0xdf45
                    DF46    546 _IEEE_ADDR3	=	0xdf46
                    DF47    547 _IEEE_ADDR4	=	0xdf47
                    DF48    548 _IEEE_ADDR5	=	0xdf48
                    DF49    549 _IEEE_ADDR6	=	0xdf49
                    DF4A    550 _IEEE_ADDR7	=	0xdf4a
                    DF4B    551 _PANIDH	=	0xdf4b
                    DF4C    552 _PANIDL	=	0xdf4c
                    DF4D    553 _SHORTADDRH	=	0xdf4d
                    DF4E    554 _SHORTADDRL	=	0xdf4e
                    DF4F    555 _IOCFG0	=	0xdf4f
                    DF50    556 _IOCFG1	=	0xdf50
                    DF51    557 _IOCFG2	=	0xdf51
                    DF52    558 _IOCFG3	=	0xdf52
                    DF53    559 _RXFIFOCNT	=	0xdf53
                    DF54    560 _FSMTC1	=	0xdf54
                    DF60    561 _CHVER	=	0xdf60
                    DF61    562 _CHIPID	=	0xdf61
                    DF62    563 _RFSTATUS	=	0xdf62
                    DFC1    564 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    565 _RFD_SHADOW	=	0xdfd9
                    DFF9    566 _U1BUF_SHADOW	=	0xdff9
                    DFBA    567 _ADC_SHADOW	=	0xdfba
   0000                     568 _s:
   0000                     569 	.ds 49
   0031                     570 _xid:
   0031                     571 	.ds 4
                            572 ;--------------------------------------------------------
                            573 ; absolute external ram data
                            574 ;--------------------------------------------------------
                            575 	.area XABS    (ABS,XDATA)
                            576 ;--------------------------------------------------------
                            577 ; external initialized ram data
                            578 ;--------------------------------------------------------
                            579 	.area XISEG   (XDATA)
                            580 	.area HOME    (CODE)
                            581 	.area GSINIT0 (CODE)
                            582 	.area GSINIT1 (CODE)
                            583 	.area GSINIT2 (CODE)
                            584 	.area GSINIT3 (CODE)
                            585 	.area GSINIT4 (CODE)
                            586 	.area GSINIT5 (CODE)
                            587 	.area GSINIT  (CODE)
                            588 	.area GSFINAL (CODE)
                            589 	.area CSEG    (CODE)
                            590 ;--------------------------------------------------------
                            591 ; global & static initialisations
                            592 ;--------------------------------------------------------
                            593 	.area HOME    (CODE)
                            594 	.area GSINIT  (CODE)
                            595 	.area GSFINAL (CODE)
                            596 	.area GSINIT  (CODE)
                            597 ;--------------------------------------------------------
                            598 ; Home
                            599 ;--------------------------------------------------------
                            600 	.area HOME    (CODE)
                            601 	.area HOME    (CODE)
                            602 ;--------------------------------------------------------
                            603 ; code
                            604 ;--------------------------------------------------------
                            605 	.area CSEG    (CODE)
                            606 ;------------------------------------------------------------
                            607 ;Allocation info for local variables in function 'add_msg_type'
                            608 ;------------------------------------------------------------
                            609 ;type                      Allocated to stack - _bp -3
                            610 ;optptr                    Allocated to registers r5 r6 r7 
                            611 ;------------------------------------------------------------
                            612 ;	../../core/net/dhcpc.c:97: add_msg_type(uint8_t *optptr, uint8_t type)
                            613 ;	-----------------------------------------
                            614 ;	 function add_msg_type
                            615 ;	-----------------------------------------
   0000                     616 _add_msg_type:
                    0007    617 	ar7 = 0x07
                    0006    618 	ar6 = 0x06
                    0005    619 	ar5 = 0x05
                    0004    620 	ar4 = 0x04
                    0003    621 	ar3 = 0x03
                    0002    622 	ar2 = 0x02
                    0001    623 	ar1 = 0x01
                    0000    624 	ar0 = 0x00
   0000 C0*00               625 	push	_bp
   0002 85 81*00            626 	mov	_bp,sp
                            627 ;	../../core/net/dhcpc.c:99: *optptr++ = DHCP_OPTION_MSG_TYPE;
   0005 AF F0               628 	mov	r7,b
   0007 74 35               629 	mov	a,#0x35
   0009 12s00r00            630 	lcall	__gptrput
   000C A3                  631 	inc	dptr
                            632 ;	../../core/net/dhcpc.c:100: *optptr++ = 1;
   000D 8F F0               633 	mov	b,r7
   000F 74 01               634 	mov	a,#0x01
   0011 12s00r00            635 	lcall	__gptrput
   0014 A3                  636 	inc	dptr
                            637 ;	../../core/net/dhcpc.c:101: *optptr++ = type;
   0015 8F F0               638 	mov	b,r7
   0017 E5*00               639 	mov	a,_bp
   0019 24 FD               640 	add	a,#0xfd
   001B F8                  641 	mov	r0,a
   001C E6                  642 	mov	a,@r0
   001D 12s00r00            643 	lcall	__gptrput
   0020 A3                  644 	inc	dptr
                            645 ;	../../core/net/dhcpc.c:102: return optptr;
   0021 8F F0               646 	mov	b,r7
   0023 D0*00               647 	pop	_bp
   0025 22                  648 	ret
                            649 ;------------------------------------------------------------
                            650 ;Allocation info for local variables in function 'add_server_id'
                            651 ;------------------------------------------------------------
                            652 ;optptr                    Allocated to registers r5 r6 r7 
                            653 ;------------------------------------------------------------
                            654 ;	../../core/net/dhcpc.c:106: add_server_id(uint8_t *optptr)
                            655 ;	-----------------------------------------
                            656 ;	 function add_server_id
                            657 ;	-----------------------------------------
   0026                     658 _add_server_id:
                            659 ;	../../core/net/dhcpc.c:108: *optptr++ = DHCP_OPTION_SERVER_ID;
   0026 AF F0               660 	mov	r7,b
   0028 74 36               661 	mov	a,#0x36
   002A 12s00r00            662 	lcall	__gptrput
   002D A3                  663 	inc	dptr
                            664 ;	../../core/net/dhcpc.c:109: *optptr++ = 4;
   002E 8F F0               665 	mov	b,r7
   0030 74 04               666 	mov	a,#0x04
   0032 12s00r00            667 	lcall	__gptrput
   0035 A3                  668 	inc	dptr
   0036 AD 82               669 	mov	r5,dpl
   0038 AE 83               670 	mov	r6,dph
                            671 ;	../../core/net/dhcpc.c:110: memcpy(optptr, s.serverid, 4);
   003A 8D 02               672 	mov	ar2,r5
   003C 8E 03               673 	mov	ar3,r6
   003E 8F 04               674 	mov	ar4,r7
   0040 C0 07               675 	push	ar7
   0042 C0 06               676 	push	ar6
   0044 C0 05               677 	push	ar5
   0046 74 04               678 	mov	a,#0x04
   0048 C0 E0               679 	push	acc
   004A E4                  680 	clr	a
   004B C0 E0               681 	push	acc
   004D 74r19               682 	mov	a,#(_s + 0x0019)
   004F C0 E0               683 	push	acc
   0051 74s00               684 	mov	a,#((_s + 0x0019) >> 8)
   0053 C0 E0               685 	push	acc
   0055 E4                  686 	clr	a
   0056 C0 E0               687 	push	acc
   0058 8A 82               688 	mov	dpl,r2
   005A 8B 83               689 	mov	dph,r3
   005C 8C F0               690 	mov	b,r4
   005E 12s00r00            691 	lcall	_memcpy
   0061 E5 81               692 	mov	a,sp
   0063 24 FB               693 	add	a,#0xfb
   0065 F5 81               694 	mov	sp,a
   0067 D0 05               695 	pop	ar5
   0069 D0 06               696 	pop	ar6
   006B D0 07               697 	pop	ar7
                            698 ;	../../core/net/dhcpc.c:111: return optptr + 4;
   006D 74 04               699 	mov	a,#0x04
   006F 2D                  700 	add	a,r5
   0070 FD                  701 	mov	r5,a
   0071 E4                  702 	clr	a
   0072 3E                  703 	addc	a,r6
   0073 FE                  704 	mov	r6,a
   0074 8D 82               705 	mov	dpl,r5
   0076 8E 83               706 	mov	dph,r6
   0078 8F F0               707 	mov	b,r7
   007A 22                  708 	ret
                            709 ;------------------------------------------------------------
                            710 ;Allocation info for local variables in function 'add_req_ipaddr'
                            711 ;------------------------------------------------------------
                            712 ;optptr                    Allocated to registers r5 r6 r7 
                            713 ;------------------------------------------------------------
                            714 ;	../../core/net/dhcpc.c:115: add_req_ipaddr(uint8_t *optptr)
                            715 ;	-----------------------------------------
                            716 ;	 function add_req_ipaddr
                            717 ;	-----------------------------------------
   007B                     718 _add_req_ipaddr:
                            719 ;	../../core/net/dhcpc.c:117: *optptr++ = DHCP_OPTION_REQ_IPADDR;
   007B AF F0               720 	mov	r7,b
   007D 74 32               721 	mov	a,#0x32
   007F 12s00r00            722 	lcall	__gptrput
   0082 A3                  723 	inc	dptr
                            724 ;	../../core/net/dhcpc.c:118: *optptr++ = 4;
   0083 8F F0               725 	mov	b,r7
   0085 74 04               726 	mov	a,#0x04
   0087 12s00r00            727 	lcall	__gptrput
   008A A3                  728 	inc	dptr
   008B AD 82               729 	mov	r5,dpl
   008D AE 83               730 	mov	r6,dph
                            731 ;	../../core/net/dhcpc.c:119: memcpy(optptr, s.ipaddr.u16, 4);
   008F 8D 02               732 	mov	ar2,r5
   0091 8E 03               733 	mov	ar3,r6
   0093 8F 04               734 	mov	ar4,r7
   0095 C0 07               735 	push	ar7
   0097 C0 06               736 	push	ar6
   0099 C0 05               737 	push	ar5
   009B 74 04               738 	mov	a,#0x04
   009D C0 E0               739 	push	acc
   009F E4                  740 	clr	a
   00A0 C0 E0               741 	push	acc
   00A2 74r21               742 	mov	a,#(_s + 0x0021)
   00A4 C0 E0               743 	push	acc
   00A6 74s00               744 	mov	a,#((_s + 0x0021) >> 8)
   00A8 C0 E0               745 	push	acc
   00AA E4                  746 	clr	a
   00AB C0 E0               747 	push	acc
   00AD 8A 82               748 	mov	dpl,r2
   00AF 8B 83               749 	mov	dph,r3
   00B1 8C F0               750 	mov	b,r4
   00B3 12s00r00            751 	lcall	_memcpy
   00B6 E5 81               752 	mov	a,sp
   00B8 24 FB               753 	add	a,#0xfb
   00BA F5 81               754 	mov	sp,a
   00BC D0 05               755 	pop	ar5
   00BE D0 06               756 	pop	ar6
   00C0 D0 07               757 	pop	ar7
                            758 ;	../../core/net/dhcpc.c:120: return optptr + 4;
   00C2 74 04               759 	mov	a,#0x04
   00C4 2D                  760 	add	a,r5
   00C5 FD                  761 	mov	r5,a
   00C6 E4                  762 	clr	a
   00C7 3E                  763 	addc	a,r6
   00C8 FE                  764 	mov	r6,a
   00C9 8D 82               765 	mov	dpl,r5
   00CB 8E 83               766 	mov	dph,r6
   00CD 8F F0               767 	mov	b,r7
   00CF 22                  768 	ret
                            769 ;------------------------------------------------------------
                            770 ;Allocation info for local variables in function 'add_req_options'
                            771 ;------------------------------------------------------------
                            772 ;optptr                    Allocated to registers r5 r6 r7 
                            773 ;------------------------------------------------------------
                            774 ;	../../core/net/dhcpc.c:124: add_req_options(uint8_t *optptr)
                            775 ;	-----------------------------------------
                            776 ;	 function add_req_options
                            777 ;	-----------------------------------------
   00D0                     778 _add_req_options:
                            779 ;	../../core/net/dhcpc.c:126: *optptr++ = DHCP_OPTION_REQ_LIST;
   00D0 AF F0               780 	mov	r7,b
   00D2 74 37               781 	mov	a,#0x37
   00D4 12s00r00            782 	lcall	__gptrput
   00D7 A3                  783 	inc	dptr
                            784 ;	../../core/net/dhcpc.c:127: *optptr++ = 3;
   00D8 8F F0               785 	mov	b,r7
   00DA 74 03               786 	mov	a,#0x03
   00DC 12s00r00            787 	lcall	__gptrput
   00DF A3                  788 	inc	dptr
                            789 ;	../../core/net/dhcpc.c:128: *optptr++ = DHCP_OPTION_SUBNET_MASK;
   00E0 8F F0               790 	mov	b,r7
   00E2 74 01               791 	mov	a,#0x01
   00E4 12s00r00            792 	lcall	__gptrput
   00E7 A3                  793 	inc	dptr
                            794 ;	../../core/net/dhcpc.c:129: *optptr++ = DHCP_OPTION_ROUTER;
   00E8 8F F0               795 	mov	b,r7
   00EA 74 03               796 	mov	a,#0x03
   00EC 12s00r00            797 	lcall	__gptrput
   00EF A3                  798 	inc	dptr
                            799 ;	../../core/net/dhcpc.c:130: *optptr++ = DHCP_OPTION_DNS_SERVER;
   00F0 8F F0               800 	mov	b,r7
   00F2 74 06               801 	mov	a,#0x06
   00F4 12s00r00            802 	lcall	__gptrput
   00F7 A3                  803 	inc	dptr
                            804 ;	../../core/net/dhcpc.c:131: return optptr;
   00F8 8F F0               805 	mov	b,r7
   00FA 22                  806 	ret
                            807 ;------------------------------------------------------------
                            808 ;Allocation info for local variables in function 'add_end'
                            809 ;------------------------------------------------------------
                            810 ;optptr                    Allocated to registers r5 r6 r7 
                            811 ;------------------------------------------------------------
                            812 ;	../../core/net/dhcpc.c:135: add_end(uint8_t *optptr)
                            813 ;	-----------------------------------------
                            814 ;	 function add_end
                            815 ;	-----------------------------------------
   00FB                     816 _add_end:
                            817 ;	../../core/net/dhcpc.c:137: *optptr++ = DHCP_OPTION_END;
   00FB AF F0               818 	mov	r7,b
   00FD 74 FF               819 	mov	a,#0xFF
   00FF 12s00r00            820 	lcall	__gptrput
   0102 A3                  821 	inc	dptr
                            822 ;	../../core/net/dhcpc.c:138: return optptr;
   0103 8F F0               823 	mov	b,r7
   0105 22                  824 	ret
                            825 ;------------------------------------------------------------
                            826 ;Allocation info for local variables in function 'create_msg'
                            827 ;------------------------------------------------------------
                            828 ;m                         Allocated to stack - _bp +1
                            829 ;sloc0                     Allocated to stack - _bp +4
                            830 ;sloc1                     Allocated to stack - _bp +6
                            831 ;sloc2                     Allocated to stack - _bp +6
                            832 ;------------------------------------------------------------
                            833 ;	../../core/net/dhcpc.c:142: create_msg(CC_REGISTER_ARG struct dhcp_msg *m)
                            834 ;	-----------------------------------------
                            835 ;	 function create_msg
                            836 ;	-----------------------------------------
   0106                     837 _create_msg:
   0106 C0*00               838 	push	_bp
   0108 85 81*00            839 	mov	_bp,sp
   010B C0 82               840 	push	dpl
   010D C0 83               841 	push	dph
   010F C0 F0               842 	push	b
   0111 E5 81               843 	mov	a,sp
   0113 24 05               844 	add	a,#0x05
   0115 F5 81               845 	mov	sp,a
                            846 ;	../../core/net/dhcpc.c:144: m->op = DHCP_REQUEST;
   0117 A8*00               847 	mov	r0,_bp
   0119 08                  848 	inc	r0
   011A 86 82               849 	mov	dpl,@r0
   011C 08                  850 	inc	r0
   011D 86 83               851 	mov	dph,@r0
   011F 08                  852 	inc	r0
   0120 86 F0               853 	mov	b,@r0
   0122 74 01               854 	mov	a,#0x01
   0124 12s00r00            855 	lcall	__gptrput
                            856 ;	../../core/net/dhcpc.c:145: m->htype = DHCP_HTYPE_ETHERNET;
   0127 A8*00               857 	mov	r0,_bp
   0129 08                  858 	inc	r0
   012A 74 01               859 	mov	a,#0x01
   012C 26                  860 	add	a,@r0
   012D FA                  861 	mov	r2,a
   012E E4                  862 	clr	a
   012F 08                  863 	inc	r0
   0130 36                  864 	addc	a,@r0
   0131 FB                  865 	mov	r3,a
   0132 08                  866 	inc	r0
   0133 86 04               867 	mov	ar4,@r0
   0135 8A 82               868 	mov	dpl,r2
   0137 8B 83               869 	mov	dph,r3
   0139 8C F0               870 	mov	b,r4
   013B 74 01               871 	mov	a,#0x01
   013D 12s00r00            872 	lcall	__gptrput
                            873 ;	../../core/net/dhcpc.c:146: m->hlen = s.mac_len;
   0140 A8*00               874 	mov	r0,_bp
   0142 08                  875 	inc	r0
   0143 74 02               876 	mov	a,#0x02
   0145 26                  877 	add	a,@r0
   0146 FA                  878 	mov	r2,a
   0147 E4                  879 	clr	a
   0148 08                  880 	inc	r0
   0149 36                  881 	addc	a,@r0
   014A FB                  882 	mov	r3,a
   014B 08                  883 	inc	r0
   014C 86 04               884 	mov	ar4,@r0
   014E 90s00r17            885 	mov	dptr,#(_s + 0x0017)
   0151 E0                  886 	movx	a,@dptr
   0152 FF                  887 	mov	r7,a
   0153 A3                  888 	inc	dptr
   0154 E0                  889 	movx	a,@dptr
   0155 8A 82               890 	mov	dpl,r2
   0157 8B 83               891 	mov	dph,r3
   0159 8C F0               892 	mov	b,r4
   015B EF                  893 	mov	a,r7
   015C 12s00r00            894 	lcall	__gptrput
                            895 ;	../../core/net/dhcpc.c:147: m->hops = 0;
   015F A8*00               896 	mov	r0,_bp
   0161 08                  897 	inc	r0
   0162 74 03               898 	mov	a,#0x03
   0164 26                  899 	add	a,@r0
   0165 FA                  900 	mov	r2,a
   0166 E4                  901 	clr	a
   0167 08                  902 	inc	r0
   0168 36                  903 	addc	a,@r0
   0169 FB                  904 	mov	r3,a
   016A 08                  905 	inc	r0
   016B 86 04               906 	mov	ar4,@r0
   016D 8A 82               907 	mov	dpl,r2
   016F 8B 83               908 	mov	dph,r3
   0171 8C F0               909 	mov	b,r4
   0173 E4                  910 	clr	a
   0174 12s00r00            911 	lcall	__gptrput
                            912 ;	../../core/net/dhcpc.c:148: memcpy(m->xid, &xid, sizeof(m->xid));
   0177 A8*00               913 	mov	r0,_bp
   0179 08                  914 	inc	r0
   017A 74 04               915 	mov	a,#0x04
   017C 26                  916 	add	a,@r0
   017D FA                  917 	mov	r2,a
   017E E4                  918 	clr	a
   017F 08                  919 	inc	r0
   0180 36                  920 	addc	a,@r0
   0181 FB                  921 	mov	r3,a
   0182 08                  922 	inc	r0
   0183 86 04               923 	mov	ar4,@r0
   0185 74 04               924 	mov	a,#0x04
   0187 C0 E0               925 	push	acc
   0189 E4                  926 	clr	a
   018A C0 E0               927 	push	acc
   018C 74r31               928 	mov	a,#_xid
   018E C0 E0               929 	push	acc
   0190 74s00               930 	mov	a,#(_xid >> 8)
   0192 C0 E0               931 	push	acc
   0194 E4                  932 	clr	a
   0195 C0 E0               933 	push	acc
   0197 8A 82               934 	mov	dpl,r2
   0199 8B 83               935 	mov	dph,r3
   019B 8C F0               936 	mov	b,r4
   019D 12s00r00            937 	lcall	_memcpy
   01A0 E5 81               938 	mov	a,sp
   01A2 24 FB               939 	add	a,#0xfb
   01A4 F5 81               940 	mov	sp,a
                            941 ;	../../core/net/dhcpc.c:149: m->secs = 0;
   01A6 A8*00               942 	mov	r0,_bp
   01A8 08                  943 	inc	r0
   01A9 74 08               944 	mov	a,#0x08
   01AB 26                  945 	add	a,@r0
   01AC FA                  946 	mov	r2,a
   01AD E4                  947 	clr	a
   01AE 08                  948 	inc	r0
   01AF 36                  949 	addc	a,@r0
   01B0 FB                  950 	mov	r3,a
   01B1 08                  951 	inc	r0
   01B2 86 04               952 	mov	ar4,@r0
   01B4 8A 82               953 	mov	dpl,r2
   01B6 8B 83               954 	mov	dph,r3
   01B8 8C F0               955 	mov	b,r4
   01BA E4                  956 	clr	a
   01BB 12s00r00            957 	lcall	__gptrput
   01BE A3                  958 	inc	dptr
   01BF E4                  959 	clr	a
   01C0 12s00r00            960 	lcall	__gptrput
                            961 ;	../../core/net/dhcpc.c:150: m->flags = UIP_HTONS(BOOTP_BROADCAST); /*  Broadcast bit. */
   01C3 A8*00               962 	mov	r0,_bp
   01C5 08                  963 	inc	r0
   01C6 74 0A               964 	mov	a,#0x0A
   01C8 26                  965 	add	a,@r0
   01C9 FA                  966 	mov	r2,a
   01CA E4                  967 	clr	a
   01CB 08                  968 	inc	r0
   01CC 36                  969 	addc	a,@r0
   01CD FB                  970 	mov	r3,a
   01CE 08                  971 	inc	r0
   01CF 86 04               972 	mov	ar4,@r0
   01D1 8A 82               973 	mov	dpl,r2
   01D3 8B 83               974 	mov	dph,r3
   01D5 8C F0               975 	mov	b,r4
   01D7 74 80               976 	mov	a,#0x80
   01D9 12s00r00            977 	lcall	__gptrput
   01DC A3                  978 	inc	dptr
   01DD E4                  979 	clr	a
   01DE 12s00r00            980 	lcall	__gptrput
                            981 ;	../../core/net/dhcpc.c:152: memcpy(m->ciaddr, uip_hostaddr.u16, sizeof(m->ciaddr));
   01E1 A8*00               982 	mov	r0,_bp
   01E3 08                  983 	inc	r0
   01E4 74 0C               984 	mov	a,#0x0C
   01E6 26                  985 	add	a,@r0
   01E7 FA                  986 	mov	r2,a
   01E8 E4                  987 	clr	a
   01E9 08                  988 	inc	r0
   01EA 36                  989 	addc	a,@r0
   01EB FB                  990 	mov	r3,a
   01EC 08                  991 	inc	r0
   01ED 86 04               992 	mov	ar4,@r0
   01EF 74 04               993 	mov	a,#0x04
   01F1 C0 E0               994 	push	acc
   01F3 E4                  995 	clr	a
   01F4 C0 E0               996 	push	acc
   01F6 74r00               997 	mov	a,#_uip_hostaddr
   01F8 C0 E0               998 	push	acc
   01FA 74s00               999 	mov	a,#(_uip_hostaddr >> 8)
   01FC C0 E0              1000 	push	acc
   01FE E4                 1001 	clr	a
   01FF C0 E0              1002 	push	acc
   0201 8A 82              1003 	mov	dpl,r2
   0203 8B 83              1004 	mov	dph,r3
   0205 8C F0              1005 	mov	b,r4
   0207 12s00r00           1006 	lcall	_memcpy
   020A E5 81              1007 	mov	a,sp
   020C 24 FB              1008 	add	a,#0xfb
   020E F5 81              1009 	mov	sp,a
                           1010 ;	../../core/net/dhcpc.c:153: memset(m->yiaddr, 0, sizeof(m->yiaddr));
   0210 A8*00              1011 	mov	r0,_bp
   0212 08                 1012 	inc	r0
   0213 74 10              1013 	mov	a,#0x10
   0215 26                 1014 	add	a,@r0
   0216 FA                 1015 	mov	r2,a
   0217 E4                 1016 	clr	a
   0218 08                 1017 	inc	r0
   0219 36                 1018 	addc	a,@r0
   021A FB                 1019 	mov	r3,a
   021B 08                 1020 	inc	r0
   021C 86 04              1021 	mov	ar4,@r0
   021E 74 04              1022 	mov	a,#0x04
   0220 C0 E0              1023 	push	acc
   0222 E4                 1024 	clr	a
   0223 C0 E0              1025 	push	acc
   0225 E4                 1026 	clr	a
   0226 C0 E0              1027 	push	acc
   0228 8A 82              1028 	mov	dpl,r2
   022A 8B 83              1029 	mov	dph,r3
   022C 8C F0              1030 	mov	b,r4
   022E 12s00r00           1031 	lcall	_memset
   0231 15 81              1032 	dec	sp
   0233 15 81              1033 	dec	sp
   0235 15 81              1034 	dec	sp
                           1035 ;	../../core/net/dhcpc.c:154: memset(m->siaddr, 0, sizeof(m->siaddr));
   0237 A8*00              1036 	mov	r0,_bp
   0239 08                 1037 	inc	r0
   023A 74 14              1038 	mov	a,#0x14
   023C 26                 1039 	add	a,@r0
   023D FA                 1040 	mov	r2,a
   023E E4                 1041 	clr	a
   023F 08                 1042 	inc	r0
   0240 36                 1043 	addc	a,@r0
   0241 FB                 1044 	mov	r3,a
   0242 08                 1045 	inc	r0
   0243 86 04              1046 	mov	ar4,@r0
   0245 74 04              1047 	mov	a,#0x04
   0247 C0 E0              1048 	push	acc
   0249 E4                 1049 	clr	a
   024A C0 E0              1050 	push	acc
   024C E4                 1051 	clr	a
   024D C0 E0              1052 	push	acc
   024F 8A 82              1053 	mov	dpl,r2
   0251 8B 83              1054 	mov	dph,r3
   0253 8C F0              1055 	mov	b,r4
   0255 12s00r00           1056 	lcall	_memset
   0258 15 81              1057 	dec	sp
   025A 15 81              1058 	dec	sp
   025C 15 81              1059 	dec	sp
                           1060 ;	../../core/net/dhcpc.c:155: memset(m->giaddr, 0, sizeof(m->giaddr));
   025E A8*00              1061 	mov	r0,_bp
   0260 08                 1062 	inc	r0
   0261 74 18              1063 	mov	a,#0x18
   0263 26                 1064 	add	a,@r0
   0264 FA                 1065 	mov	r2,a
   0265 E4                 1066 	clr	a
   0266 08                 1067 	inc	r0
   0267 36                 1068 	addc	a,@r0
   0268 FB                 1069 	mov	r3,a
   0269 08                 1070 	inc	r0
   026A 86 04              1071 	mov	ar4,@r0
   026C 74 04              1072 	mov	a,#0x04
   026E C0 E0              1073 	push	acc
   0270 E4                 1074 	clr	a
   0271 C0 E0              1075 	push	acc
   0273 E4                 1076 	clr	a
   0274 C0 E0              1077 	push	acc
   0276 8A 82              1078 	mov	dpl,r2
   0278 8B 83              1079 	mov	dph,r3
   027A 8C F0              1080 	mov	b,r4
   027C 12s00r00           1081 	lcall	_memset
   027F 15 81              1082 	dec	sp
   0281 15 81              1083 	dec	sp
   0283 15 81              1084 	dec	sp
                           1085 ;	../../core/net/dhcpc.c:156: memcpy(m->chaddr, s.mac_addr, s.mac_len);
   0285 90s00r17           1086 	mov	dptr,#(_s + 0x0017)
   0288 E0                 1087 	movx	a,@dptr
   0289 FB                 1088 	mov	r3,a
   028A A3                 1089 	inc	dptr
   028B E0                 1090 	movx	a,@dptr
   028C FC                 1091 	mov	r4,a
   028D E5*00              1092 	mov	a,_bp
   028F 24 04              1093 	add	a,#0x04
   0291 F8                 1094 	mov	r0,a
   0292 A6 03              1095 	mov	@r0,ar3
   0294 08                 1096 	inc	r0
   0295 A6 04              1097 	mov	@r0,ar4
   0297 90s00r14           1098 	mov	dptr,#(_s + 0x0014)
   029A E5*00              1099 	mov	a,_bp
   029C 24 06              1100 	add	a,#0x06
   029E F8                 1101 	mov	r0,a
   029F E0                 1102 	movx	a,@dptr
   02A0 F6                 1103 	mov	@r0,a
   02A1 A3                 1104 	inc	dptr
   02A2 E0                 1105 	movx	a,@dptr
   02A3 08                 1106 	inc	r0
   02A4 F6                 1107 	mov	@r0,a
   02A5 A3                 1108 	inc	dptr
   02A6 E0                 1109 	movx	a,@dptr
   02A7 08                 1110 	inc	r0
   02A8 F6                 1111 	mov	@r0,a
   02A9 A8*00              1112 	mov	r0,_bp
   02AB 08                 1113 	inc	r0
   02AC 74 1C              1114 	mov	a,#0x1C
   02AE 26                 1115 	add	a,@r0
   02AF FD                 1116 	mov	r5,a
   02B0 E4                 1117 	clr	a
   02B1 08                 1118 	inc	r0
   02B2 36                 1119 	addc	a,@r0
   02B3 FE                 1120 	mov	r6,a
   02B4 08                 1121 	inc	r0
   02B5 86 07              1122 	mov	ar7,@r0
   02B7 8D 02              1123 	mov	ar2,r5
   02B9 8E 03              1124 	mov	ar3,r6
   02BB 8F 04              1125 	mov	ar4,r7
   02BD C0 07              1126 	push	ar7
   02BF C0 06              1127 	push	ar6
   02C1 C0 05              1128 	push	ar5
   02C3 E5*00              1129 	mov	a,_bp
   02C5 24 04              1130 	add	a,#0x04
   02C7 F8                 1131 	mov	r0,a
   02C8 E6                 1132 	mov	a,@r0
   02C9 C0 E0              1133 	push	acc
   02CB 08                 1134 	inc	r0
   02CC E6                 1135 	mov	a,@r0
   02CD C0 E0              1136 	push	acc
   02CF E5*00              1137 	mov	a,_bp
   02D1 24 06              1138 	add	a,#0x06
   02D3 F8                 1139 	mov	r0,a
   02D4 E6                 1140 	mov	a,@r0
   02D5 C0 E0              1141 	push	acc
   02D7 08                 1142 	inc	r0
   02D8 E6                 1143 	mov	a,@r0
   02D9 C0 E0              1144 	push	acc
   02DB 08                 1145 	inc	r0
   02DC E6                 1146 	mov	a,@r0
   02DD C0 E0              1147 	push	acc
   02DF 8A 82              1148 	mov	dpl,r2
   02E1 8B 83              1149 	mov	dph,r3
   02E3 8C F0              1150 	mov	b,r4
   02E5 12s00r00           1151 	lcall	_memcpy
   02E8 E5 81              1152 	mov	a,sp
   02EA 24 FB              1153 	add	a,#0xfb
   02EC F5 81              1154 	mov	sp,a
   02EE D0 05              1155 	pop	ar5
   02F0 D0 06              1156 	pop	ar6
   02F2 D0 07              1157 	pop	ar7
                           1158 ;	../../core/net/dhcpc.c:157: memset(&m->chaddr[s.mac_len], 0, sizeof(m->chaddr) - s.mac_len);
   02F4 90s00r17           1159 	mov	dptr,#(_s + 0x0017)
   02F7 E5*00              1160 	mov	a,_bp
   02F9 24 06              1161 	add	a,#0x06
   02FB F8                 1162 	mov	r0,a
   02FC E0                 1163 	movx	a,@dptr
   02FD F6                 1164 	mov	@r0,a
   02FE A3                 1165 	inc	dptr
   02FF E0                 1166 	movx	a,@dptr
   0300 08                 1167 	inc	r0
   0301 F6                 1168 	mov	@r0,a
   0302 E5*00              1169 	mov	a,_bp
   0304 24 06              1170 	add	a,#0x06
   0306 F8                 1171 	mov	r0,a
   0307 74 10              1172 	mov	a,#0x10
   0309 C3                 1173 	clr	c
   030A 96                 1174 	subb	a,@r0
   030B FA                 1175 	mov	r2,a
   030C E4                 1176 	clr	a
   030D 08                 1177 	inc	r0
   030E 96                 1178 	subb	a,@r0
   030F FC                 1179 	mov	r4,a
   0310 E5*00              1180 	mov	a,_bp
   0312 24 06              1181 	add	a,#0x06
   0314 F8                 1182 	mov	r0,a
   0315 E6                 1183 	mov	a,@r0
   0316 2D                 1184 	add	a,r5
   0317 FD                 1185 	mov	r5,a
   0318 08                 1186 	inc	r0
   0319 E6                 1187 	mov	a,@r0
   031A 3E                 1188 	addc	a,r6
   031B FE                 1189 	mov	r6,a
   031C C0 02              1190 	push	ar2
   031E C0 04              1191 	push	ar4
   0320 E4                 1192 	clr	a
   0321 C0 E0              1193 	push	acc
   0323 8D 82              1194 	mov	dpl,r5
   0325 8E 83              1195 	mov	dph,r6
   0327 8F F0              1196 	mov	b,r7
   0329 12s00r00           1197 	lcall	_memset
   032C 15 81              1198 	dec	sp
   032E 15 81              1199 	dec	sp
   0330 15 81              1200 	dec	sp
                           1201 ;	../../core/net/dhcpc.c:159: memset(m->sname, 0, sizeof(m->sname));
   0332 A8*00              1202 	mov	r0,_bp
   0334 08                 1203 	inc	r0
   0335 74 2C              1204 	mov	a,#0x2C
   0337 26                 1205 	add	a,@r0
   0338 FD                 1206 	mov	r5,a
   0339 E4                 1207 	clr	a
   033A 08                 1208 	inc	r0
   033B 36                 1209 	addc	a,@r0
   033C FE                 1210 	mov	r6,a
   033D 08                 1211 	inc	r0
   033E 86 07              1212 	mov	ar7,@r0
   0340 74 40              1213 	mov	a,#0x40
   0342 C0 E0              1214 	push	acc
   0344 E4                 1215 	clr	a
   0345 C0 E0              1216 	push	acc
   0347 E4                 1217 	clr	a
   0348 C0 E0              1218 	push	acc
   034A 8D 82              1219 	mov	dpl,r5
   034C 8E 83              1220 	mov	dph,r6
   034E 8F F0              1221 	mov	b,r7
   0350 12s00r00           1222 	lcall	_memset
   0353 15 81              1223 	dec	sp
   0355 15 81              1224 	dec	sp
   0357 15 81              1225 	dec	sp
                           1226 ;	../../core/net/dhcpc.c:160: memset(m->file, 0, sizeof(m->file));
   0359 A8*00              1227 	mov	r0,_bp
   035B 08                 1228 	inc	r0
   035C 74 6C              1229 	mov	a,#0x6C
   035E 26                 1230 	add	a,@r0
   035F FD                 1231 	mov	r5,a
   0360 E4                 1232 	clr	a
   0361 08                 1233 	inc	r0
   0362 36                 1234 	addc	a,@r0
   0363 FE                 1235 	mov	r6,a
   0364 08                 1236 	inc	r0
   0365 86 07              1237 	mov	ar7,@r0
   0367 74 80              1238 	mov	a,#0x80
   0369 C0 E0              1239 	push	acc
   036B E4                 1240 	clr	a
   036C C0 E0              1241 	push	acc
   036E E4                 1242 	clr	a
   036F C0 E0              1243 	push	acc
   0371 8D 82              1244 	mov	dpl,r5
   0373 8E 83              1245 	mov	dph,r6
   0375 8F F0              1246 	mov	b,r7
   0377 12s00r00           1247 	lcall	_memset
   037A 15 81              1248 	dec	sp
   037C 15 81              1249 	dec	sp
   037E 15 81              1250 	dec	sp
                           1251 ;	../../core/net/dhcpc.c:163: memcpy(m->options, magic_cookie, sizeof(magic_cookie));
   0380 A8*00              1252 	mov	r0,_bp
   0382 08                 1253 	inc	r0
   0383 74 EC              1254 	mov	a,#0xEC
   0385 26                 1255 	add	a,@r0
   0386 FD                 1256 	mov	r5,a
   0387 E4                 1257 	clr	a
   0388 08                 1258 	inc	r0
   0389 36                 1259 	addc	a,@r0
   038A FE                 1260 	mov	r6,a
   038B 08                 1261 	inc	r0
   038C 86 07              1262 	mov	ar7,@r0
   038E 74 04              1263 	mov	a,#0x04
   0390 C0 E0              1264 	push	acc
   0392 E4                 1265 	clr	a
   0393 C0 E0              1266 	push	acc
   0395 74r00              1267 	mov	a,#_magic_cookie
   0397 C0 E0              1268 	push	acc
   0399 74s00              1269 	mov	a,#(_magic_cookie >> 8)
   039B C0 E0              1270 	push	acc
   039D 74 80              1271 	mov	a,#0x80
   039F C0 E0              1272 	push	acc
   03A1 8D 82              1273 	mov	dpl,r5
   03A3 8E 83              1274 	mov	dph,r6
   03A5 8F F0              1275 	mov	b,r7
   03A7 12s00r00           1276 	lcall	_memcpy
   03AA E5 81              1277 	mov	a,sp
   03AC 24 FB              1278 	add	a,#0xfb
   03AE F5 81              1279 	mov	sp,a
   03B0 85*00 81           1280 	mov	sp,_bp
   03B3 D0*00              1281 	pop	_bp
   03B5 22                 1282 	ret
                           1283 ;------------------------------------------------------------
                           1284 ;Allocation info for local variables in function 'send_discover'
                           1285 ;------------------------------------------------------------
                           1286 ;end                       Allocated to registers r5 r6 r7 
                           1287 ;m                         Allocated to registers r5 r6 r7 
                           1288 ;sloc0                     Allocated to stack - _bp +1
                           1289 ;------------------------------------------------------------
                           1290 ;	../../core/net/dhcpc.c:167: send_discover(void)
                           1291 ;	-----------------------------------------
                           1292 ;	 function send_discover
                           1293 ;	-----------------------------------------
   03B6                    1294 _send_discover:
   03B6 C0*00              1295 	push	_bp
   03B8 85 81*00           1296 	mov	_bp,sp
   03BB 05 81              1297 	inc	sp
   03BD 05 81              1298 	inc	sp
   03BF 05 81              1299 	inc	sp
                           1300 ;	../../core/net/dhcpc.c:170: struct dhcp_msg *m = (struct dhcp_msg *)uip_appdata;
   03C1 90s00r00           1301 	mov	dptr,#_uip_appdata
   03C4 E0                 1302 	movx	a,@dptr
   03C5 FD                 1303 	mov	r5,a
   03C6 A3                 1304 	inc	dptr
   03C7 E0                 1305 	movx	a,@dptr
   03C8 FE                 1306 	mov	r6,a
   03C9 A3                 1307 	inc	dptr
   03CA E0                 1308 	movx	a,@dptr
   03CB FF                 1309 	mov	r7,a
                           1310 ;	../../core/net/dhcpc.c:172: create_msg(m);
   03CC 8D 82              1311 	mov	dpl,r5
   03CE 8E 83              1312 	mov	dph,r6
   03D0 8F F0              1313 	mov	b,r7
   03D2 C0 07              1314 	push	ar7
   03D4 C0 06              1315 	push	ar6
   03D6 C0 05              1316 	push	ar5
   03D8 12s01r06           1317 	lcall	_create_msg
   03DB D0 05              1318 	pop	ar5
   03DD D0 06              1319 	pop	ar6
   03DF D0 07              1320 	pop	ar7
                           1321 ;	../../core/net/dhcpc.c:174: end = add_msg_type(&m->options[4], DHCPDISCOVER);
   03E1 74 EC              1322 	mov	a,#0xEC
   03E3 2D                 1323 	add	a,r5
   03E4 FD                 1324 	mov	r5,a
   03E5 E4                 1325 	clr	a
   03E6 3E                 1326 	addc	a,r6
   03E7 FE                 1327 	mov	r6,a
   03E8 74 04              1328 	mov	a,#0x04
   03EA 2D                 1329 	add	a,r5
   03EB FD                 1330 	mov	r5,a
   03EC E4                 1331 	clr	a
   03ED 3E                 1332 	addc	a,r6
   03EE FE                 1333 	mov	r6,a
   03EF 74 01              1334 	mov	a,#0x01
   03F1 C0 E0              1335 	push	acc
   03F3 8D 82              1336 	mov	dpl,r5
   03F5 8E 83              1337 	mov	dph,r6
   03F7 8F F0              1338 	mov	b,r7
   03F9 12s00r00           1339 	lcall	_add_msg_type
   03FC AD 82              1340 	mov	r5,dpl
   03FE AE 83              1341 	mov	r6,dph
   0400 AF F0              1342 	mov	r7,b
   0402 15 81              1343 	dec	sp
                           1344 ;	../../core/net/dhcpc.c:175: end = add_req_options(end);
   0404 8D 82              1345 	mov	dpl,r5
   0406 8E 83              1346 	mov	dph,r6
   0408 8F F0              1347 	mov	b,r7
   040A 12s00rD0           1348 	lcall	_add_req_options
   040D AA 82              1349 	mov	r2,dpl
   040F AB 83              1350 	mov	r3,dph
   0411 AC F0              1351 	mov	r4,b
   0413 8A 05              1352 	mov	ar5,r2
   0415 8B 06              1353 	mov	ar6,r3
   0417 8C 07              1354 	mov	ar7,r4
                           1355 ;	../../core/net/dhcpc.c:176: end = add_end(end);
   0419 8D 82              1356 	mov	dpl,r5
   041B 8E 83              1357 	mov	dph,r6
   041D 8F F0              1358 	mov	b,r7
   041F 12s00rFB           1359 	lcall	_add_end
   0422 A8*00              1360 	mov	r0,_bp
   0424 08                 1361 	inc	r0
   0425 A6 82              1362 	mov	@r0,dpl
   0427 08                 1363 	inc	r0
   0428 A6 83              1364 	mov	@r0,dph
   042A 08                 1365 	inc	r0
   042B A6 F0              1366 	mov	@r0,b
                           1367 ;	../../core/net/dhcpc.c:178: uip_send(uip_appdata, (int)(end - (uint8_t *)uip_appdata));
   042D 90s00r00           1368 	mov	dptr,#_uip_appdata
   0430 E0                 1369 	movx	a,@dptr
   0431 FA                 1370 	mov	r2,a
   0432 A3                 1371 	inc	dptr
   0433 E0                 1372 	movx	a,@dptr
   0434 FB                 1373 	mov	r3,a
   0435 A3                 1374 	inc	dptr
   0436 E0                 1375 	movx	a,@dptr
   0437 FC                 1376 	mov	r4,a
   0438 8A 05              1377 	mov	ar5,r2
   043A 8B 06              1378 	mov	ar6,r3
   043C 8C 07              1379 	mov	ar7,r4
   043E A8*00              1380 	mov	r0,_bp
   0440 08                 1381 	inc	r0
   0441 E6                 1382 	mov	a,@r0
   0442 C3                 1383 	clr	c
   0443 9D                 1384 	subb	a,r5
   0444 FD                 1385 	mov	r5,a
   0445 08                 1386 	inc	r0
   0446 E6                 1387 	mov	a,@r0
   0447 9E                 1388 	subb	a,r6
   0448 FE                 1389 	mov	r6,a
   0449 C0 05              1390 	push	ar5
   044B C0 06              1391 	push	ar6
   044D 8A 82              1392 	mov	dpl,r2
   044F 8B 83              1393 	mov	dph,r3
   0451 8C F0              1394 	mov	b,r4
   0453 12s00r00           1395 	lcall	_uip_send
   0456 15 81              1396 	dec	sp
   0458 15 81              1397 	dec	sp
   045A 85*00 81           1398 	mov	sp,_bp
   045D D0*00              1399 	pop	_bp
   045F 22                 1400 	ret
                           1401 ;------------------------------------------------------------
                           1402 ;Allocation info for local variables in function 'send_request'
                           1403 ;------------------------------------------------------------
                           1404 ;end                       Allocated to registers r5 r6 r7 
                           1405 ;m                         Allocated to registers r5 r6 r7 
                           1406 ;sloc0                     Allocated to stack - _bp +1
                           1407 ;------------------------------------------------------------
                           1408 ;	../../core/net/dhcpc.c:182: send_request(void)
                           1409 ;	-----------------------------------------
                           1410 ;	 function send_request
                           1411 ;	-----------------------------------------
   0460                    1412 _send_request:
   0460 C0*00              1413 	push	_bp
   0462 85 81*00           1414 	mov	_bp,sp
   0465 05 81              1415 	inc	sp
   0467 05 81              1416 	inc	sp
   0469 05 81              1417 	inc	sp
                           1418 ;	../../core/net/dhcpc.c:185: struct dhcp_msg *m = (struct dhcp_msg *)uip_appdata;
   046B 90s00r00           1419 	mov	dptr,#_uip_appdata
   046E E0                 1420 	movx	a,@dptr
   046F FD                 1421 	mov	r5,a
   0470 A3                 1422 	inc	dptr
   0471 E0                 1423 	movx	a,@dptr
   0472 FE                 1424 	mov	r6,a
   0473 A3                 1425 	inc	dptr
   0474 E0                 1426 	movx	a,@dptr
   0475 FF                 1427 	mov	r7,a
                           1428 ;	../../core/net/dhcpc.c:187: create_msg(m);
   0476 8D 82              1429 	mov	dpl,r5
   0478 8E 83              1430 	mov	dph,r6
   047A 8F F0              1431 	mov	b,r7
   047C C0 07              1432 	push	ar7
   047E C0 06              1433 	push	ar6
   0480 C0 05              1434 	push	ar5
   0482 12s01r06           1435 	lcall	_create_msg
   0485 D0 05              1436 	pop	ar5
   0487 D0 06              1437 	pop	ar6
   0489 D0 07              1438 	pop	ar7
                           1439 ;	../../core/net/dhcpc.c:189: end = add_msg_type(&m->options[4], DHCPREQUEST);
   048B 74 EC              1440 	mov	a,#0xEC
   048D 2D                 1441 	add	a,r5
   048E FD                 1442 	mov	r5,a
   048F E4                 1443 	clr	a
   0490 3E                 1444 	addc	a,r6
   0491 FE                 1445 	mov	r6,a
   0492 74 04              1446 	mov	a,#0x04
   0494 2D                 1447 	add	a,r5
   0495 FD                 1448 	mov	r5,a
   0496 E4                 1449 	clr	a
   0497 3E                 1450 	addc	a,r6
   0498 FE                 1451 	mov	r6,a
   0499 74 03              1452 	mov	a,#0x03
   049B C0 E0              1453 	push	acc
   049D 8D 82              1454 	mov	dpl,r5
   049F 8E 83              1455 	mov	dph,r6
   04A1 8F F0              1456 	mov	b,r7
   04A3 12s00r00           1457 	lcall	_add_msg_type
   04A6 AD 82              1458 	mov	r5,dpl
   04A8 AE 83              1459 	mov	r6,dph
   04AA AF F0              1460 	mov	r7,b
   04AC 15 81              1461 	dec	sp
                           1462 ;	../../core/net/dhcpc.c:190: end = add_server_id(end);
   04AE 8D 82              1463 	mov	dpl,r5
   04B0 8E 83              1464 	mov	dph,r6
   04B2 8F F0              1465 	mov	b,r7
   04B4 12s00r26           1466 	lcall	_add_server_id
   04B7 AA 82              1467 	mov	r2,dpl
   04B9 AB 83              1468 	mov	r3,dph
   04BB AC F0              1469 	mov	r4,b
   04BD 8A 05              1470 	mov	ar5,r2
   04BF 8B 06              1471 	mov	ar6,r3
   04C1 8C 07              1472 	mov	ar7,r4
                           1473 ;	../../core/net/dhcpc.c:191: end = add_req_ipaddr(end);
   04C3 8D 82              1474 	mov	dpl,r5
   04C5 8E 83              1475 	mov	dph,r6
   04C7 8F F0              1476 	mov	b,r7
   04C9 12s00r7B           1477 	lcall	_add_req_ipaddr
   04CC AA 82              1478 	mov	r2,dpl
   04CE AB 83              1479 	mov	r3,dph
   04D0 AC F0              1480 	mov	r4,b
   04D2 8A 05              1481 	mov	ar5,r2
   04D4 8B 06              1482 	mov	ar6,r3
   04D6 8C 07              1483 	mov	ar7,r4
                           1484 ;	../../core/net/dhcpc.c:192: end = add_end(end);
   04D8 8D 82              1485 	mov	dpl,r5
   04DA 8E 83              1486 	mov	dph,r6
   04DC 8F F0              1487 	mov	b,r7
   04DE 12s00rFB           1488 	lcall	_add_end
   04E1 A8*00              1489 	mov	r0,_bp
   04E3 08                 1490 	inc	r0
   04E4 A6 82              1491 	mov	@r0,dpl
   04E6 08                 1492 	inc	r0
   04E7 A6 83              1493 	mov	@r0,dph
   04E9 08                 1494 	inc	r0
   04EA A6 F0              1495 	mov	@r0,b
                           1496 ;	../../core/net/dhcpc.c:194: uip_send(uip_appdata, (int)(end - (uint8_t *)uip_appdata));
   04EC 90s00r00           1497 	mov	dptr,#_uip_appdata
   04EF E0                 1498 	movx	a,@dptr
   04F0 FA                 1499 	mov	r2,a
   04F1 A3                 1500 	inc	dptr
   04F2 E0                 1501 	movx	a,@dptr
   04F3 FB                 1502 	mov	r3,a
   04F4 A3                 1503 	inc	dptr
   04F5 E0                 1504 	movx	a,@dptr
   04F6 FC                 1505 	mov	r4,a
   04F7 8A 05              1506 	mov	ar5,r2
   04F9 8B 06              1507 	mov	ar6,r3
   04FB 8C 07              1508 	mov	ar7,r4
   04FD A8*00              1509 	mov	r0,_bp
   04FF 08                 1510 	inc	r0
   0500 E6                 1511 	mov	a,@r0
   0501 C3                 1512 	clr	c
   0502 9D                 1513 	subb	a,r5
   0503 FD                 1514 	mov	r5,a
   0504 08                 1515 	inc	r0
   0505 E6                 1516 	mov	a,@r0
   0506 9E                 1517 	subb	a,r6
   0507 FE                 1518 	mov	r6,a
   0508 C0 05              1519 	push	ar5
   050A C0 06              1520 	push	ar6
   050C 8A 82              1521 	mov	dpl,r2
   050E 8B 83              1522 	mov	dph,r3
   0510 8C F0              1523 	mov	b,r4
   0512 12s00r00           1524 	lcall	_uip_send
   0515 15 81              1525 	dec	sp
   0517 15 81              1526 	dec	sp
   0519 85*00 81           1527 	mov	sp,_bp
   051C D0*00              1528 	pop	_bp
   051E 22                 1529 	ret
                           1530 ;------------------------------------------------------------
                           1531 ;Allocation info for local variables in function 'parse_options'
                           1532 ;------------------------------------------------------------
                           1533 ;len                       Allocated to stack - _bp -4
                           1534 ;optptr                    Allocated to stack - _bp +1
                           1535 ;end                       Allocated to stack - _bp +4
                           1536 ;type                      Allocated to registers r4 
                           1537 ;------------------------------------------------------------
                           1538 ;	../../core/net/dhcpc.c:198: parse_options(uint8_t *optptr, int len)
                           1539 ;	-----------------------------------------
                           1540 ;	 function parse_options
                           1541 ;	-----------------------------------------
   051F                    1542 _parse_options:
   051F C0*00              1543 	push	_bp
   0521 85 81*00           1544 	mov	_bp,sp
   0524 C0 82              1545 	push	dpl
   0526 C0 83              1546 	push	dph
   0528 C0 F0              1547 	push	b
   052A 05 81              1548 	inc	sp
   052C 05 81              1549 	inc	sp
   052E 05 81              1550 	inc	sp
                           1551 ;	../../core/net/dhcpc.c:200: uint8_t *end = optptr + len;
   0530 A8*00              1552 	mov	r0,_bp
   0532 08                 1553 	inc	r0
   0533 E5*00              1554 	mov	a,_bp
   0535 24 FC              1555 	add	a,#0xfc
   0537 F9                 1556 	mov	r1,a
   0538 E7                 1557 	mov	a,@r1
   0539 26                 1558 	add	a,@r0
   053A FA                 1559 	mov	r2,a
   053B 09                 1560 	inc	r1
   053C E7                 1561 	mov	a,@r1
   053D 08                 1562 	inc	r0
   053E 36                 1563 	addc	a,@r0
   053F FB                 1564 	mov	r3,a
   0540 08                 1565 	inc	r0
   0541 86 04              1566 	mov	ar4,@r0
   0543 E5*00              1567 	mov	a,_bp
   0545 24 04              1568 	add	a,#0x04
   0547 F8                 1569 	mov	r0,a
   0548 A6 02              1570 	mov	@r0,ar2
   054A 08                 1571 	inc	r0
   054B A6 03              1572 	mov	@r0,ar3
   054D 08                 1573 	inc	r0
   054E A6 04              1574 	mov	@r0,ar4
                           1575 ;	../../core/net/dhcpc.c:201: uint8_t type = 0;
   0550 7C 00              1576 	mov	r4,#0x00
                           1577 ;	../../core/net/dhcpc.c:203: while(optptr < end) {
   0552                    1578 00109$:
   0552 A8*00              1579 	mov	r0,_bp
   0554 08                 1580 	inc	r0
   0555 E5*00              1581 	mov	a,_bp
   0557 24 04              1582 	add	a,#0x04
   0559 F9                 1583 	mov	r1,a
   055A E7                 1584 	mov	a,@r1
   055B C0 E0              1585 	push	acc
   055D 09                 1586 	inc	r1
   055E E7                 1587 	mov	a,@r1
   055F C0 E0              1588 	push	acc
   0561 09                 1589 	inc	r1
   0562 E7                 1590 	mov	a,@r1
   0563 C0 E0              1591 	push	acc
   0565 86 82              1592 	mov	dpl,@r0
   0567 08                 1593 	inc	r0
   0568 86 83              1594 	mov	dph,@r0
   056A 08                 1595 	inc	r0
   056B 86 F0              1596 	mov	b,@r0
   056D 12s00r00           1597 	lcall	___gptr_cmp
   0570 15 81              1598 	dec	sp
   0572 15 81              1599 	dec	sp
   0574 15 81              1600 	dec	sp
   0576 40 03              1601 	jc	00132$
   0578 02s06rFA           1602 	ljmp	00111$
   057B                    1603 00132$:
                           1604 ;	../../core/net/dhcpc.c:204: switch(*optptr) {
   057B A8*00              1605 	mov	r0,_bp
   057D 08                 1606 	inc	r0
   057E 86 82              1607 	mov	dpl,@r0
   0580 08                 1608 	inc	r0
   0581 86 83              1609 	mov	dph,@r0
   0583 08                 1610 	inc	r0
   0584 86 F0              1611 	mov	b,@r0
   0586 12s00r00           1612 	lcall	__gptrget
   0589 FB                 1613 	mov	r3,a
   058A BB 01 02           1614 	cjne	r3,#0x01,00133$
   058D 80 26              1615 	sjmp	00101$
   058F                    1616 00133$:
   058F BB 03 02           1617 	cjne	r3,#0x03,00134$
   0592 80 56              1618 	sjmp	00102$
   0594                    1619 00134$:
   0594 BB 06 03           1620 	cjne	r3,#0x06,00135$
   0597 02s06r1F           1621 	ljmp	00103$
   059A                    1622 00135$:
   059A BB 33 03           1623 	cjne	r3,#0x33,00136$
   059D 02s06r9F           1624 	ljmp	00106$
   05A0                    1625 00136$:
   05A0 BB 35 03           1626 	cjne	r3,#0x35,00137$
   05A3 02s06r54           1627 	ljmp	00104$
   05A6                    1628 00137$:
   05A6 BB 36 03           1629 	cjne	r3,#0x36,00138$
   05A9 02s06r6F           1630 	ljmp	00105$
   05AC                    1631 00138$:
   05AC BB FF 03           1632 	cjne	r3,#0xFF,00139$
   05AF 02s06rCF           1633 	ljmp	00107$
   05B2                    1634 00139$:
   05B2 02s06rD3           1635 	ljmp	00108$
                           1636 ;	../../core/net/dhcpc.c:205: case DHCP_OPTION_SUBNET_MASK:
   05B5                    1637 00101$:
                           1638 ;	../../core/net/dhcpc.c:206: memcpy(s.netmask.u16, optptr + 2, 4);
   05B5 C0 04              1639 	push	ar4
   05B7 A8*00              1640 	mov	r0,_bp
   05B9 08                 1641 	inc	r0
   05BA 74 02              1642 	mov	a,#0x02
   05BC 26                 1643 	add	a,@r0
   05BD FA                 1644 	mov	r2,a
   05BE E4                 1645 	clr	a
   05BF 08                 1646 	inc	r0
   05C0 36                 1647 	addc	a,@r0
   05C1 FB                 1648 	mov	r3,a
   05C2 08                 1649 	inc	r0
   05C3 86 04              1650 	mov	ar4,@r0
   05C5 C0 04              1651 	push	ar4
   05C7 74 04              1652 	mov	a,#0x04
   05C9 C0 E0              1653 	push	acc
   05CB E4                 1654 	clr	a
   05CC C0 E0              1655 	push	acc
   05CE C0 02              1656 	push	ar2
   05D0 C0 03              1657 	push	ar3
   05D2 C0 04              1658 	push	ar4
   05D4 90s00r25           1659 	mov	dptr,#(_s + 0x0025)
   05D7 75 F0 00           1660 	mov	b,#0x00
   05DA 12s00r00           1661 	lcall	_memcpy
   05DD E5 81              1662 	mov	a,sp
   05DF 24 FB              1663 	add	a,#0xfb
   05E1 F5 81              1664 	mov	sp,a
   05E3 D0 04              1665 	pop	ar4
                           1666 ;	../../core/net/dhcpc.c:207: break;
   05E5 D0 04              1667 	pop	ar4
   05E7 02s06rD3           1668 	ljmp	00108$
                           1669 ;	../../core/net/dhcpc.c:208: case DHCP_OPTION_ROUTER:
   05EA                    1670 00102$:
                           1671 ;	../../core/net/dhcpc.c:209: memcpy(s.default_router.u16, optptr + 2, 4);
   05EA C0 04              1672 	push	ar4
   05EC A8*00              1673 	mov	r0,_bp
   05EE 08                 1674 	inc	r0
   05EF 74 02              1675 	mov	a,#0x02
   05F1 26                 1676 	add	a,@r0
   05F2 FA                 1677 	mov	r2,a
   05F3 E4                 1678 	clr	a
   05F4 08                 1679 	inc	r0
   05F5 36                 1680 	addc	a,@r0
   05F6 FB                 1681 	mov	r3,a
   05F7 08                 1682 	inc	r0
   05F8 86 04              1683 	mov	ar4,@r0
   05FA C0 04              1684 	push	ar4
   05FC 74 04              1685 	mov	a,#0x04
   05FE C0 E0              1686 	push	acc
   0600 E4                 1687 	clr	a
   0601 C0 E0              1688 	push	acc
   0603 C0 02              1689 	push	ar2
   0605 C0 03              1690 	push	ar3
   0607 C0 04              1691 	push	ar4
   0609 90s00r2D           1692 	mov	dptr,#(_s + 0x002d)
   060C 75 F0 00           1693 	mov	b,#0x00
   060F 12s00r00           1694 	lcall	_memcpy
   0612 E5 81              1695 	mov	a,sp
   0614 24 FB              1696 	add	a,#0xfb
   0616 F5 81              1697 	mov	sp,a
   0618 D0 04              1698 	pop	ar4
                           1699 ;	../../core/net/dhcpc.c:210: break;
   061A D0 04              1700 	pop	ar4
   061C 02s06rD3           1701 	ljmp	00108$
                           1702 ;	../../core/net/dhcpc.c:211: case DHCP_OPTION_DNS_SERVER:
   061F                    1703 00103$:
                           1704 ;	../../core/net/dhcpc.c:212: memcpy(s.dnsaddr.u16, optptr + 2, 4);
   061F C0 04              1705 	push	ar4
   0621 A8*00              1706 	mov	r0,_bp
   0623 08                 1707 	inc	r0
   0624 74 02              1708 	mov	a,#0x02
   0626 26                 1709 	add	a,@r0
   0627 FA                 1710 	mov	r2,a
   0628 E4                 1711 	clr	a
   0629 08                 1712 	inc	r0
   062A 36                 1713 	addc	a,@r0
   062B FB                 1714 	mov	r3,a
   062C 08                 1715 	inc	r0
   062D 86 04              1716 	mov	ar4,@r0
   062F C0 04              1717 	push	ar4
   0631 74 04              1718 	mov	a,#0x04
   0633 C0 E0              1719 	push	acc
   0635 E4                 1720 	clr	a
   0636 C0 E0              1721 	push	acc
   0638 C0 02              1722 	push	ar2
   063A C0 03              1723 	push	ar3
   063C C0 04              1724 	push	ar4
   063E 90s00r29           1725 	mov	dptr,#(_s + 0x0029)
   0641 75 F0 00           1726 	mov	b,#0x00
   0644 12s00r00           1727 	lcall	_memcpy
   0647 E5 81              1728 	mov	a,sp
   0649 24 FB              1729 	add	a,#0xfb
   064B F5 81              1730 	mov	sp,a
   064D D0 04              1731 	pop	ar4
                           1732 ;	../../core/net/dhcpc.c:213: break;
   064F D0 04              1733 	pop	ar4
   0651 02s06rD3           1734 	ljmp	00108$
                           1735 ;	../../core/net/dhcpc.c:214: case DHCP_OPTION_MSG_TYPE:
   0654                    1736 00104$:
                           1737 ;	../../core/net/dhcpc.c:215: type = *(optptr + 2);
   0654 A8*00              1738 	mov	r0,_bp
   0656 08                 1739 	inc	r0
   0657 74 02              1740 	mov	a,#0x02
   0659 26                 1741 	add	a,@r0
   065A FA                 1742 	mov	r2,a
   065B E4                 1743 	clr	a
   065C 08                 1744 	inc	r0
   065D 36                 1745 	addc	a,@r0
   065E FB                 1746 	mov	r3,a
   065F 08                 1747 	inc	r0
   0660 86 07              1748 	mov	ar7,@r0
   0662 8A 82              1749 	mov	dpl,r2
   0664 8B 83              1750 	mov	dph,r3
   0666 8F F0              1751 	mov	b,r7
   0668 12s00r00           1752 	lcall	__gptrget
   066B FA                 1753 	mov	r2,a
   066C FC                 1754 	mov	r4,a
                           1755 ;	../../core/net/dhcpc.c:216: break;
                           1756 ;	../../core/net/dhcpc.c:217: case DHCP_OPTION_SERVER_ID:
   066D 80 64              1757 	sjmp	00108$
   066F                    1758 00105$:
                           1759 ;	../../core/net/dhcpc.c:218: memcpy(s.serverid, optptr + 2, 4);
   066F A8*00              1760 	mov	r0,_bp
   0671 08                 1761 	inc	r0
   0672 74 02              1762 	mov	a,#0x02
   0674 26                 1763 	add	a,@r0
   0675 FD                 1764 	mov	r5,a
   0676 E4                 1765 	clr	a
   0677 08                 1766 	inc	r0
   0678 36                 1767 	addc	a,@r0
   0679 FE                 1768 	mov	r6,a
   067A 08                 1769 	inc	r0
   067B 86 07              1770 	mov	ar7,@r0
   067D C0 04              1771 	push	ar4
   067F 74 04              1772 	mov	a,#0x04
   0681 C0 E0              1773 	push	acc
   0683 E4                 1774 	clr	a
   0684 C0 E0              1775 	push	acc
   0686 C0 05              1776 	push	ar5
   0688 C0 06              1777 	push	ar6
   068A C0 07              1778 	push	ar7
   068C 90s00r19           1779 	mov	dptr,#(_s + 0x0019)
   068F 75 F0 00           1780 	mov	b,#0x00
   0692 12s00r00           1781 	lcall	_memcpy
   0695 E5 81              1782 	mov	a,sp
   0697 24 FB              1783 	add	a,#0xfb
   0699 F5 81              1784 	mov	sp,a
   069B D0 04              1785 	pop	ar4
                           1786 ;	../../core/net/dhcpc.c:219: break;
                           1787 ;	../../core/net/dhcpc.c:220: case DHCP_OPTION_LEASE_TIME:
   069D 80 34              1788 	sjmp	00108$
   069F                    1789 00106$:
                           1790 ;	../../core/net/dhcpc.c:221: memcpy(s.lease_time, optptr + 2, 4);
   069F A8*00              1791 	mov	r0,_bp
   06A1 08                 1792 	inc	r0
   06A2 74 02              1793 	mov	a,#0x02
   06A4 26                 1794 	add	a,@r0
   06A5 FD                 1795 	mov	r5,a
   06A6 E4                 1796 	clr	a
   06A7 08                 1797 	inc	r0
   06A8 36                 1798 	addc	a,@r0
   06A9 FE                 1799 	mov	r6,a
   06AA 08                 1800 	inc	r0
   06AB 86 07              1801 	mov	ar7,@r0
   06AD C0 04              1802 	push	ar4
   06AF 74 04              1803 	mov	a,#0x04
   06B1 C0 E0              1804 	push	acc
   06B3 E4                 1805 	clr	a
   06B4 C0 E0              1806 	push	acc
   06B6 C0 05              1807 	push	ar5
   06B8 C0 06              1808 	push	ar6
   06BA C0 07              1809 	push	ar7
   06BC 90s00r1D           1810 	mov	dptr,#(_s + 0x001d)
   06BF 75 F0 00           1811 	mov	b,#0x00
   06C2 12s00r00           1812 	lcall	_memcpy
   06C5 E5 81              1813 	mov	a,sp
   06C7 24 FB              1814 	add	a,#0xfb
   06C9 F5 81              1815 	mov	sp,a
   06CB D0 04              1816 	pop	ar4
                           1817 ;	../../core/net/dhcpc.c:222: break;
                           1818 ;	../../core/net/dhcpc.c:223: case DHCP_OPTION_END:
   06CD 80 04              1819 	sjmp	00108$
   06CF                    1820 00107$:
                           1821 ;	../../core/net/dhcpc.c:224: return type;
   06CF 8C 82              1822 	mov	dpl,r4
                           1823 ;	../../core/net/dhcpc.c:225: }
   06D1 80 29              1824 	sjmp	00112$
   06D3                    1825 00108$:
                           1826 ;	../../core/net/dhcpc.c:227: optptr += optptr[1] + 2;
   06D3 A8*00              1827 	mov	r0,_bp
   06D5 08                 1828 	inc	r0
   06D6 74 01              1829 	mov	a,#0x01
   06D8 26                 1830 	add	a,@r0
   06D9 FD                 1831 	mov	r5,a
   06DA E4                 1832 	clr	a
   06DB 08                 1833 	inc	r0
   06DC 36                 1834 	addc	a,@r0
   06DD FE                 1835 	mov	r6,a
   06DE 08                 1836 	inc	r0
   06DF 86 07              1837 	mov	ar7,@r0
   06E1 8D 82              1838 	mov	dpl,r5
   06E3 8E 83              1839 	mov	dph,r6
   06E5 8F F0              1840 	mov	b,r7
   06E7 12s00r00           1841 	lcall	__gptrget
   06EA FD                 1842 	mov	r5,a
   06EB 0D                 1843 	inc	r5
   06EC 0D                 1844 	inc	r5
   06ED A8*00              1845 	mov	r0,_bp
   06EF 08                 1846 	inc	r0
   06F0 ED                 1847 	mov	a,r5
   06F1 26                 1848 	add	a,@r0
   06F2 F6                 1849 	mov	@r0,a
   06F3 E4                 1850 	clr	a
   06F4 08                 1851 	inc	r0
   06F5 36                 1852 	addc	a,@r0
   06F6 F6                 1853 	mov	@r0,a
   06F7 02s05r52           1854 	ljmp	00109$
   06FA                    1855 00111$:
                           1856 ;	../../core/net/dhcpc.c:229: return type;
   06FA 8C 82              1857 	mov	dpl,r4
   06FC                    1858 00112$:
   06FC 85*00 81           1859 	mov	sp,_bp
   06FF D0*00              1860 	pop	_bp
   0701 22                 1861 	ret
                           1862 ;------------------------------------------------------------
                           1863 ;Allocation info for local variables in function 'parse_msg'
                           1864 ;------------------------------------------------------------
                           1865 ;m                         Allocated to stack - _bp +1
                           1866 ;sloc0                     Allocated to stack - _bp +4
                           1867 ;------------------------------------------------------------
                           1868 ;	../../core/net/dhcpc.c:233: parse_msg(void)
                           1869 ;	-----------------------------------------
                           1870 ;	 function parse_msg
                           1871 ;	-----------------------------------------
   0702                    1872 _parse_msg:
   0702 C0*00              1873 	push	_bp
   0704 E5 81              1874 	mov	a,sp
   0706 F5*00              1875 	mov	_bp,a
   0708 24 05              1876 	add	a,#0x05
   070A F5 81              1877 	mov	sp,a
                           1878 ;	../../core/net/dhcpc.c:235: struct dhcp_msg *m = (struct dhcp_msg *)uip_appdata;
   070C 90s00r00           1879 	mov	dptr,#_uip_appdata
   070F E0                 1880 	movx	a,@dptr
   0710 FD                 1881 	mov	r5,a
   0711 A3                 1882 	inc	dptr
   0712 E0                 1883 	movx	a,@dptr
   0713 FE                 1884 	mov	r6,a
   0714 A3                 1885 	inc	dptr
   0715 E0                 1886 	movx	a,@dptr
   0716 FF                 1887 	mov	r7,a
   0717 A8*00              1888 	mov	r0,_bp
   0719 08                 1889 	inc	r0
   071A A6 05              1890 	mov	@r0,ar5
   071C 08                 1891 	inc	r0
   071D A6 06              1892 	mov	@r0,ar6
   071F 08                 1893 	inc	r0
   0720 A6 07              1894 	mov	@r0,ar7
                           1895 ;	../../core/net/dhcpc.c:237: if(m->op == DHCP_REPLY &&
   0722 A8*00              1896 	mov	r0,_bp
   0724 08                 1897 	inc	r0
   0725 86 82              1898 	mov	dpl,@r0
   0727 08                 1899 	inc	r0
   0728 86 83              1900 	mov	dph,@r0
   072A 08                 1901 	inc	r0
   072B 86 F0              1902 	mov	b,@r0
   072D 12s00r00           1903 	lcall	__gptrget
   0730 FC                 1904 	mov	r4,a
   0731 BC 02 02           1905 	cjne	r4,#0x02,00113$
   0734 80 03              1906 	sjmp	00114$
   0736                    1907 00113$:
   0736 02s08r25           1908 	ljmp	00102$
   0739                    1909 00114$:
                           1910 ;	../../core/net/dhcpc.c:238: memcmp(m->xid, &xid, sizeof(xid)) == 0 &&
   0739 A8*00              1911 	mov	r0,_bp
   073B 08                 1912 	inc	r0
   073C 74 04              1913 	mov	a,#0x04
   073E 26                 1914 	add	a,@r0
   073F FA                 1915 	mov	r2,a
   0740 E4                 1916 	clr	a
   0741 08                 1917 	inc	r0
   0742 36                 1918 	addc	a,@r0
   0743 FB                 1919 	mov	r3,a
   0744 08                 1920 	inc	r0
   0745 86 04              1921 	mov	ar4,@r0
   0747 74 04              1922 	mov	a,#0x04
   0749 C0 E0              1923 	push	acc
   074B E4                 1924 	clr	a
   074C C0 E0              1925 	push	acc
   074E 74r31              1926 	mov	a,#_xid
   0750 C0 E0              1927 	push	acc
   0752 74s00              1928 	mov	a,#(_xid >> 8)
   0754 C0 E0              1929 	push	acc
   0756 E4                 1930 	clr	a
   0757 C0 E0              1931 	push	acc
   0759 8A 82              1932 	mov	dpl,r2
   075B 8B 83              1933 	mov	dph,r3
   075D 8C F0              1934 	mov	b,r4
   075F 12s00r00           1935 	lcall	_memcmp
   0762 AB 82              1936 	mov	r3,dpl
   0764 AC 83              1937 	mov	r4,dph
   0766 E5 81              1938 	mov	a,sp
   0768 24 FB              1939 	add	a,#0xfb
   076A F5 81              1940 	mov	sp,a
   076C EB                 1941 	mov	a,r3
   076D 4C                 1942 	orl	a,r4
   076E 60 03              1943 	jz	00115$
   0770 02s08r25           1944 	ljmp	00102$
   0773                    1945 00115$:
                           1946 ;	../../core/net/dhcpc.c:239: memcmp(m->chaddr, s.mac_addr, s.mac_len) == 0) {
   0773 90s00r17           1947 	mov	dptr,#(_s + 0x0017)
   0776 E0                 1948 	movx	a,@dptr
   0777 FB                 1949 	mov	r3,a
   0778 A3                 1950 	inc	dptr
   0779 E0                 1951 	movx	a,@dptr
   077A FC                 1952 	mov	r4,a
   077B E5*00              1953 	mov	a,_bp
   077D 24 04              1954 	add	a,#0x04
   077F F8                 1955 	mov	r0,a
   0780 A6 03              1956 	mov	@r0,ar3
   0782 08                 1957 	inc	r0
   0783 A6 04              1958 	mov	@r0,ar4
   0785 90s00r14           1959 	mov	dptr,#(_s + 0x0014)
   0788 E0                 1960 	movx	a,@dptr
   0789 FA                 1961 	mov	r2,a
   078A A3                 1962 	inc	dptr
   078B E0                 1963 	movx	a,@dptr
   078C FE                 1964 	mov	r6,a
   078D A3                 1965 	inc	dptr
   078E E0                 1966 	movx	a,@dptr
   078F FF                 1967 	mov	r7,a
   0790 A8*00              1968 	mov	r0,_bp
   0792 08                 1969 	inc	r0
   0793 74 1C              1970 	mov	a,#0x1C
   0795 26                 1971 	add	a,@r0
   0796 FB                 1972 	mov	r3,a
   0797 E4                 1973 	clr	a
   0798 08                 1974 	inc	r0
   0799 36                 1975 	addc	a,@r0
   079A FC                 1976 	mov	r4,a
   079B 08                 1977 	inc	r0
   079C 86 05              1978 	mov	ar5,@r0
   079E E5*00              1979 	mov	a,_bp
   07A0 24 04              1980 	add	a,#0x04
   07A2 F8                 1981 	mov	r0,a
   07A3 E6                 1982 	mov	a,@r0
   07A4 C0 E0              1983 	push	acc
   07A6 08                 1984 	inc	r0
   07A7 E6                 1985 	mov	a,@r0
   07A8 C0 E0              1986 	push	acc
   07AA C0 02              1987 	push	ar2
   07AC C0 06              1988 	push	ar6
   07AE C0 07              1989 	push	ar7
   07B0 8B 82              1990 	mov	dpl,r3
   07B2 8C 83              1991 	mov	dph,r4
   07B4 8D F0              1992 	mov	b,r5
   07B6 12s00r00           1993 	lcall	_memcmp
   07B9 AE 82              1994 	mov	r6,dpl
   07BB AF 83              1995 	mov	r7,dph
   07BD E5 81              1996 	mov	a,sp
   07BF 24 FB              1997 	add	a,#0xfb
   07C1 F5 81              1998 	mov	sp,a
   07C3 EE                 1999 	mov	a,r6
   07C4 4F                 2000 	orl	a,r7
   07C5 70 5E              2001 	jnz	00102$
                           2002 ;	../../core/net/dhcpc.c:240: memcpy(s.ipaddr.u16, m->yiaddr, 4);
   07C7 A8*00              2003 	mov	r0,_bp
   07C9 08                 2004 	inc	r0
   07CA 74 10              2005 	mov	a,#0x10
   07CC 26                 2006 	add	a,@r0
   07CD FD                 2007 	mov	r5,a
   07CE E4                 2008 	clr	a
   07CF 08                 2009 	inc	r0
   07D0 36                 2010 	addc	a,@r0
   07D1 FE                 2011 	mov	r6,a
   07D2 08                 2012 	inc	r0
   07D3 86 07              2013 	mov	ar7,@r0
   07D5 74 04              2014 	mov	a,#0x04
   07D7 C0 E0              2015 	push	acc
   07D9 E4                 2016 	clr	a
   07DA C0 E0              2017 	push	acc
   07DC C0 05              2018 	push	ar5
   07DE C0 06              2019 	push	ar6
   07E0 C0 07              2020 	push	ar7
   07E2 90s00r21           2021 	mov	dptr,#(_s + 0x0021)
   07E5 75 F0 00           2022 	mov	b,#0x00
   07E8 12s00r00           2023 	lcall	_memcpy
   07EB E5 81              2024 	mov	a,sp
   07ED 24 FB              2025 	add	a,#0xfb
   07EF F5 81              2026 	mov	sp,a
                           2027 ;	../../core/net/dhcpc.c:241: return parse_options(&m->options[4], uip_datalen());
   07F1 90s00r00           2028 	mov	dptr,#_uip_len
   07F4 E0                 2029 	movx	a,@dptr
   07F5 FE                 2030 	mov	r6,a
   07F6 A3                 2031 	inc	dptr
   07F7 E0                 2032 	movx	a,@dptr
   07F8 FF                 2033 	mov	r7,a
   07F9 A8*00              2034 	mov	r0,_bp
   07FB 08                 2035 	inc	r0
   07FC 74 EC              2036 	mov	a,#0xEC
   07FE 26                 2037 	add	a,@r0
   07FF FB                 2038 	mov	r3,a
   0800 E4                 2039 	clr	a
   0801 08                 2040 	inc	r0
   0802 36                 2041 	addc	a,@r0
   0803 FC                 2042 	mov	r4,a
   0804 08                 2043 	inc	r0
   0805 86 05              2044 	mov	ar5,@r0
   0807 74 04              2045 	mov	a,#0x04
   0809 2B                 2046 	add	a,r3
   080A FB                 2047 	mov	r3,a
   080B E4                 2048 	clr	a
   080C 3C                 2049 	addc	a,r4
   080D FC                 2050 	mov	r4,a
   080E C0 06              2051 	push	ar6
   0810 C0 07              2052 	push	ar7
   0812 8B 82              2053 	mov	dpl,r3
   0814 8C 83              2054 	mov	dph,r4
   0816 8D F0              2055 	mov	b,r5
   0818 12s05r1F           2056 	lcall	_parse_options
   081B AF 82              2057 	mov	r7,dpl
   081D 15 81              2058 	dec	sp
   081F 15 81              2059 	dec	sp
   0821 8F 82              2060 	mov	dpl,r7
   0823 80 03              2061 	sjmp	00105$
   0825                    2062 00102$:
                           2063 ;	../../core/net/dhcpc.c:243: return 0;
   0825 75 82 00           2064 	mov	dpl,#0x00
   0828                    2065 00105$:
   0828 85*00 81           2066 	mov	sp,_bp
   082B D0*00              2067 	pop	_bp
   082D 22                 2068 	ret
                           2069 ;------------------------------------------------------------
                           2070 ;Allocation info for local variables in function 'msg_for_me'
                           2071 ;------------------------------------------------------------
                           2072 ;m                         Allocated to stack - _bp +1
                           2073 ;optptr                    Allocated to stack - _bp +4
                           2074 ;end                       Allocated to registers r5 r6 r7 
                           2075 ;sloc0                     Allocated to stack - _bp +7
                           2076 ;sloc1                     Allocated to stack - _bp +12
                           2077 ;------------------------------------------------------------
                           2078 ;	../../core/net/dhcpc.c:250: msg_for_me(void)
                           2079 ;	-----------------------------------------
                           2080 ;	 function msg_for_me
                           2081 ;	-----------------------------------------
   082E                    2082 _msg_for_me:
   082E C0*00              2083 	push	_bp
   0830 E5 81              2084 	mov	a,sp
   0832 F5*00              2085 	mov	_bp,a
   0834 24 08              2086 	add	a,#0x08
   0836 F5 81              2087 	mov	sp,a
                           2088 ;	../../core/net/dhcpc.c:252: struct dhcp_msg *m = (struct dhcp_msg *)uip_appdata;
   0838 90s00r00           2089 	mov	dptr,#_uip_appdata
   083B E0                 2090 	movx	a,@dptr
   083C FD                 2091 	mov	r5,a
   083D A3                 2092 	inc	dptr
   083E E0                 2093 	movx	a,@dptr
   083F FE                 2094 	mov	r6,a
   0840 A3                 2095 	inc	dptr
   0841 E0                 2096 	movx	a,@dptr
   0842 FF                 2097 	mov	r7,a
   0843 A8*00              2098 	mov	r0,_bp
   0845 08                 2099 	inc	r0
   0846 A6 05              2100 	mov	@r0,ar5
   0848 08                 2101 	inc	r0
   0849 A6 06              2102 	mov	@r0,ar6
   084B 08                 2103 	inc	r0
   084C A6 07              2104 	mov	@r0,ar7
                           2105 ;	../../core/net/dhcpc.c:253: uint8_t *optptr = &m->options[4];
   084E A8*00              2106 	mov	r0,_bp
   0850 08                 2107 	inc	r0
   0851 E5*00              2108 	mov	a,_bp
   0853 24 04              2109 	add	a,#0x04
   0855 F9                 2110 	mov	r1,a
   0856 74 F0              2111 	mov	a,#0xF0
   0858 26                 2112 	add	a,@r0
   0859 F7                 2113 	mov	@r1,a
   085A E4                 2114 	clr	a
   085B 08                 2115 	inc	r0
   085C 36                 2116 	addc	a,@r0
   085D 09                 2117 	inc	r1
   085E F7                 2118 	mov	@r1,a
   085F 08                 2119 	inc	r0
   0860 09                 2120 	inc	r1
   0861 E6                 2121 	mov	a,@r0
   0862 F7                 2122 	mov	@r1,a
                           2123 ;	../../core/net/dhcpc.c:254: uint8_t *end = (uint8_t*)uip_appdata + uip_datalen();
   0863 90s00r00           2124 	mov	dptr,#_uip_len
   0866 E0                 2125 	movx	a,@dptr
   0867 FB                 2126 	mov	r3,a
   0868 A3                 2127 	inc	dptr
   0869 E0                 2128 	movx	a,@dptr
   086A FC                 2129 	mov	r4,a
   086B EB                 2130 	mov	a,r3
   086C 2D                 2131 	add	a,r5
   086D FD                 2132 	mov	r5,a
   086E EC                 2133 	mov	a,r4
   086F 3E                 2134 	addc	a,r6
   0870 FE                 2135 	mov	r6,a
                           2136 ;	../../core/net/dhcpc.c:256: if(m->op == DHCP_REPLY &&
   0871 A8*00              2137 	mov	r0,_bp
   0873 08                 2138 	inc	r0
   0874 86 82              2139 	mov	dpl,@r0
   0876 08                 2140 	inc	r0
   0877 86 83              2141 	mov	dph,@r0
   0879 08                 2142 	inc	r0
   087A 86 F0              2143 	mov	b,@r0
   087C 12s00r00           2144 	lcall	__gptrget
   087F FC                 2145 	mov	r4,a
   0880 BC 02 02           2146 	cjne	r4,#0x02,00127$
   0883 80 03              2147 	sjmp	00128$
   0885                    2148 00127$:
   0885 02s09rBC           2149 	ljmp	00110$
   0888                    2150 00128$:
                           2151 ;	../../core/net/dhcpc.c:257: memcmp(m->xid, &xid, sizeof(xid)) == 0 &&
   0888 A8*00              2152 	mov	r0,_bp
   088A 08                 2153 	inc	r0
   088B 74 04              2154 	mov	a,#0x04
   088D 26                 2155 	add	a,@r0
   088E FA                 2156 	mov	r2,a
   088F E4                 2157 	clr	a
   0890 08                 2158 	inc	r0
   0891 36                 2159 	addc	a,@r0
   0892 FB                 2160 	mov	r3,a
   0893 08                 2161 	inc	r0
   0894 86 04              2162 	mov	ar4,@r0
   0896 C0 07              2163 	push	ar7
   0898 C0 06              2164 	push	ar6
   089A C0 05              2165 	push	ar5
   089C 74 04              2166 	mov	a,#0x04
   089E C0 E0              2167 	push	acc
   08A0 E4                 2168 	clr	a
   08A1 C0 E0              2169 	push	acc
   08A3 74r31              2170 	mov	a,#_xid
   08A5 C0 E0              2171 	push	acc
   08A7 74s00              2172 	mov	a,#(_xid >> 8)
   08A9 C0 E0              2173 	push	acc
   08AB E4                 2174 	clr	a
   08AC C0 E0              2175 	push	acc
   08AE 8A 82              2176 	mov	dpl,r2
   08B0 8B 83              2177 	mov	dph,r3
   08B2 8C F0              2178 	mov	b,r4
   08B4 12s00r00           2179 	lcall	_memcmp
   08B7 AB 82              2180 	mov	r3,dpl
   08B9 AC 83              2181 	mov	r4,dph
   08BB E5 81              2182 	mov	a,sp
   08BD 24 FB              2183 	add	a,#0xfb
   08BF F5 81              2184 	mov	sp,a
   08C1 D0 05              2185 	pop	ar5
   08C3 D0 06              2186 	pop	ar6
   08C5 D0 07              2187 	pop	ar7
   08C7 EB                 2188 	mov	a,r3
   08C8 4C                 2189 	orl	a,r4
   08C9 60 03              2190 	jz	00129$
   08CB 02s09rBC           2191 	ljmp	00110$
   08CE                    2192 00129$:
                           2193 ;	../../core/net/dhcpc.c:258: memcmp(m->chaddr, s.mac_addr, s.mac_len) == 0) {
   08CE C0 05              2194 	push	ar5
   08D0 C0 06              2195 	push	ar6
   08D2 C0 07              2196 	push	ar7
   08D4 90s00r17           2197 	mov	dptr,#(_s + 0x0017)
   08D7 E0                 2198 	movx	a,@dptr
   08D8 FB                 2199 	mov	r3,a
   08D9 A3                 2200 	inc	dptr
   08DA E0                 2201 	movx	a,@dptr
   08DB FC                 2202 	mov	r4,a
   08DC E5*00              2203 	mov	a,_bp
   08DE 24 07              2204 	add	a,#0x07
   08E0 F8                 2205 	mov	r0,a
   08E1 A6 03              2206 	mov	@r0,ar3
   08E3 08                 2207 	inc	r0
   08E4 A6 04              2208 	mov	@r0,ar4
   08E6 90s00r14           2209 	mov	dptr,#(_s + 0x0014)
   08E9 E0                 2210 	movx	a,@dptr
   08EA FA                 2211 	mov	r2,a
   08EB A3                 2212 	inc	dptr
   08EC E0                 2213 	movx	a,@dptr
   08ED FE                 2214 	mov	r6,a
   08EE A3                 2215 	inc	dptr
   08EF E0                 2216 	movx	a,@dptr
   08F0 FF                 2217 	mov	r7,a
   08F1 A8*00              2218 	mov	r0,_bp
   08F3 08                 2219 	inc	r0
   08F4 74 1C              2220 	mov	a,#0x1C
   08F6 26                 2221 	add	a,@r0
   08F7 FB                 2222 	mov	r3,a
   08F8 E4                 2223 	clr	a
   08F9 08                 2224 	inc	r0
   08FA 36                 2225 	addc	a,@r0
   08FB FC                 2226 	mov	r4,a
   08FC 08                 2227 	inc	r0
   08FD 86 05              2228 	mov	ar5,@r0
   08FF C0 05              2229 	push	ar5
   0901 E5*00              2230 	mov	a,_bp
   0903 24 07              2231 	add	a,#0x07
   0905 F8                 2232 	mov	r0,a
   0906 E6                 2233 	mov	a,@r0
   0907 C0 E0              2234 	push	acc
   0909 08                 2235 	inc	r0
   090A E6                 2236 	mov	a,@r0
   090B C0 E0              2237 	push	acc
   090D C0 02              2238 	push	ar2
   090F C0 06              2239 	push	ar6
   0911 C0 07              2240 	push	ar7
   0913 8B 82              2241 	mov	dpl,r3
   0915 8C 83              2242 	mov	dph,r4
   0917 8D F0              2243 	mov	b,r5
   0919 12s00r00           2244 	lcall	_memcmp
   091C AE 82              2245 	mov	r6,dpl
   091E AF 83              2246 	mov	r7,dph
   0920 E5 81              2247 	mov	a,sp
   0922 24 FB              2248 	add	a,#0xfb
   0924 F5 81              2249 	mov	sp,a
   0926 D0 05              2250 	pop	ar5
   0928 EE                 2251 	mov	a,r6
   0929 4F                 2252 	orl	a,r7
   092A D0 07              2253 	pop	ar7
   092C D0 06              2254 	pop	ar6
   092E D0 05              2255 	pop	ar5
   0930 60 03              2256 	jz	00130$
   0932 02s09rBC           2257 	ljmp	00110$
   0935                    2258 00130$:
                           2259 ;	../../core/net/dhcpc.c:259: while(optptr < end) {
   0935                    2260 00106$:
   0935 E5*00              2261 	mov	a,_bp
   0937 24 04              2262 	add	a,#0x04
   0939 F8                 2263 	mov	r0,a
   093A C0 05              2264 	push	ar5
   093C C0 06              2265 	push	ar6
   093E C0 07              2266 	push	ar7
   0940 86 82              2267 	mov	dpl,@r0
   0942 08                 2268 	inc	r0
   0943 86 83              2269 	mov	dph,@r0
   0945 08                 2270 	inc	r0
   0946 86 F0              2271 	mov	b,@r0
   0948 12s00r00           2272 	lcall	___gptr_cmp
   094B 15 81              2273 	dec	sp
   094D 15 81              2274 	dec	sp
   094F 15 81              2275 	dec	sp
   0951 50 69              2276 	jnc	00110$
                           2277 ;	../../core/net/dhcpc.c:260: if(*optptr == DHCP_OPTION_MSG_TYPE) {
   0953 E5*00              2278 	mov	a,_bp
   0955 24 04              2279 	add	a,#0x04
   0957 F8                 2280 	mov	r0,a
   0958 86 82              2281 	mov	dpl,@r0
   095A 08                 2282 	inc	r0
   095B 86 83              2283 	mov	dph,@r0
   095D 08                 2284 	inc	r0
   095E 86 F0              2285 	mov	b,@r0
   0960 12s00r00           2286 	lcall	__gptrget
   0963 FC                 2287 	mov	r4,a
   0964 BC 35 22           2288 	cjne	r4,#0x35,00104$
                           2289 ;	../../core/net/dhcpc.c:261: return *(optptr + 2);
   0967 E5*00              2290 	mov	a,_bp
   0969 24 04              2291 	add	a,#0x04
   096B F8                 2292 	mov	r0,a
   096C 74 02              2293 	mov	a,#0x02
   096E 26                 2294 	add	a,@r0
   096F FF                 2295 	mov	r7,a
   0970 E4                 2296 	clr	a
   0971 08                 2297 	inc	r0
   0972 36                 2298 	addc	a,@r0
   0973 FE                 2299 	mov	r6,a
   0974 08                 2300 	inc	r0
   0975 86 05              2301 	mov	ar5,@r0
   0977 8F 82              2302 	mov	dpl,r7
   0979 8E 83              2303 	mov	dph,r6
   097B 8D F0              2304 	mov	b,r5
   097D 12s00r00           2305 	lcall	__gptrget
   0980 FB                 2306 	mov	r3,a
   0981 7A 00              2307 	mov	r2,#0x00
   0983 8B 82              2308 	mov	dpl,r3
   0985 8A 83              2309 	mov	dph,r2
   0987 80 36              2310 	sjmp	00113$
   0989                    2311 00104$:
                           2312 ;	../../core/net/dhcpc.c:262: } else if (*optptr == DHCP_OPTION_END) {
   0989 BC FF 05           2313 	cjne	r4,#0xFF,00105$
                           2314 ;	../../core/net/dhcpc.c:263: return -1;
   098C 90 FF FF           2315 	mov	dptr,#0xFFFF
   098F 80 2E              2316 	sjmp	00113$
   0991                    2317 00105$:
                           2318 ;	../../core/net/dhcpc.c:265: optptr += optptr[1] + 2;
   0991 E5*00              2319 	mov	a,_bp
   0993 24 04              2320 	add	a,#0x04
   0995 F8                 2321 	mov	r0,a
   0996 74 01              2322 	mov	a,#0x01
   0998 26                 2323 	add	a,@r0
   0999 FA                 2324 	mov	r2,a
   099A E4                 2325 	clr	a
   099B 08                 2326 	inc	r0
   099C 36                 2327 	addc	a,@r0
   099D FB                 2328 	mov	r3,a
   099E 08                 2329 	inc	r0
   099F 86 04              2330 	mov	ar4,@r0
   09A1 8A 82              2331 	mov	dpl,r2
   09A3 8B 83              2332 	mov	dph,r3
   09A5 8C F0              2333 	mov	b,r4
   09A7 12s00r00           2334 	lcall	__gptrget
   09AA FA                 2335 	mov	r2,a
   09AB 0A                 2336 	inc	r2
   09AC 0A                 2337 	inc	r2
   09AD E5*00              2338 	mov	a,_bp
   09AF 24 04              2339 	add	a,#0x04
   09B1 F8                 2340 	mov	r0,a
   09B2 EA                 2341 	mov	a,r2
   09B3 26                 2342 	add	a,@r0
   09B4 F6                 2343 	mov	@r0,a
   09B5 E4                 2344 	clr	a
   09B6 08                 2345 	inc	r0
   09B7 36                 2346 	addc	a,@r0
   09B8 F6                 2347 	mov	@r0,a
   09B9 02s09r35           2348 	ljmp	00106$
   09BC                    2349 00110$:
                           2350 ;	../../core/net/dhcpc.c:268: return -1;
   09BC 90 FF FF           2351 	mov	dptr,#0xFFFF
   09BF                    2352 00113$:
   09BF 85*00 81           2353 	mov	sp,_bp
   09C2 D0*00              2354 	pop	_bp
   09C4 22                 2355 	ret
                           2356 ;------------------------------------------------------------
                           2357 ;Allocation info for local variables in function 'handle_dhcp'
                           2358 ;------------------------------------------------------------
                           2359 ;data                      Allocated to stack - _bp -5
                           2360 ;ev                        Allocated to registers r7 
                           2361 ;ticks                     Allocated to stack - _bp +1
                           2362 ;PT_YIELD_FLAG             Allocated to registers r6 
                           2363 ;sloc0                     Allocated to stack - _bp +3
                           2364 ;------------------------------------------------------------
                           2365 ;	../../core/net/dhcpc.c:272: PT_THREAD(handle_dhcp(process_event_t ev, void *data))
                           2366 ;	-----------------------------------------
                           2367 ;	 function handle_dhcp
                           2368 ;	-----------------------------------------
   09C5                    2369 _handle_dhcp:
   09C5 C0*00              2370 	push	_bp
   09C7 E5 81              2371 	mov	a,sp
   09C9 F5*00              2372 	mov	_bp,a
   09CB 24 06              2373 	add	a,#0x06
   09CD F5 81              2374 	mov	sp,a
   09CF AF 82              2375 	mov	r7,dpl
                           2376 ;	../../core/net/dhcpc.c:276: PT_BEGIN(&s.pt);
   09D1 7E 01              2377 	mov	r6,#0x01
   09D3 90s00r00           2378 	mov	dptr,#_s
   09D6 E0                 2379 	movx	a,@dptr
   09D7 FC                 2380 	mov	r4,a
   09D8 A3                 2381 	inc	dptr
   09D9 E0                 2382 	movx	a,@dptr
   09DA FD                 2383 	mov	r5,a
   09DB BC 00 05           2384 	cjne	r4,#0x00,00298$
   09DE BD 00 02           2385 	cjne	r5,#0x00,00298$
   09E1 80 42              2386 	sjmp	00102$
   09E3                    2387 00298$:
   09E3 BC 1D 06           2388 	cjne	r4,#0x1D,00299$
   09E6 BD 01 03           2389 	cjne	r5,#0x01,00299$
   09E9 02s0Ar7D           2390 	ljmp	00103$
   09EC                    2391 00299$:
   09EC BC 22 06           2392 	cjne	r4,#0x22,00300$
   09EF BD 01 03           2393 	cjne	r5,#0x01,00300$
   09F2 02s0ArB6           2394 	ljmp	00112$
   09F5                    2395 00300$:
   09F5 BC 35 06           2396 	cjne	r4,#0x35,00301$
   09F8 BD 01 03           2397 	cjne	r5,#0x01,00301$
   09FB 02s0Br92           2398 	ljmp	00131$
   09FE                    2399 00301$:
   09FE BC 3A 06           2400 	cjne	r4,#0x3A,00302$
   0A01 BD 01 03           2401 	cjne	r5,#0x01,00302$
   0A04 02s0BrCB           2402 	ljmp	00140$
   0A07                    2403 00302$:
   0A07 BC 66 06           2404 	cjne	r4,#0x66,00303$
   0A0A BD 01 03           2405 	cjne	r5,#0x01,00303$
   0A0D 02s0Dr9A           2406 	ljmp	00163$
   0A10                    2407 00303$:
   0A10 BC 76 06           2408 	cjne	r4,#0x76,00304$
   0A13 BD 01 03           2409 	cjne	r5,#0x01,00304$
   0A16 02s0Er8D           2410 	ljmp	00176$
   0A19                    2411 00304$:
   0A19 BC 7D 06           2412 	cjne	r4,#0x7D,00305$
   0A1C BD 01 03           2413 	cjne	r5,#0x01,00305$
   0A1F 02s0Fr43           2414 	ljmp	00185$
   0A22                    2415 00305$:
   0A22 02s0FrBD           2416 	ljmp	00201$
                           2417 ;	../../core/net/dhcpc.c:278: init:
   0A25                    2418 00102$:
                           2419 ;	../../core/net/dhcpc.c:279: xid++;
   0A25 90s00r31           2420 	mov	dptr,#_xid
   0A28 E0                 2421 	movx	a,@dptr
   0A29 24 01              2422 	add	a,#0x01
   0A2B F0                 2423 	movx	@dptr,a
   0A2C A3                 2424 	inc	dptr
   0A2D E0                 2425 	movx	a,@dptr
   0A2E 34 00              2426 	addc	a,#0x00
   0A30 F0                 2427 	movx	@dptr,a
   0A31 A3                 2428 	inc	dptr
   0A32 E0                 2429 	movx	a,@dptr
   0A33 34 00              2430 	addc	a,#0x00
   0A35 F0                 2431 	movx	@dptr,a
   0A36 A3                 2432 	inc	dptr
   0A37 E0                 2433 	movx	a,@dptr
   0A38 34 00              2434 	addc	a,#0x00
   0A3A F0                 2435 	movx	@dptr,a
                           2436 ;	../../core/net/dhcpc.c:280: s.state = STATE_SENDING;
   0A3B 90s00r02           2437 	mov	dptr,#(_s + 0x0002)
   0A3E 74 01              2438 	mov	a,#0x01
   0A40 F0                 2439 	movx	@dptr,a
                           2440 ;	../../core/net/dhcpc.c:281: s.ticks = CLOCK_SECOND;
   0A41 90s00r10           2441 	mov	dptr,#(_s + 0x0010)
   0A44 74 80              2442 	mov	a,#0x80
   0A46 F0                 2443 	movx	@dptr,a
   0A47 A3                 2444 	inc	dptr
   0A48 E4                 2445 	clr	a
   0A49 F0                 2446 	movx	@dptr,a
   0A4A A3                 2447 	inc	dptr
   0A4B F0                 2448 	movx	@dptr,a
   0A4C A3                 2449 	inc	dptr
   0A4D F0                 2450 	movx	@dptr,a
                           2451 ;	../../core/net/dhcpc.c:283: while(ev != tcpip_event) {
   0A4E                    2452 00109$:
   0A4E 90s00r00           2453 	mov	dptr,#_tcpip_event
   0A51 E0                 2454 	movx	a,@dptr
   0A52 FD                 2455 	mov	r5,a
   0A53 EF                 2456 	mov	a,r7
   0A54 B5 05 02           2457 	cjne	a,ar5,00306$
   0A57 80 2D              2458 	sjmp	00111$
   0A59                    2459 00306$:
                           2460 ;	../../core/net/dhcpc.c:284: tcpip_poll_udp(s.conn);
   0A59 90s00r03           2461 	mov	dptr,#(_s + 0x0003)
   0A5C E0                 2462 	movx	a,@dptr
   0A5D FB                 2463 	mov	r3,a
   0A5E A3                 2464 	inc	dptr
   0A5F E0                 2465 	movx	a,@dptr
   0A60 FC                 2466 	mov	r4,a
   0A61 A3                 2467 	inc	dptr
   0A62 E0                 2468 	movx	a,@dptr
   0A63 FD                 2469 	mov	r5,a
   0A64 8B 82              2470 	mov	dpl,r3
   0A66 8C 83              2471 	mov	dph,r4
   0A68 8D F0              2472 	mov	b,r5
   0A6A C0 07              2473 	push	ar7
   0A6C 12s00r00           2474 	lcall	_tcpip_poll_udp
   0A6F D0 07              2475 	pop	ar7
                           2476 ;	../../core/net/dhcpc.c:285: PT_YIELD(&s.pt);
   0A71 7E 00              2477 	mov	r6,#0x00
   0A73 90s00r00           2478 	mov	dptr,#_s
   0A76 74 1D              2479 	mov	a,#0x1D
   0A78 F0                 2480 	movx	@dptr,a
   0A79 A3                 2481 	inc	dptr
   0A7A 74 01              2482 	mov	a,#0x01
   0A7C F0                 2483 	movx	@dptr,a
   0A7D                    2484 00103$:
   0A7D EE                 2485 	mov	a,r6
   0A7E 70 CE              2486 	jnz	00109$
   0A80 75 82 01           2487 	mov	dpl,#0x01
   0A83 02s0FrC7           2488 	ljmp	00202$
   0A86                    2489 00111$:
                           2490 ;	../../core/net/dhcpc.c:287: send_discover();
   0A86 C0 07              2491 	push	ar7
   0A88 12s03rB6           2492 	lcall	_send_discover
                           2493 ;	../../core/net/dhcpc.c:288: etimer_set(&s.etimer, s.ticks);
   0A8B 90s00r10           2494 	mov	dptr,#(_s + 0x0010)
   0A8E E0                 2495 	movx	a,@dptr
   0A8F FA                 2496 	mov	r2,a
   0A90 A3                 2497 	inc	dptr
   0A91 E0                 2498 	movx	a,@dptr
   0A92 FB                 2499 	mov	r3,a
   0A93 A3                 2500 	inc	dptr
   0A94 E0                 2501 	movx	a,@dptr
   0A95 A3                 2502 	inc	dptr
   0A96 E0                 2503 	movx	a,@dptr
   0A97 C0 02              2504 	push	ar2
   0A99 C0 03              2505 	push	ar3
   0A9B 90s00r06           2506 	mov	dptr,#(_s + 0x0006)
   0A9E 75 F0 00           2507 	mov	b,#0x00
   0AA1 12s00r00           2508 	lcall	_etimer_set
   0AA4 15 81              2509 	dec	sp
   0AA6 15 81              2510 	dec	sp
   0AA8 D0 07              2511 	pop	ar7
                           2512 ;	../../core/net/dhcpc.c:290: PT_YIELD(&s.pt);
   0AAA                    2513 00115$:
   0AAA 7E 00              2514 	mov	r6,#0x00
   0AAC 90s00r00           2515 	mov	dptr,#_s
   0AAF 74 22              2516 	mov	a,#0x22
   0AB1 F0                 2517 	movx	@dptr,a
   0AB2 A3                 2518 	inc	dptr
   0AB3 74 01              2519 	mov	a,#0x01
   0AB5 F0                 2520 	movx	@dptr,a
   0AB6                    2521 00112$:
   0AB6 EE                 2522 	mov	a,r6
   0AB7 70 06              2523 	jnz	00116$
   0AB9 75 82 01           2524 	mov	dpl,#0x01
   0ABC 02s0FrC7           2525 	ljmp	00202$
   0ABF                    2526 00116$:
                           2527 ;	../../core/net/dhcpc.c:291: if(ev == tcpip_event && uip_newdata() && msg_for_me() == DHCPOFFER) {
   0ABF 90s00r00           2528 	mov	dptr,#_tcpip_event
   0AC2 E0                 2529 	movx	a,@dptr
   0AC3 FD                 2530 	mov	r5,a
   0AC4 EF                 2531 	mov	a,r7
   0AC5 B5 05 28           2532 	cjne	a,ar5,00123$
   0AC8 90s00r00           2533 	mov	dptr,#_uip_flags
   0ACB E0                 2534 	movx	a,@dptr
   0ACC FD                 2535 	mov	r5,a
   0ACD 30 E1 20           2536 	jnb	acc.1,00123$
   0AD0 C0 07              2537 	push	ar7
   0AD2 12s08r2E           2538 	lcall	_msg_for_me
   0AD5 AC 82              2539 	mov	r4,dpl
   0AD7 AD 83              2540 	mov	r5,dph
   0AD9 D0 07              2541 	pop	ar7
   0ADB BC 02 12           2542 	cjne	r4,#0x02,00123$
   0ADE BD 00 0F           2543 	cjne	r5,#0x00,00123$
                           2544 ;	../../core/net/dhcpc.c:292: parse_msg();
   0AE1 C0 07              2545 	push	ar7
   0AE3 12s07r02           2546 	lcall	_parse_msg
   0AE6 D0 07              2547 	pop	ar7
                           2548 ;	../../core/net/dhcpc.c:293: s.state = STATE_OFFER_RECEIVED;
   0AE8 90s00r02           2549 	mov	dptr,#(_s + 0x0002)
   0AEB 74 02              2550 	mov	a,#0x02
   0AED F0                 2551 	movx	@dptr,a
                           2552 ;	../../core/net/dhcpc.c:294: goto selecting;
   0AEE 80 50              2553 	sjmp	00130$
   0AF0                    2554 00123$:
                           2555 ;	../../core/net/dhcpc.c:296: } while (!etimer_expired(&s.etimer));
   0AF0 90s00r06           2556 	mov	dptr,#(_s + 0x0006)
   0AF3 75 F0 00           2557 	mov	b,#0x00
   0AF6 C0 07              2558 	push	ar7
   0AF8 12s00r00           2559 	lcall	_etimer_expired
   0AFB E5 82              2560 	mov	a,dpl
   0AFD 85 83 F0           2561 	mov	b,dph
   0B00 D0 07              2562 	pop	ar7
   0B02 45 F0              2563 	orl	a,b
   0B04 60 A4              2564 	jz	00115$
                           2565 ;	../../core/net/dhcpc.c:298: if(s.ticks < CLOCK_SECOND * 60) {
   0B06 90s00r10           2566 	mov	dptr,#(_s + 0x0010)
   0B09 E0                 2567 	movx	a,@dptr
   0B0A FA                 2568 	mov	r2,a
   0B0B A3                 2569 	inc	dptr
   0B0C E0                 2570 	movx	a,@dptr
   0B0D FB                 2571 	mov	r3,a
   0B0E A3                 2572 	inc	dptr
   0B0F E0                 2573 	movx	a,@dptr
   0B10 FC                 2574 	mov	r4,a
   0B11 A3                 2575 	inc	dptr
   0B12 E0                 2576 	movx	a,@dptr
   0B13 FD                 2577 	mov	r5,a
   0B14 C3                 2578 	clr	c
   0B15 EB                 2579 	mov	a,r3
   0B16 94 1E              2580 	subb	a,#0x1E
   0B18 EC                 2581 	mov	a,r4
   0B19 94 00              2582 	subb	a,#0x00
   0B1B ED                 2583 	mov	a,r5
   0B1C 94 00              2584 	subb	a,#0x00
   0B1E 40 03              2585 	jc	00315$
   0B20 02s0Ar4E           2586 	ljmp	00109$
   0B23                    2587 00315$:
                           2588 ;	../../core/net/dhcpc.c:299: s.ticks *= 2;
   0B23 EA                 2589 	mov	a,r2
   0B24 2A                 2590 	add	a,r2
   0B25 FA                 2591 	mov	r2,a
   0B26 EB                 2592 	mov	a,r3
   0B27 33                 2593 	rlc	a
   0B28 FB                 2594 	mov	r3,a
   0B29 EC                 2595 	mov	a,r4
   0B2A 33                 2596 	rlc	a
   0B2B FC                 2597 	mov	r4,a
   0B2C ED                 2598 	mov	a,r5
   0B2D 33                 2599 	rlc	a
   0B2E FD                 2600 	mov	r5,a
   0B2F 90s00r10           2601 	mov	dptr,#(_s + 0x0010)
   0B32 EA                 2602 	mov	a,r2
   0B33 F0                 2603 	movx	@dptr,a
   0B34 A3                 2604 	inc	dptr
   0B35 EB                 2605 	mov	a,r3
   0B36 F0                 2606 	movx	@dptr,a
   0B37 A3                 2607 	inc	dptr
   0B38 EC                 2608 	mov	a,r4
   0B39 F0                 2609 	movx	@dptr,a
   0B3A A3                 2610 	inc	dptr
   0B3B ED                 2611 	mov	a,r5
   0B3C F0                 2612 	movx	@dptr,a
   0B3D 02s0Ar4E           2613 	ljmp	00109$
                           2614 ;	../../core/net/dhcpc.c:303: selecting:
   0B40                    2615 00130$:
                           2616 ;	../../core/net/dhcpc.c:304: xid++;
   0B40 90s00r31           2617 	mov	dptr,#_xid
   0B43 E0                 2618 	movx	a,@dptr
   0B44 24 01              2619 	add	a,#0x01
   0B46 F0                 2620 	movx	@dptr,a
   0B47 A3                 2621 	inc	dptr
   0B48 E0                 2622 	movx	a,@dptr
   0B49 34 00              2623 	addc	a,#0x00
   0B4B F0                 2624 	movx	@dptr,a
   0B4C A3                 2625 	inc	dptr
   0B4D E0                 2626 	movx	a,@dptr
   0B4E 34 00              2627 	addc	a,#0x00
   0B50 F0                 2628 	movx	@dptr,a
   0B51 A3                 2629 	inc	dptr
   0B52 E0                 2630 	movx	a,@dptr
   0B53 34 00              2631 	addc	a,#0x00
   0B55 F0                 2632 	movx	@dptr,a
                           2633 ;	../../core/net/dhcpc.c:305: s.ticks = CLOCK_SECOND;
   0B56 90s00r10           2634 	mov	dptr,#(_s + 0x0010)
   0B59 74 80              2635 	mov	a,#0x80
   0B5B F0                 2636 	movx	@dptr,a
   0B5C A3                 2637 	inc	dptr
   0B5D E4                 2638 	clr	a
   0B5E F0                 2639 	movx	@dptr,a
   0B5F A3                 2640 	inc	dptr
   0B60 F0                 2641 	movx	@dptr,a
   0B61 A3                 2642 	inc	dptr
   0B62 F0                 2643 	movx	@dptr,a
                           2644 ;	../../core/net/dhcpc.c:307: while(ev != tcpip_event) {
   0B63                    2645 00137$:
   0B63 90s00r00           2646 	mov	dptr,#_tcpip_event
   0B66 E0                 2647 	movx	a,@dptr
   0B67 FD                 2648 	mov	r5,a
   0B68 EF                 2649 	mov	a,r7
   0B69 B5 05 02           2650 	cjne	a,ar5,00316$
   0B6C 80 2D              2651 	sjmp	00139$
   0B6E                    2652 00316$:
                           2653 ;	../../core/net/dhcpc.c:308: tcpip_poll_udp(s.conn);
   0B6E 90s00r03           2654 	mov	dptr,#(_s + 0x0003)
   0B71 E0                 2655 	movx	a,@dptr
   0B72 FB                 2656 	mov	r3,a
   0B73 A3                 2657 	inc	dptr
   0B74 E0                 2658 	movx	a,@dptr
   0B75 FC                 2659 	mov	r4,a
   0B76 A3                 2660 	inc	dptr
   0B77 E0                 2661 	movx	a,@dptr
   0B78 FD                 2662 	mov	r5,a
   0B79 8B 82              2663 	mov	dpl,r3
   0B7B 8C 83              2664 	mov	dph,r4
   0B7D 8D F0              2665 	mov	b,r5
   0B7F C0 07              2666 	push	ar7
   0B81 12s00r00           2667 	lcall	_tcpip_poll_udp
   0B84 D0 07              2668 	pop	ar7
                           2669 ;	../../core/net/dhcpc.c:309: PT_YIELD(&s.pt);
   0B86 7E 00              2670 	mov	r6,#0x00
   0B88 90s00r00           2671 	mov	dptr,#_s
   0B8B 74 35              2672 	mov	a,#0x35
   0B8D F0                 2673 	movx	@dptr,a
   0B8E A3                 2674 	inc	dptr
   0B8F 74 01              2675 	mov	a,#0x01
   0B91 F0                 2676 	movx	@dptr,a
   0B92                    2677 00131$:
   0B92 EE                 2678 	mov	a,r6
   0B93 70 CE              2679 	jnz	00137$
   0B95 75 82 01           2680 	mov	dpl,#0x01
   0B98 02s0FrC7           2681 	ljmp	00202$
   0B9B                    2682 00139$:
                           2683 ;	../../core/net/dhcpc.c:311: send_request();
   0B9B C0 07              2684 	push	ar7
   0B9D 12s04r60           2685 	lcall	_send_request
                           2686 ;	../../core/net/dhcpc.c:312: etimer_set(&s.etimer, s.ticks);
   0BA0 90s00r10           2687 	mov	dptr,#(_s + 0x0010)
   0BA3 E0                 2688 	movx	a,@dptr
   0BA4 FA                 2689 	mov	r2,a
   0BA5 A3                 2690 	inc	dptr
   0BA6 E0                 2691 	movx	a,@dptr
   0BA7 FB                 2692 	mov	r3,a
   0BA8 A3                 2693 	inc	dptr
   0BA9 E0                 2694 	movx	a,@dptr
   0BAA A3                 2695 	inc	dptr
   0BAB E0                 2696 	movx	a,@dptr
   0BAC C0 02              2697 	push	ar2
   0BAE C0 03              2698 	push	ar3
   0BB0 90s00r06           2699 	mov	dptr,#(_s + 0x0006)
   0BB3 75 F0 00           2700 	mov	b,#0x00
   0BB6 12s00r00           2701 	lcall	_etimer_set
   0BB9 15 81              2702 	dec	sp
   0BBB 15 81              2703 	dec	sp
   0BBD D0 07              2704 	pop	ar7
                           2705 ;	../../core/net/dhcpc.c:314: PT_YIELD(&s.pt);
   0BBF                    2706 00143$:
   0BBF 7E 00              2707 	mov	r6,#0x00
   0BC1 90s00r00           2708 	mov	dptr,#_s
   0BC4 74 3A              2709 	mov	a,#0x3A
   0BC6 F0                 2710 	movx	@dptr,a
   0BC7 A3                 2711 	inc	dptr
   0BC8 74 01              2712 	mov	a,#0x01
   0BCA F0                 2713 	movx	@dptr,a
   0BCB                    2714 00140$:
   0BCB EE                 2715 	mov	a,r6
   0BCC 70 06              2716 	jnz	00144$
   0BCE 75 82 01           2717 	mov	dpl,#0x01
   0BD1 02s0FrC7           2718 	ljmp	00202$
   0BD4                    2719 00144$:
                           2720 ;	../../core/net/dhcpc.c:315: if(ev == tcpip_event && uip_newdata() && msg_for_me() == DHCPACK) {
   0BD4 90s00r00           2721 	mov	dptr,#_tcpip_event
   0BD7 E0                 2722 	movx	a,@dptr
   0BD8 FD                 2723 	mov	r5,a
   0BD9 EF                 2724 	mov	a,r7
   0BDA B5 05 28           2725 	cjne	a,ar5,00151$
   0BDD 90s00r00           2726 	mov	dptr,#_uip_flags
   0BE0 E0                 2727 	movx	a,@dptr
   0BE1 FD                 2728 	mov	r5,a
   0BE2 30 E1 20           2729 	jnb	acc.1,00151$
   0BE5 C0 07              2730 	push	ar7
   0BE7 12s08r2E           2731 	lcall	_msg_for_me
   0BEA AC 82              2732 	mov	r4,dpl
   0BEC AD 83              2733 	mov	r5,dph
   0BEE D0 07              2734 	pop	ar7
   0BF0 BC 05 12           2735 	cjne	r4,#0x05,00151$
   0BF3 BD 00 0F           2736 	cjne	r5,#0x00,00151$
                           2737 ;	../../core/net/dhcpc.c:316: parse_msg();
   0BF6 C0 07              2738 	push	ar7
   0BF8 12s07r02           2739 	lcall	_parse_msg
   0BFB D0 07              2740 	pop	ar7
                           2741 ;	../../core/net/dhcpc.c:317: s.state = STATE_CONFIG_RECEIVED;
   0BFD 90s00r02           2742 	mov	dptr,#(_s + 0x0002)
   0C00 74 03              2743 	mov	a,#0x03
   0C02 F0                 2744 	movx	@dptr,a
                           2745 ;	../../core/net/dhcpc.c:318: goto bound;
   0C03 80 5B              2746 	sjmp	00159$
   0C05                    2747 00151$:
                           2748 ;	../../core/net/dhcpc.c:320: } while (!etimer_expired(&s.etimer));
   0C05 90s00r06           2749 	mov	dptr,#(_s + 0x0006)
   0C08 75 F0 00           2750 	mov	b,#0x00
   0C0B C0 07              2751 	push	ar7
   0C0D 12s00r00           2752 	lcall	_etimer_expired
   0C10 E5 82              2753 	mov	a,dpl
   0C12 85 83 F0           2754 	mov	b,dph
   0C15 D0 07              2755 	pop	ar7
   0C17 45 F0              2756 	orl	a,b
   0C19 60 A4              2757 	jz	00143$
                           2758 ;	../../core/net/dhcpc.c:322: if(s.ticks <= CLOCK_SECOND * 10) {
   0C1B 90s00r10           2759 	mov	dptr,#(_s + 0x0010)
   0C1E E0                 2760 	movx	a,@dptr
   0C1F FA                 2761 	mov	r2,a
   0C20 A3                 2762 	inc	dptr
   0C21 E0                 2763 	movx	a,@dptr
   0C22 FB                 2764 	mov	r3,a
   0C23 A3                 2765 	inc	dptr
   0C24 E0                 2766 	movx	a,@dptr
   0C25 FC                 2767 	mov	r4,a
   0C26 A3                 2768 	inc	dptr
   0C27 E0                 2769 	movx	a,@dptr
   0C28 FD                 2770 	mov	r5,a
   0C29 C3                 2771 	clr	c
   0C2A E4                 2772 	clr	a
   0C2B 9A                 2773 	subb	a,r2
   0C2C 74 05              2774 	mov	a,#0x05
   0C2E 9B                 2775 	subb	a,r3
   0C2F E4                 2776 	clr	a
   0C30 9C                 2777 	subb	a,r4
   0C31 E4                 2778 	clr	a
   0C32 9D                 2779 	subb	a,r5
   0C33 50 03              2780 	jnc	00325$
   0C35 02s0Ar25           2781 	ljmp	00102$
   0C38                    2782 00325$:
                           2783 ;	../../core/net/dhcpc.c:323: s.ticks += CLOCK_SECOND;
   0C38 74 80              2784 	mov	a,#0x80
   0C3A 2A                 2785 	add	a,r2
   0C3B FA                 2786 	mov	r2,a
   0C3C E4                 2787 	clr	a
   0C3D 3B                 2788 	addc	a,r3
   0C3E FB                 2789 	mov	r3,a
   0C3F E4                 2790 	clr	a
   0C40 3C                 2791 	addc	a,r4
   0C41 FC                 2792 	mov	r4,a
   0C42 E4                 2793 	clr	a
   0C43 3D                 2794 	addc	a,r5
   0C44 FD                 2795 	mov	r5,a
   0C45 90s00r10           2796 	mov	dptr,#(_s + 0x0010)
   0C48 EA                 2797 	mov	a,r2
   0C49 F0                 2798 	movx	@dptr,a
   0C4A A3                 2799 	inc	dptr
   0C4B EB                 2800 	mov	a,r3
   0C4C F0                 2801 	movx	@dptr,a
   0C4D A3                 2802 	inc	dptr
   0C4E EC                 2803 	mov	a,r4
   0C4F F0                 2804 	movx	@dptr,a
   0C50 A3                 2805 	inc	dptr
   0C51 ED                 2806 	mov	a,r5
   0C52 F0                 2807 	movx	@dptr,a
                           2808 ;	../../core/net/dhcpc.c:327: } while(s.state != STATE_CONFIG_RECEIVED);
   0C53 90s00r02           2809 	mov	dptr,#(_s + 0x0002)
   0C56 E0                 2810 	movx	a,@dptr
   0C57 FD                 2811 	mov	r5,a
   0C58 BD 03 02           2812 	cjne	r5,#0x03,00326$
   0C5B 80 03              2813 	sjmp	00327$
   0C5D                    2814 00326$:
   0C5D 02s0Br63           2815 	ljmp	00137$
   0C60                    2816 00327$:
                           2817 ;	../../core/net/dhcpc.c:329: bound:
   0C60                    2818 00159$:
                           2819 ;	../../core/net/dhcpc.c:340: dhcpc_configured(&s);
   0C60 C0 07              2820 	push	ar7
   0C62 90s00r00           2821 	mov	dptr,#_s
   0C65 75 F0 00           2822 	mov	b,#0x00
   0C68 C0 07              2823 	push	ar7
   0C6A 12s00r00           2824 	lcall	_dhcpc_configured
                           2825 ;	../../core/net/dhcpc.c:348: s.ticks = (uip_ntohs(s.lease_time[0])*65536ul + uip_ntohs(s.lease_time[1])
   0C6D 90s00r1D           2826 	mov	dptr,#(_s + 0x001d)
   0C70 E0                 2827 	movx	a,@dptr
   0C71 FC                 2828 	mov	r4,a
   0C72 A3                 2829 	inc	dptr
   0C73 E0                 2830 	movx	a,@dptr
   0C74 FD                 2831 	mov	r5,a
   0C75 8C 82              2832 	mov	dpl,r4
   0C77 8D 83              2833 	mov	dph,r5
   0C79 12s00r00           2834 	lcall	_uip_htons
   0C7C AC 82              2835 	mov	r4,dpl
   0C7E AD 83              2836 	mov	r5,dph
   0C80 D0 07              2837 	pop	ar7
   0C82 E4                 2838 	clr	a
   0C83 E5*00              2839 	mov	a,_bp
   0C85 24 03              2840 	add	a,#0x03
   0C87 F8                 2841 	mov	r0,a
   0C88 08                 2842 	inc	r0
   0C89 08                 2843 	inc	r0
   0C8A 08                 2844 	inc	r0
   0C8B A6 05              2845 	mov	@r0,ar5
   0C8D 18                 2846 	dec	r0
   0C8E A6 04              2847 	mov	@r0,ar4
   0C90 18                 2848 	dec	r0
   0C91 76 00              2849 	mov	@r0,#0x00
   0C93 18                 2850 	dec	r0
   0C94 76 00              2851 	mov	@r0,#0x00
   0C96 90s00r1F           2852 	mov	dptr,#(_s + 0x001f)
   0C99 E0                 2853 	movx	a,@dptr
   0C9A FD                 2854 	mov	r5,a
   0C9B A3                 2855 	inc	dptr
   0C9C E0                 2856 	movx	a,@dptr
   0C9D FF                 2857 	mov	r7,a
   0C9E 8D 82              2858 	mov	dpl,r5
   0CA0 8F 83              2859 	mov	dph,r7
   0CA2 12s00r00           2860 	lcall	_uip_htons
   0CA5 AD 82              2861 	mov	r5,dpl
   0CA7 AF 83              2862 	mov	r7,dph
   0CA9 E4                 2863 	clr	a
   0CAA FC                 2864 	mov	r4,a
   0CAB FB                 2865 	mov	r3,a
   0CAC E5*00              2866 	mov	a,_bp
   0CAE 24 03              2867 	add	a,#0x03
   0CB0 F8                 2868 	mov	r0,a
   0CB1 ED                 2869 	mov	a,r5
   0CB2 26                 2870 	add	a,@r0
   0CB3 FD                 2871 	mov	r5,a
   0CB4 EF                 2872 	mov	a,r7
   0CB5 08                 2873 	inc	r0
   0CB6 36                 2874 	addc	a,@r0
   0CB7 FF                 2875 	mov	r7,a
   0CB8 EC                 2876 	mov	a,r4
   0CB9 08                 2877 	inc	r0
   0CBA 36                 2878 	addc	a,@r0
   0CBB FC                 2879 	mov	r4,a
   0CBC EB                 2880 	mov	a,r3
   0CBD 08                 2881 	inc	r0
   0CBE 36                 2882 	addc	a,@r0
   0CBF 54 01              2883 	anl	a,#0x01
   0CC1 A2 E0              2884 	mov	c,acc.0
   0CC3 CC                 2885 	xch	a,r4
   0CC4 13                 2886 	rrc	a
   0CC5 CC                 2887 	xch	a,r4
   0CC6 13                 2888 	rrc	a
   0CC7 CC                 2889 	xch	a,r4
   0CC8 FB                 2890 	mov	r3,a
   0CC9 EF                 2891 	mov	a,r7
   0CCA C3                 2892 	clr	c
   0CCB 13                 2893 	rrc	a
   0CCC 4C                 2894 	orl	a,r4
   0CCD FC                 2895 	mov	r4,a
   0CCE EF                 2896 	mov	a,r7
   0CCF 54 01              2897 	anl	a,#0x01
   0CD1 A2 E0              2898 	mov	c,acc.0
   0CD3 CD                 2899 	xch	a,r5
   0CD4 13                 2900 	rrc	a
   0CD5 CD                 2901 	xch	a,r5
   0CD6 13                 2902 	rrc	a
   0CD7 CD                 2903 	xch	a,r5
   0CD8 FF                 2904 	mov	r7,a
   0CD9 EB                 2905 	mov	a,r3
   0CDA C3                 2906 	clr	c
   0CDB 13                 2907 	rrc	a
   0CDC FB                 2908 	mov	r3,a
   0CDD EC                 2909 	mov	a,r4
   0CDE 13                 2910 	rrc	a
   0CDF FC                 2911 	mov	r4,a
   0CE0 EF                 2912 	mov	a,r7
   0CE1 13                 2913 	rrc	a
   0CE2 FF                 2914 	mov	r7,a
   0CE3 ED                 2915 	mov	a,r5
   0CE4 13                 2916 	rrc	a
   0CE5 FD                 2917 	mov	r5,a
   0CE6 90s00r10           2918 	mov	dptr,#(_s + 0x0010)
   0CE9 F0                 2919 	movx	@dptr,a
   0CEA A3                 2920 	inc	dptr
   0CEB EF                 2921 	mov	a,r7
   0CEC F0                 2922 	movx	@dptr,a
   0CED A3                 2923 	inc	dptr
   0CEE EC                 2924 	mov	a,r4
   0CEF F0                 2925 	movx	@dptr,a
   0CF0 A3                 2926 	inc	dptr
   0CF1 EB                 2927 	mov	a,r3
   0CF2 F0                 2928 	movx	@dptr,a
                           2929 ;	../../core/net/dhcpc.c:395: PT_END(&s.pt);
   0CF3 D0 07              2930 	pop	ar7
                           2931 ;	../../core/net/dhcpc.c:354: while(s.ticks > 0) {
   0CF5                    2932 00170$:
   0CF5 90s00r10           2933 	mov	dptr,#(_s + 0x0010)
   0CF8 E0                 2934 	movx	a,@dptr
   0CF9 FA                 2935 	mov	r2,a
   0CFA A3                 2936 	inc	dptr
   0CFB E0                 2937 	movx	a,@dptr
   0CFC FB                 2938 	mov	r3,a
   0CFD A3                 2939 	inc	dptr
   0CFE E0                 2940 	movx	a,@dptr
   0CFF FC                 2941 	mov	r4,a
   0D00 A3                 2942 	inc	dptr
   0D01 E0                 2943 	movx	a,@dptr
   0D02 FD                 2944 	mov	r5,a
   0D03 EA                 2945 	mov	a,r2
   0D04 4B                 2946 	orl	a,r3
   0D05 4C                 2947 	orl	a,r4
   0D06 4D                 2948 	orl	a,r5
   0D07 70 03              2949 	jnz	00328$
   0D09 02s0DrBC           2950 	ljmp	00173$
   0D0C                    2951 00328$:
                           2952 ;	../../core/net/dhcpc.c:355: ticks = IMIN(s.ticks, MAX_TICKS);
   0D0C C3                 2953 	clr	c
   0D0D EA                 2954 	mov	a,r2
   0D0E 94 FF              2955 	subb	a,#0xFF
   0D10 EB                 2956 	mov	a,r3
   0D11 94 7F              2957 	subb	a,#0x7F
   0D13 EC                 2958 	mov	a,r4
   0D14 94 00              2959 	subb	a,#0x00
   0D16 ED                 2960 	mov	a,r5
   0D17 94 00              2961 	subb	a,#0x00
   0D19 40 08              2962 	jc	00205$
   0D1B 7A FF              2963 	mov	r2,#0xFF
   0D1D 7B 7F              2964 	mov	r3,#0x7F
   0D1F 7C 00              2965 	mov	r4,#0x00
   0D21 7D 00              2966 	mov	r5,#0x00
   0D23                    2967 00205$:
   0D23 C0 07              2968 	push	ar7
   0D25 A8*00              2969 	mov	r0,_bp
   0D27 08                 2970 	inc	r0
   0D28 A6 02              2971 	mov	@r0,ar2
   0D2A 08                 2972 	inc	r0
   0D2B A6 03              2973 	mov	@r0,ar3
                           2974 ;	../../core/net/dhcpc.c:356: s.ticks -= ticks;
   0D2D 90s00r10           2975 	mov	dptr,#(_s + 0x0010)
   0D30 E5*00              2976 	mov	a,_bp
   0D32 24 03              2977 	add	a,#0x03
   0D34 F8                 2978 	mov	r0,a
   0D35 E0                 2979 	movx	a,@dptr
   0D36 F6                 2980 	mov	@r0,a
   0D37 A3                 2981 	inc	dptr
   0D38 E0                 2982 	movx	a,@dptr
   0D39 08                 2983 	inc	r0
   0D3A F6                 2984 	mov	@r0,a
   0D3B A3                 2985 	inc	dptr
   0D3C E0                 2986 	movx	a,@dptr
   0D3D 08                 2987 	inc	r0
   0D3E F6                 2988 	mov	@r0,a
   0D3F A3                 2989 	inc	dptr
   0D40 E0                 2990 	movx	a,@dptr
   0D41 08                 2991 	inc	r0
   0D42 F6                 2992 	mov	@r0,a
   0D43 A8*00              2993 	mov	r0,_bp
   0D45 08                 2994 	inc	r0
   0D46 86 02              2995 	mov	ar2,@r0
   0D48 08                 2996 	inc	r0
   0D49 86 04              2997 	mov	ar4,@r0
   0D4B E4                 2998 	clr	a
   0D4C FD                 2999 	mov	r5,a
   0D4D FF                 3000 	mov	r7,a
   0D4E E5*00              3001 	mov	a,_bp
   0D50 24 03              3002 	add	a,#0x03
   0D52 F8                 3003 	mov	r0,a
   0D53 E6                 3004 	mov	a,@r0
   0D54 C3                 3005 	clr	c
   0D55 9A                 3006 	subb	a,r2
   0D56 FA                 3007 	mov	r2,a
   0D57 08                 3008 	inc	r0
   0D58 E6                 3009 	mov	a,@r0
   0D59 9C                 3010 	subb	a,r4
   0D5A FC                 3011 	mov	r4,a
   0D5B 08                 3012 	inc	r0
   0D5C E6                 3013 	mov	a,@r0
   0D5D 9D                 3014 	subb	a,r5
   0D5E FD                 3015 	mov	r5,a
   0D5F 08                 3016 	inc	r0
   0D60 E6                 3017 	mov	a,@r0
   0D61 9F                 3018 	subb	a,r7
   0D62 FF                 3019 	mov	r7,a
   0D63 90s00r10           3020 	mov	dptr,#(_s + 0x0010)
   0D66 EA                 3021 	mov	a,r2
   0D67 F0                 3022 	movx	@dptr,a
   0D68 A3                 3023 	inc	dptr
   0D69 EC                 3024 	mov	a,r4
   0D6A F0                 3025 	movx	@dptr,a
   0D6B A3                 3026 	inc	dptr
   0D6C ED                 3027 	mov	a,r5
   0D6D F0                 3028 	movx	@dptr,a
   0D6E A3                 3029 	inc	dptr
   0D6F EF                 3030 	mov	a,r7
   0D70 F0                 3031 	movx	@dptr,a
                           3032 ;	../../core/net/dhcpc.c:357: etimer_set(&s.etimer, ticks);
   0D71 C0 07              3033 	push	ar7
   0D73 A8*00              3034 	mov	r0,_bp
   0D75 08                 3035 	inc	r0
   0D76 E6                 3036 	mov	a,@r0
   0D77 C0 E0              3037 	push	acc
   0D79 08                 3038 	inc	r0
   0D7A E6                 3039 	mov	a,@r0
   0D7B C0 E0              3040 	push	acc
   0D7D 90s00r06           3041 	mov	dptr,#(_s + 0x0006)
   0D80 75 F0 00           3042 	mov	b,#0x00
   0D83 12s00r00           3043 	lcall	_etimer_set
   0D86 15 81              3044 	dec	sp
   0D88 15 81              3045 	dec	sp
   0D8A D0 07              3046 	pop	ar7
                           3047 ;	../../core/net/dhcpc.c:358: PT_YIELD_UNTIL(&s.pt, etimer_expired(&s.etimer));
   0D8C 7E 00              3048 	mov	r6,#0x00
   0D8E 90s00r00           3049 	mov	dptr,#_s
   0D91 74 66              3050 	mov	a,#0x66
   0D93 F0                 3051 	movx	@dptr,a
   0D94 A3                 3052 	inc	dptr
   0D95 74 01              3053 	mov	a,#0x01
   0D97 F0                 3054 	movx	@dptr,a
                           3055 ;	../../core/net/dhcpc.c:395: PT_END(&s.pt);
   0D98 D0 07              3056 	pop	ar7
                           3057 ;	../../core/net/dhcpc.c:358: PT_YIELD_UNTIL(&s.pt, etimer_expired(&s.etimer));
   0D9A                    3058 00163$:
   0D9A EE                 3059 	mov	a,r6
   0D9B 60 19              3060 	jz	00164$
   0D9D 90s00r06           3061 	mov	dptr,#(_s + 0x0006)
   0DA0 75 F0 00           3062 	mov	b,#0x00
   0DA3 C0 07              3063 	push	ar7
   0DA5 12s00r00           3064 	lcall	_etimer_expired
   0DA8 E5 82              3065 	mov	a,dpl
   0DAA 85 83 F0           3066 	mov	b,dph
   0DAD D0 07              3067 	pop	ar7
   0DAF 45 F0              3068 	orl	a,b
   0DB1 60 03              3069 	jz	00331$
   0DB3 02s0CrF5           3070 	ljmp	00170$
   0DB6                    3071 00331$:
   0DB6                    3072 00164$:
   0DB6 75 82 01           3073 	mov	dpl,#0x01
   0DB9 02s0FrC7           3074 	ljmp	00202$
                           3075 ;	../../core/net/dhcpc.c:362: <= MAX_TICKS32) {
   0DBC                    3076 00173$:
                           3077 ;	../../core/net/dhcpc.c:363: s.ticks = (uip_ntohs(s.lease_time[0])*65536ul + uip_ntohs(s.lease_time[1])
   0DBC C0 07              3078 	push	ar7
   0DBE 90s00r1D           3079 	mov	dptr,#(_s + 0x001d)
   0DC1 E0                 3080 	movx	a,@dptr
   0DC2 FC                 3081 	mov	r4,a
   0DC3 A3                 3082 	inc	dptr
   0DC4 E0                 3083 	movx	a,@dptr
   0DC5 FD                 3084 	mov	r5,a
   0DC6 8C 82              3085 	mov	dpl,r4
   0DC8 8D 83              3086 	mov	dph,r5
   0DCA C0 07              3087 	push	ar7
   0DCC 12s00r00           3088 	lcall	_uip_htons
   0DCF AC 82              3089 	mov	r4,dpl
   0DD1 AD 83              3090 	mov	r5,dph
   0DD3 D0 07              3091 	pop	ar7
   0DD5 E4                 3092 	clr	a
   0DD6 E5*00              3093 	mov	a,_bp
   0DD8 24 03              3094 	add	a,#0x03
   0DDA F8                 3095 	mov	r0,a
   0DDB 08                 3096 	inc	r0
   0DDC 08                 3097 	inc	r0
   0DDD 08                 3098 	inc	r0
   0DDE A6 05              3099 	mov	@r0,ar5
   0DE0 18                 3100 	dec	r0
   0DE1 A6 04              3101 	mov	@r0,ar4
   0DE3 18                 3102 	dec	r0
   0DE4 76 00              3103 	mov	@r0,#0x00
   0DE6 18                 3104 	dec	r0
   0DE7 76 00              3105 	mov	@r0,#0x00
   0DE9 90s00r1F           3106 	mov	dptr,#(_s + 0x001f)
   0DEC E0                 3107 	movx	a,@dptr
   0DED FD                 3108 	mov	r5,a
   0DEE A3                 3109 	inc	dptr
   0DEF E0                 3110 	movx	a,@dptr
   0DF0 FF                 3111 	mov	r7,a
   0DF1 8D 82              3112 	mov	dpl,r5
   0DF3 8F 83              3113 	mov	dph,r7
   0DF5 12s00r00           3114 	lcall	_uip_htons
   0DF8 AD 82              3115 	mov	r5,dpl
   0DFA AF 83              3116 	mov	r7,dph
   0DFC E4                 3117 	clr	a
   0DFD FC                 3118 	mov	r4,a
   0DFE FB                 3119 	mov	r3,a
   0DFF E5*00              3120 	mov	a,_bp
   0E01 24 03              3121 	add	a,#0x03
   0E03 F8                 3122 	mov	r0,a
   0E04 ED                 3123 	mov	a,r5
   0E05 26                 3124 	add	a,@r0
   0E06 FD                 3125 	mov	r5,a
   0E07 EF                 3126 	mov	a,r7
   0E08 08                 3127 	inc	r0
   0E09 36                 3128 	addc	a,@r0
   0E0A FF                 3129 	mov	r7,a
   0E0B EC                 3130 	mov	a,r4
   0E0C 08                 3131 	inc	r0
   0E0D 36                 3132 	addc	a,@r0
   0E0E FC                 3133 	mov	r4,a
   0E0F EB                 3134 	mov	a,r3
   0E10 08                 3135 	inc	r0
   0E11 36                 3136 	addc	a,@r0
   0E12 54 01              3137 	anl	a,#0x01
   0E14 A2 E0              3138 	mov	c,acc.0
   0E16 CC                 3139 	xch	a,r4
   0E17 13                 3140 	rrc	a
   0E18 CC                 3141 	xch	a,r4
   0E19 13                 3142 	rrc	a
   0E1A CC                 3143 	xch	a,r4
   0E1B FB                 3144 	mov	r3,a
   0E1C EF                 3145 	mov	a,r7
   0E1D C3                 3146 	clr	c
   0E1E 13                 3147 	rrc	a
   0E1F 4C                 3148 	orl	a,r4
   0E20 FC                 3149 	mov	r4,a
   0E21 EF                 3150 	mov	a,r7
   0E22 54 01              3151 	anl	a,#0x01
   0E24 A2 E0              3152 	mov	c,acc.0
   0E26 CD                 3153 	xch	a,r5
   0E27 13                 3154 	rrc	a
   0E28 CD                 3155 	xch	a,r5
   0E29 13                 3156 	rrc	a
   0E2A CD                 3157 	xch	a,r5
   0E2B FF                 3158 	mov	r7,a
   0E2C EB                 3159 	mov	a,r3
   0E2D C3                 3160 	clr	c
   0E2E 13                 3161 	rrc	a
   0E2F FB                 3162 	mov	r3,a
   0E30 EC                 3163 	mov	a,r4
   0E31 13                 3164 	rrc	a
   0E32 FC                 3165 	mov	r4,a
   0E33 EF                 3166 	mov	a,r7
   0E34 13                 3167 	rrc	a
   0E35 FF                 3168 	mov	r7,a
   0E36 ED                 3169 	mov	a,r5
   0E37 13                 3170 	rrc	a
   0E38 FD                 3171 	mov	r5,a
   0E39 90s00r10           3172 	mov	dptr,#(_s + 0x0010)
   0E3C F0                 3173 	movx	@dptr,a
   0E3D A3                 3174 	inc	dptr
   0E3E EF                 3175 	mov	a,r7
   0E3F F0                 3176 	movx	@dptr,a
   0E40 A3                 3177 	inc	dptr
   0E41 EC                 3178 	mov	a,r4
   0E42 F0                 3179 	movx	@dptr,a
   0E43 A3                 3180 	inc	dptr
   0E44 EB                 3181 	mov	a,r3
   0E45 F0                 3182 	movx	@dptr,a
                           3183 ;	../../core/net/dhcpc.c:370: xid++;
   0E46 90s00r31           3184 	mov	dptr,#_xid
   0E49 E0                 3185 	movx	a,@dptr
   0E4A 24 01              3186 	add	a,#0x01
   0E4C F0                 3187 	movx	@dptr,a
   0E4D A3                 3188 	inc	dptr
   0E4E E0                 3189 	movx	a,@dptr
   0E4F 34 00              3190 	addc	a,#0x00
   0E51 F0                 3191 	movx	@dptr,a
   0E52 A3                 3192 	inc	dptr
   0E53 E0                 3193 	movx	a,@dptr
   0E54 34 00              3194 	addc	a,#0x00
   0E56 F0                 3195 	movx	@dptr,a
   0E57 A3                 3196 	inc	dptr
   0E58 E0                 3197 	movx	a,@dptr
   0E59 34 00              3198 	addc	a,#0x00
   0E5B F0                 3199 	movx	@dptr,a
                           3200 ;	../../core/net/dhcpc.c:395: PT_END(&s.pt);
   0E5C D0 07              3201 	pop	ar7
                           3202 ;	../../core/net/dhcpc.c:372: while(ev != tcpip_event) {
   0E5E                    3203 00182$:
   0E5E 90s00r00           3204 	mov	dptr,#_tcpip_event
   0E61 E0                 3205 	movx	a,@dptr
   0E62 FD                 3206 	mov	r5,a
   0E63 EF                 3207 	mov	a,r7
   0E64 B5 05 02           3208 	cjne	a,ar5,00332$
   0E67 80 2D              3209 	sjmp	00184$
   0E69                    3210 00332$:
                           3211 ;	../../core/net/dhcpc.c:373: tcpip_poll_udp(s.conn);
   0E69 90s00r03           3212 	mov	dptr,#(_s + 0x0003)
   0E6C E0                 3213 	movx	a,@dptr
   0E6D FB                 3214 	mov	r3,a
   0E6E A3                 3215 	inc	dptr
   0E6F E0                 3216 	movx	a,@dptr
   0E70 FC                 3217 	mov	r4,a
   0E71 A3                 3218 	inc	dptr
   0E72 E0                 3219 	movx	a,@dptr
   0E73 FD                 3220 	mov	r5,a
   0E74 8B 82              3221 	mov	dpl,r3
   0E76 8C 83              3222 	mov	dph,r4
   0E78 8D F0              3223 	mov	b,r5
   0E7A C0 07              3224 	push	ar7
   0E7C 12s00r00           3225 	lcall	_tcpip_poll_udp
   0E7F D0 07              3226 	pop	ar7
                           3227 ;	../../core/net/dhcpc.c:374: PT_YIELD(&s.pt);
   0E81 7E 00              3228 	mov	r6,#0x00
   0E83 90s00r00           3229 	mov	dptr,#_s
   0E86 74 76              3230 	mov	a,#0x76
   0E88 F0                 3231 	movx	@dptr,a
   0E89 A3                 3232 	inc	dptr
   0E8A 74 01              3233 	mov	a,#0x01
   0E8C F0                 3234 	movx	@dptr,a
   0E8D                    3235 00176$:
   0E8D EE                 3236 	mov	a,r6
   0E8E 70 CE              3237 	jnz	00182$
   0E90 75 82 01           3238 	mov	dpl,#0x01
   0E93 02s0FrC7           3239 	ljmp	00202$
   0E96                    3240 00184$:
                           3241 ;	../../core/net/dhcpc.c:376: send_request();
   0E96 C0 07              3242 	push	ar7
   0E98 12s04r60           3243 	lcall	_send_request
   0E9B D0 07              3244 	pop	ar7
                           3245 ;	../../core/net/dhcpc.c:377: ticks = IMIN(s.ticks / 2, MAX_TICKS);
   0E9D 90s00r10           3246 	mov	dptr,#(_s + 0x0010)
   0EA0 E0                 3247 	movx	a,@dptr
   0EA1 FA                 3248 	mov	r2,a
   0EA2 A3                 3249 	inc	dptr
   0EA3 E0                 3250 	movx	a,@dptr
   0EA4 FB                 3251 	mov	r3,a
   0EA5 A3                 3252 	inc	dptr
   0EA6 E0                 3253 	movx	a,@dptr
   0EA7 FC                 3254 	mov	r4,a
   0EA8 A3                 3255 	inc	dptr
   0EA9 E0                 3256 	movx	a,@dptr
   0EAA C3                 3257 	clr	c
   0EAB 13                 3258 	rrc	a
   0EAC FD                 3259 	mov	r5,a
   0EAD EC                 3260 	mov	a,r4
   0EAE 13                 3261 	rrc	a
   0EAF FC                 3262 	mov	r4,a
   0EB0 EB                 3263 	mov	a,r3
   0EB1 13                 3264 	rrc	a
   0EB2 FB                 3265 	mov	r3,a
   0EB3 EA                 3266 	mov	a,r2
   0EB4 13                 3267 	rrc	a
   0EB5 FA                 3268 	mov	r2,a
   0EB6 C3                 3269 	clr	c
   0EB7 94 FF              3270 	subb	a,#0xFF
   0EB9 EB                 3271 	mov	a,r3
   0EBA 94 7F              3272 	subb	a,#0x7F
   0EBC EC                 3273 	mov	a,r4
   0EBD 94 00              3274 	subb	a,#0x00
   0EBF ED                 3275 	mov	a,r5
   0EC0 94 00              3276 	subb	a,#0x00
   0EC2 40 08              3277 	jc	00207$
   0EC4 7A FF              3278 	mov	r2,#0xFF
   0EC6 7B 7F              3279 	mov	r3,#0x7F
   0EC8 7C 00              3280 	mov	r4,#0x00
   0ECA 7D 00              3281 	mov	r5,#0x00
   0ECC                    3282 00207$:
   0ECC C0 07              3283 	push	ar7
   0ECE A8*00              3284 	mov	r0,_bp
   0ED0 08                 3285 	inc	r0
   0ED1 A6 02              3286 	mov	@r0,ar2
   0ED3 08                 3287 	inc	r0
   0ED4 A6 03              3288 	mov	@r0,ar3
                           3289 ;	../../core/net/dhcpc.c:378: s.ticks -= ticks;
   0ED6 90s00r10           3290 	mov	dptr,#(_s + 0x0010)
   0ED9 E5*00              3291 	mov	a,_bp
   0EDB 24 03              3292 	add	a,#0x03
   0EDD F8                 3293 	mov	r0,a
   0EDE E0                 3294 	movx	a,@dptr
   0EDF F6                 3295 	mov	@r0,a
   0EE0 A3                 3296 	inc	dptr
   0EE1 E0                 3297 	movx	a,@dptr
   0EE2 08                 3298 	inc	r0
   0EE3 F6                 3299 	mov	@r0,a
   0EE4 A3                 3300 	inc	dptr
   0EE5 E0                 3301 	movx	a,@dptr
   0EE6 08                 3302 	inc	r0
   0EE7 F6                 3303 	mov	@r0,a
   0EE8 A3                 3304 	inc	dptr
   0EE9 E0                 3305 	movx	a,@dptr
   0EEA 08                 3306 	inc	r0
   0EEB F6                 3307 	mov	@r0,a
   0EEC A8*00              3308 	mov	r0,_bp
   0EEE 08                 3309 	inc	r0
   0EEF 86 03              3310 	mov	ar3,@r0
   0EF1 08                 3311 	inc	r0
   0EF2 86 04              3312 	mov	ar4,@r0
   0EF4 E4                 3313 	clr	a
   0EF5 FD                 3314 	mov	r5,a
   0EF6 FF                 3315 	mov	r7,a
   0EF7 E5*00              3316 	mov	a,_bp
   0EF9 24 03              3317 	add	a,#0x03
   0EFB F8                 3318 	mov	r0,a
   0EFC E6                 3319 	mov	a,@r0
   0EFD C3                 3320 	clr	c
   0EFE 9B                 3321 	subb	a,r3
   0EFF FB                 3322 	mov	r3,a
   0F00 08                 3323 	inc	r0
   0F01 E6                 3324 	mov	a,@r0
   0F02 9C                 3325 	subb	a,r4
   0F03 FC                 3326 	mov	r4,a
   0F04 08                 3327 	inc	r0
   0F05 E6                 3328 	mov	a,@r0
   0F06 9D                 3329 	subb	a,r5
   0F07 FD                 3330 	mov	r5,a
   0F08 08                 3331 	inc	r0
   0F09 E6                 3332 	mov	a,@r0
   0F0A 9F                 3333 	subb	a,r7
   0F0B FF                 3334 	mov	r7,a
   0F0C 90s00r10           3335 	mov	dptr,#(_s + 0x0010)
   0F0F EB                 3336 	mov	a,r3
   0F10 F0                 3337 	movx	@dptr,a
   0F11 A3                 3338 	inc	dptr
   0F12 EC                 3339 	mov	a,r4
   0F13 F0                 3340 	movx	@dptr,a
   0F14 A3                 3341 	inc	dptr
   0F15 ED                 3342 	mov	a,r5
   0F16 F0                 3343 	movx	@dptr,a
   0F17 A3                 3344 	inc	dptr
   0F18 EF                 3345 	mov	a,r7
   0F19 F0                 3346 	movx	@dptr,a
                           3347 ;	../../core/net/dhcpc.c:379: etimer_set(&s.etimer, ticks);
   0F1A C0 07              3348 	push	ar7
   0F1C A8*00              3349 	mov	r0,_bp
   0F1E 08                 3350 	inc	r0
   0F1F E6                 3351 	mov	a,@r0
   0F20 C0 E0              3352 	push	acc
   0F22 08                 3353 	inc	r0
   0F23 E6                 3354 	mov	a,@r0
   0F24 C0 E0              3355 	push	acc
   0F26 90s00r06           3356 	mov	dptr,#(_s + 0x0006)
   0F29 75 F0 00           3357 	mov	b,#0x00
   0F2C 12s00r00           3358 	lcall	_etimer_set
   0F2F 15 81              3359 	dec	sp
   0F31 15 81              3360 	dec	sp
   0F33 D0 07              3361 	pop	ar7
                           3362 ;	../../core/net/dhcpc.c:395: PT_END(&s.pt);
   0F35 D0 07              3363 	pop	ar7
                           3364 ;	../../core/net/dhcpc.c:381: PT_YIELD(&s.pt);
   0F37                    3365 00188$:
   0F37 7E 00              3366 	mov	r6,#0x00
   0F39 90s00r00           3367 	mov	dptr,#_s
   0F3C 74 7D              3368 	mov	a,#0x7D
   0F3E F0                 3369 	movx	@dptr,a
   0F3F A3                 3370 	inc	dptr
   0F40 74 01              3371 	mov	a,#0x01
   0F42 F0                 3372 	movx	@dptr,a
   0F43                    3373 00185$:
   0F43 EE                 3374 	mov	a,r6
   0F44 70 05              3375 	jnz	00189$
   0F46 75 82 01           3376 	mov	dpl,#0x01
   0F49 80 7C              3377 	sjmp	00202$
   0F4B                    3378 00189$:
                           3379 ;	../../core/net/dhcpc.c:382: if(ev == tcpip_event && uip_newdata() && msg_for_me() == DHCPACK) {
   0F4B 90s00r00           3380 	mov	dptr,#_tcpip_event
   0F4E E0                 3381 	movx	a,@dptr
   0F4F FE                 3382 	mov	r6,a
   0F50 EF                 3383 	mov	a,r7
   0F51 B5 06 23           3384 	cjne	a,ar6,00196$
   0F54 90s00r00           3385 	mov	dptr,#_uip_flags
   0F57 E0                 3386 	movx	a,@dptr
   0F58 FE                 3387 	mov	r6,a
   0F59 30 E1 1B           3388 	jnb	acc.1,00196$
   0F5C C0 07              3389 	push	ar7
   0F5E 12s08r2E           3390 	lcall	_msg_for_me
   0F61 AD 82              3391 	mov	r5,dpl
   0F63 AE 83              3392 	mov	r6,dph
   0F65 D0 07              3393 	pop	ar7
   0F67 BD 05 0D           3394 	cjne	r5,#0x05,00196$
   0F6A BE 00 0A           3395 	cjne	r6,#0x00,00196$
                           3396 ;	../../core/net/dhcpc.c:383: parse_msg();
   0F6D C0 07              3397 	push	ar7
   0F6F 12s07r02           3398 	lcall	_parse_msg
   0F72 D0 07              3399 	pop	ar7
                           3400 ;	../../core/net/dhcpc.c:384: goto bound;
   0F74 02s0Cr60           3401 	ljmp	00159$
   0F77                    3402 00196$:
                           3403 ;	../../core/net/dhcpc.c:386: } while(!etimer_expired(&s.etimer));
   0F77 90s00r06           3404 	mov	dptr,#(_s + 0x0006)
   0F7A 75 F0 00           3405 	mov	b,#0x00
   0F7D C0 07              3406 	push	ar7
   0F7F 12s00r00           3407 	lcall	_etimer_expired
   0F82 E5 82              3408 	mov	a,dpl
   0F84 85 83 F0           3409 	mov	b,dph
   0F87 D0 07              3410 	pop	ar7
   0F89 45 F0              3411 	orl	a,b
   0F8B 60 AA              3412 	jz	00188$
                           3413 ;	../../core/net/dhcpc.c:387: } while(s.ticks >= CLOCK_SECOND*3);
   0F8D 90s00r10           3414 	mov	dptr,#(_s + 0x0010)
   0F90 E0                 3415 	movx	a,@dptr
   0F91 FB                 3416 	mov	r3,a
   0F92 A3                 3417 	inc	dptr
   0F93 E0                 3418 	movx	a,@dptr
   0F94 FC                 3419 	mov	r4,a
   0F95 A3                 3420 	inc	dptr
   0F96 E0                 3421 	movx	a,@dptr
   0F97 FD                 3422 	mov	r5,a
   0F98 A3                 3423 	inc	dptr
   0F99 E0                 3424 	movx	a,@dptr
   0F9A FE                 3425 	mov	r6,a
   0F9B C3                 3426 	clr	c
   0F9C EB                 3427 	mov	a,r3
   0F9D 94 80              3428 	subb	a,#0x80
   0F9F EC                 3429 	mov	a,r4
   0FA0 94 01              3430 	subb	a,#0x01
   0FA2 ED                 3431 	mov	a,r5
   0FA3 94 00              3432 	subb	a,#0x00
   0FA5 EE                 3433 	mov	a,r6
   0FA6 94 00              3434 	subb	a,#0x00
   0FA8 40 03              3435 	jc	00342$
   0FAA 02s0Er5E           3436 	ljmp	00182$
   0FAD                    3437 00342$:
                           3438 ;	../../core/net/dhcpc.c:392: dhcpc_unconfigured(&s);
   0FAD 90s00r00           3439 	mov	dptr,#_s
   0FB0 75 F0 00           3440 	mov	b,#0x00
   0FB3 C0 07              3441 	push	ar7
   0FB5 12s00r00           3442 	lcall	_dhcpc_unconfigured
   0FB8 D0 07              3443 	pop	ar7
                           3444 ;	../../core/net/dhcpc.c:393: goto init;
   0FBA 02s0Ar25           3445 	ljmp	00102$
                           3446 ;	../../core/net/dhcpc.c:395: PT_END(&s.pt);
   0FBD                    3447 00201$:
   0FBD 90s00r00           3448 	mov	dptr,#_s
   0FC0 E4                 3449 	clr	a
   0FC1 F0                 3450 	movx	@dptr,a
   0FC2 A3                 3451 	inc	dptr
   0FC3 F0                 3452 	movx	@dptr,a
   0FC4 75 82 03           3453 	mov	dpl,#0x03
   0FC7                    3454 00202$:
   0FC7 85*00 81           3455 	mov	sp,_bp
   0FCA D0*00              3456 	pop	_bp
   0FCC 22                 3457 	ret
                           3458 ;------------------------------------------------------------
                           3459 ;Allocation info for local variables in function 'dhcpc_init'
                           3460 ;------------------------------------------------------------
                           3461 ;mac_len                   Allocated to stack - _bp -4
                           3462 ;mac_addr                  Allocated to registers r5 r6 r7 
                           3463 ;addr                      Allocated to stack - _bp +1
                           3464 ;------------------------------------------------------------
                           3465 ;	../../core/net/dhcpc.c:399: dhcpc_init(const void *mac_addr, int mac_len)
                           3466 ;	-----------------------------------------
                           3467 ;	 function dhcpc_init
                           3468 ;	-----------------------------------------
   0FCD                    3469 _dhcpc_init:
   0FCD C0*00              3470 	push	_bp
   0FCF E5 81              3471 	mov	a,sp
   0FD1 F5*00              3472 	mov	_bp,a
   0FD3 24 04              3473 	add	a,#0x04
   0FD5 F5 81              3474 	mov	sp,a
   0FD7 AD 82              3475 	mov	r5,dpl
   0FD9 AE 83              3476 	mov	r6,dph
   0FDB AF F0              3477 	mov	r7,b
                           3478 ;	../../core/net/dhcpc.c:403: s.mac_addr = mac_addr;
   0FDD 90s00r14           3479 	mov	dptr,#(_s + 0x0014)
   0FE0 ED                 3480 	mov	a,r5
   0FE1 F0                 3481 	movx	@dptr,a
   0FE2 A3                 3482 	inc	dptr
   0FE3 EE                 3483 	mov	a,r6
   0FE4 F0                 3484 	movx	@dptr,a
   0FE5 A3                 3485 	inc	dptr
   0FE6 EF                 3486 	mov	a,r7
   0FE7 F0                 3487 	movx	@dptr,a
                           3488 ;	../../core/net/dhcpc.c:404: s.mac_len  = mac_len;
   0FE8 90s00r17           3489 	mov	dptr,#(_s + 0x0017)
   0FEB E5*00              3490 	mov	a,_bp
   0FED 24 FC              3491 	add	a,#0xfc
   0FEF F8                 3492 	mov	r0,a
   0FF0 E6                 3493 	mov	a,@r0
   0FF1 F0                 3494 	movx	@dptr,a
   0FF2 A3                 3495 	inc	dptr
   0FF3 08                 3496 	inc	r0
   0FF4 E6                 3497 	mov	a,@r0
   0FF5 F0                 3498 	movx	@dptr,a
                           3499 ;	../../core/net/dhcpc.c:406: s.state = STATE_INITIAL;
   0FF6 90s00r02           3500 	mov	dptr,#(_s + 0x0002)
   0FF9 E4                 3501 	clr	a
   0FFA F0                 3502 	movx	@dptr,a
                           3503 ;	../../core/net/dhcpc.c:407: uip_ipaddr(&addr, 255,255,255,255);
   0FFB E5*00              3504 	mov	a,_bp
   0FFD 04                 3505 	inc	a
   0FFE F8                 3506 	mov	r0,a
   0FFF 76 FF              3507 	mov	@r0,#0xFF
   1001 AF*00              3508 	mov	r7,_bp
   1003 0F                 3509 	inc	r7
   1004 EF                 3510 	mov	a,r7
   1005 04                 3511 	inc	a
   1006 F8                 3512 	mov	r0,a
   1007 76 FF              3513 	mov	@r0,#0xFF
   1009 74 02              3514 	mov	a,#0x02
   100B 2F                 3515 	add	a,r7
   100C F8                 3516 	mov	r0,a
   100D 76 FF              3517 	mov	@r0,#0xFF
   100F 74 03              3518 	mov	a,#0x03
   1011 2F                 3519 	add	a,r7
   1012 F8                 3520 	mov	r0,a
   1013 76 FF              3521 	mov	@r0,#0xFF
                           3522 ;	../../core/net/dhcpc.c:408: s.conn = udp_new(&addr, UIP_HTONS(DHCPC_SERVER_PORT), NULL);
   1015 AF*00              3523 	mov	r7,_bp
   1017 0F                 3524 	inc	r7
   1018 7E 00              3525 	mov	r6,#0x00
   101A 7D 40              3526 	mov	r5,#0x40
   101C E4                 3527 	clr	a
   101D C0 E0              3528 	push	acc
   101F C0 E0              3529 	push	acc
   1021 C0 E0              3530 	push	acc
   1023 E4                 3531 	clr	a
   1024 C0 E0              3532 	push	acc
   1026 74 43              3533 	mov	a,#0x43
   1028 C0 E0              3534 	push	acc
   102A 8F 82              3535 	mov	dpl,r7
   102C 8E 83              3536 	mov	dph,r6
   102E 8D F0              3537 	mov	b,r5
   1030 12s00r00           3538 	lcall	_udp_new
   1033 AD 82              3539 	mov	r5,dpl
   1035 AE 83              3540 	mov	r6,dph
   1037 AF F0              3541 	mov	r7,b
   1039 E5 81              3542 	mov	a,sp
   103B 24 FB              3543 	add	a,#0xfb
   103D F5 81              3544 	mov	sp,a
   103F 90s00r03           3545 	mov	dptr,#(_s + 0x0003)
   1042 ED                 3546 	mov	a,r5
   1043 F0                 3547 	movx	@dptr,a
   1044 A3                 3548 	inc	dptr
   1045 EE                 3549 	mov	a,r6
   1046 F0                 3550 	movx	@dptr,a
   1047 A3                 3551 	inc	dptr
   1048 EF                 3552 	mov	a,r7
   1049 F0                 3553 	movx	@dptr,a
                           3554 ;	../../core/net/dhcpc.c:409: if(s.conn != NULL) {
   104A 90s00r03           3555 	mov	dptr,#(_s + 0x0003)
   104D E0                 3556 	movx	a,@dptr
   104E FD                 3557 	mov	r5,a
   104F A3                 3558 	inc	dptr
   1050 E0                 3559 	movx	a,@dptr
   1051 FE                 3560 	mov	r6,a
   1052 A3                 3561 	inc	dptr
   1053 E0                 3562 	movx	a,@dptr
   1054 FF                 3563 	mov	r7,a
   1055 ED                 3564 	mov	a,r5
   1056 4E                 3565 	orl	a,r6
   1057 60 17              3566 	jz	00105$
                           3567 ;	../../core/net/dhcpc.c:410: udp_bind(s.conn, UIP_HTONS(DHCPC_CLIENT_PORT));
   1059 74 04              3568 	mov	a,#0x04
   105B 2D                 3569 	add	a,r5
   105C FD                 3570 	mov	r5,a
   105D E4                 3571 	clr	a
   105E 3E                 3572 	addc	a,r6
   105F FE                 3573 	mov	r6,a
   1060 8D 82              3574 	mov	dpl,r5
   1062 8E 83              3575 	mov	dph,r6
   1064 8F F0              3576 	mov	b,r7
   1066 E4                 3577 	clr	a
   1067 12s00r00           3578 	lcall	__gptrput
   106A A3                 3579 	inc	dptr
   106B 74 44              3580 	mov	a,#0x44
   106D 12s00r00           3581 	lcall	__gptrput
   1070                    3582 00105$:
                           3583 ;	../../core/net/dhcpc.c:412: PT_INIT(&s.pt);
   1070 90s00r00           3584 	mov	dptr,#_s
   1073 E4                 3585 	clr	a
   1074 F0                 3586 	movx	@dptr,a
   1075 A3                 3587 	inc	dptr
   1076 F0                 3588 	movx	@dptr,a
   1077 85*00 81           3589 	mov	sp,_bp
   107A D0*00              3590 	pop	_bp
   107C 22                 3591 	ret
                           3592 ;------------------------------------------------------------
                           3593 ;Allocation info for local variables in function 'dhcpc_appcall'
                           3594 ;------------------------------------------------------------
                           3595 ;data                      Allocated to stack - _bp -5
                           3596 ;ev                        Allocated to registers r7 
                           3597 ;------------------------------------------------------------
                           3598 ;	../../core/net/dhcpc.c:416: dhcpc_appcall(process_event_t ev, void *data)
                           3599 ;	-----------------------------------------
                           3600 ;	 function dhcpc_appcall
                           3601 ;	-----------------------------------------
   107D                    3602 _dhcpc_appcall:
   107D C0*00              3603 	push	_bp
   107F 85 81*00           3604 	mov	_bp,sp
   1082 AF 82              3605 	mov	r7,dpl
                           3606 ;	../../core/net/dhcpc.c:418: if(ev == tcpip_event || ev == PROCESS_EVENT_TIMER) {
   1084 90s00r00           3607 	mov	dptr,#_tcpip_event
   1087 E0                 3608 	movx	a,@dptr
   1088 FE                 3609 	mov	r6,a
   1089 EF                 3610 	mov	a,r7
   108A B5 06 02           3611 	cjne	a,ar6,00108$
   108D 80 03              3612 	sjmp	00101$
   108F                    3613 00108$:
   108F BF 88 1B           3614 	cjne	r7,#0x88,00104$
   1092                    3615 00101$:
                           3616 ;	../../core/net/dhcpc.c:419: handle_dhcp(ev, data);
   1092 E5*00              3617 	mov	a,_bp
   1094 24 FB              3618 	add	a,#0xfb
   1096 F8                 3619 	mov	r0,a
   1097 E6                 3620 	mov	a,@r0
   1098 C0 E0              3621 	push	acc
   109A 08                 3622 	inc	r0
   109B E6                 3623 	mov	a,@r0
   109C C0 E0              3624 	push	acc
   109E 08                 3625 	inc	r0
   109F E6                 3626 	mov	a,@r0
   10A0 C0 E0              3627 	push	acc
   10A2 8F 82              3628 	mov	dpl,r7
   10A4 12s09rC5           3629 	lcall	_handle_dhcp
   10A7 15 81              3630 	dec	sp
   10A9 15 81              3631 	dec	sp
   10AB 15 81              3632 	dec	sp
   10AD                    3633 00104$:
   10AD D0*00              3634 	pop	_bp
   10AF 22                 3635 	ret
                           3636 ;------------------------------------------------------------
                           3637 ;Allocation info for local variables in function 'dhcpc_request'
                           3638 ;------------------------------------------------------------
                           3639 ;ipaddr                    Allocated to stack - _bp +1
                           3640 ;------------------------------------------------------------
                           3641 ;	../../core/net/dhcpc.c:424: dhcpc_request(void)
                           3642 ;	-----------------------------------------
                           3643 ;	 function dhcpc_request
                           3644 ;	-----------------------------------------
   10B0                    3645 _dhcpc_request:
   10B0 C0*00              3646 	push	_bp
   10B2 E5 81              3647 	mov	a,sp
   10B4 F5*00              3648 	mov	_bp,a
   10B6 24 04              3649 	add	a,#0x04
   10B8 F5 81              3650 	mov	sp,a
                           3651 ;	../../core/net/dhcpc.c:428: if(s.state == STATE_INITIAL) {
   10BA 90s00r02           3652 	mov	dptr,#(_s + 0x0002)
   10BD E0                 3653 	movx	a,@dptr
   10BE 70 50              3654 	jnz	00106$
                           3655 ;	../../core/net/dhcpc.c:429: uip_ipaddr(&ipaddr, 0,0,0,0);
   10C0 E5*00              3656 	mov	a,_bp
   10C2 04                 3657 	inc	a
   10C3 F8                 3658 	mov	r0,a
   10C4 76 00              3659 	mov	@r0,#0x00
   10C6 AF*00              3660 	mov	r7,_bp
   10C8 0F                 3661 	inc	r7
   10C9 EF                 3662 	mov	a,r7
   10CA 04                 3663 	inc	a
   10CB F8                 3664 	mov	r0,a
   10CC 76 00              3665 	mov	@r0,#0x00
   10CE 74 02              3666 	mov	a,#0x02
   10D0 2F                 3667 	add	a,r7
   10D1 F8                 3668 	mov	r0,a
   10D2 76 00              3669 	mov	@r0,#0x00
   10D4 74 03              3670 	mov	a,#0x03
   10D6 2F                 3671 	add	a,r7
   10D7 F8                 3672 	mov	r0,a
   10D8 76 00              3673 	mov	@r0,#0x00
                           3674 ;	../../core/net/dhcpc.c:430: uip_sethostaddr(&ipaddr);
   10DA AF*00              3675 	mov	r7,_bp
   10DC 0F                 3676 	inc	r7
   10DD 7E 00              3677 	mov	r6,#0x00
   10DF 7D 40              3678 	mov	r5,#0x40
   10E1 74 04              3679 	mov	a,#0x04
   10E3 C0 E0              3680 	push	acc
   10E5 E4                 3681 	clr	a
   10E6 C0 E0              3682 	push	acc
   10E8 C0 07              3683 	push	ar7
   10EA C0 06              3684 	push	ar6
   10EC C0 05              3685 	push	ar5
   10EE 90s00r00           3686 	mov	dptr,#_uip_hostaddr
   10F1 75 F0 00           3687 	mov	b,#0x00
   10F4 12s00r00           3688 	lcall	_memcpy
   10F7 E5 81              3689 	mov	a,sp
   10F9 24 FB              3690 	add	a,#0xfb
   10FB F5 81              3691 	mov	sp,a
                           3692 ;	../../core/net/dhcpc.c:431: handle_dhcp(PROCESS_EVENT_NONE, NULL);
   10FD E4                 3693 	clr	a
   10FE C0 E0              3694 	push	acc
   1100 C0 E0              3695 	push	acc
   1102 C0 E0              3696 	push	acc
   1104 75 82 80           3697 	mov	dpl,#0x80
   1107 12s09rC5           3698 	lcall	_handle_dhcp
   110A 15 81              3699 	dec	sp
   110C 15 81              3700 	dec	sp
   110E 15 81              3701 	dec	sp
   1110                    3702 00106$:
   1110 85*00 81           3703 	mov	sp,_bp
   1113 D0*00              3704 	pop	_bp
   1115 22                 3705 	ret
                           3706 	.area CSEG    (CODE)
                           3707 	.area CONST   (CODE)
   0000                    3708 _magic_cookie:
   0000 63                 3709 	.db #0x63	; 99	'c'
   0001 82                 3710 	.db #0x82	; 130
   0002 53                 3711 	.db #0x53	; 83	'S'
   0003 63                 3712 	.db #0x63	; 99	'c'
                           3713 	.area XINIT   (CODE)
                           3714 	.area CABS    (ABS,CODE)
