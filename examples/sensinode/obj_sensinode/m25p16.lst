                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:32 2013
                              5 ;--------------------------------------------------------
                              6 	.module m25p16
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _n740_ser_par_get
                             13 	.globl _n740_ser_par_set
                             14 	.globl _IRCON2_P2IF
                             15 	.globl _IRCON2_UTX0IF
                             16 	.globl _IRCON2_UTX1IF
                             17 	.globl _IRCON2_P1IF
                             18 	.globl _IRCON2_WDTIF
                             19 	.globl _CY
                             20 	.globl _AC
                             21 	.globl _F0
                             22 	.globl _RS1
                             23 	.globl _RS0
                             24 	.globl _OV
                             25 	.globl _F1
                             26 	.globl _P
                             27 	.globl _IRCON_DMAIF
                             28 	.globl _IRCON_T1IF
                             29 	.globl _IRCON_T2IF
                             30 	.globl _IRCON_T3IF
                             31 	.globl _IRCON_T4IF
                             32 	.globl _IRCON_P0IF
                             33 	.globl _IRCON_STIF
                             34 	.globl _IEN1_DMAIE
                             35 	.globl _IEN1_T1IE
                             36 	.globl _IEN1_T2IE
                             37 	.globl _IEN1_T3IE
                             38 	.globl _IEN1_T4IE
                             39 	.globl _IEN1_P0IE
                             40 	.globl _IEN0_RFERRIE
                             41 	.globl _IEN0_ADCIE
                             42 	.globl _IEN0_URX0IE
                             43 	.globl _IEN0_URX1IE
                             44 	.globl _IEN0_ENCIE
                             45 	.globl _IEN0_STIE
                             46 	.globl _IEN0_EA
                             47 	.globl _EA
                             48 	.globl _P2_4
                             49 	.globl _P2_3
                             50 	.globl _P2_2
                             51 	.globl _P2_1
                             52 	.globl _P2_0
                             53 	.globl _S0CON_ENCIF_0
                             54 	.globl _S0CON_ENCIF_1
                             55 	.globl _P1_7
                             56 	.globl _P1_6
                             57 	.globl _P1_5
                             58 	.globl _P1_4
                             59 	.globl _P1_3
                             60 	.globl _P1_2
                             61 	.globl _P1_1
                             62 	.globl _P1_0
                             63 	.globl _TCON_IT0
                             64 	.globl _TCON_RFERRIF
                             65 	.globl _TCON_IT1
                             66 	.globl _TCON_URX0IF
                             67 	.globl _TCON_ADCIF
                             68 	.globl _TCON_URX1IF
                             69 	.globl _P0_0
                             70 	.globl _P0_1
                             71 	.globl _P0_2
                             72 	.globl _P0_3
                             73 	.globl _P0_4
                             74 	.globl _P0_5
                             75 	.globl _P0_6
                             76 	.globl _P0_7
                             77 	.globl _P2DIR
                             78 	.globl _P1DIR
                             79 	.globl _P0DIR
                             80 	.globl _U1GCR
                             81 	.globl _U1UCR
                             82 	.globl _U1BAUD
                             83 	.globl _U1BUF
                             84 	.globl _U1CSR
                             85 	.globl _P2INP
                             86 	.globl _P1INP
                             87 	.globl _P2SEL
                             88 	.globl _P1SEL
                             89 	.globl _P0SEL
                             90 	.globl _ADCCFG
                             91 	.globl _PERCFG
                             92 	.globl _B
                             93 	.globl _T4CC1
                             94 	.globl _T4CCTL1
                             95 	.globl _T4CC0
                             96 	.globl _T4CCTL0
                             97 	.globl _T4CTL
                             98 	.globl _T4CNT
                             99 	.globl _RFIF
                            100 	.globl _IRCON2
                            101 	.globl _T1CCTL2
                            102 	.globl _T1CCTL1
                            103 	.globl _T1CCTL0
                            104 	.globl _T1CTL
                            105 	.globl _T1CNTH
                            106 	.globl _T1CNTL
                            107 	.globl _RFST
                            108 	.globl _ACC
                            109 	.globl _T1CC2H
                            110 	.globl _T1CC2L
                            111 	.globl _T1CC1H
                            112 	.globl _T1CC1L
                            113 	.globl _T1CC0H
                            114 	.globl _T1CC0L
                            115 	.globl _RFD
                            116 	.globl _TIMIF
                            117 	.globl _DMAREQ
                            118 	.globl _DMAARM
                            119 	.globl _DMA0CFGH
                            120 	.globl _DMA0CFGL
                            121 	.globl _DMA1CFGH
                            122 	.globl _DMA1CFGL
                            123 	.globl _DMAIRQ
                            124 	.globl _PSW
                            125 	.globl _T3CC1
                            126 	.globl _T3CCTL1
                            127 	.globl _T3CC0
                            128 	.globl _T3CCTL0
                            129 	.globl _T3CTL
                            130 	.globl _T3CNT
                            131 	.globl _WDCTL
                            132 	.globl _T2CON
                            133 	.globl _MEMCTR
                            134 	.globl _CLKCON
                            135 	.globl _U0GCR
                            136 	.globl _U0UCR
                            137 	.globl _T2CNF
                            138 	.globl _U0BAUD
                            139 	.globl _U0BUF
                            140 	.globl _IRCON
                            141 	.globl _SLEEP
                            142 	.globl _RNDH
                            143 	.globl _RNDL
                            144 	.globl _ADCH
                            145 	.globl _ADCL
                            146 	.globl _IP1
                            147 	.globl _IEN1
                            148 	.globl _RCCTL
                            149 	.globl _ADCCON3
                            150 	.globl _ADCCON2
                            151 	.globl _ADCCON1
                            152 	.globl _ENCCS
                            153 	.globl _ENCDO
                            154 	.globl _ENCDI
                            155 	.globl _FWDATA
                            156 	.globl _FCTL
                            157 	.globl _FADDRH
                            158 	.globl _FADDRL
                            159 	.globl _FWT
                            160 	.globl _IP0
                            161 	.globl _IEN0
                            162 	.globl _IE
                            163 	.globl _T2THD
                            164 	.globl _T2TLD
                            165 	.globl _T2CAPHPH
                            166 	.globl _T2CAPLPL
                            167 	.globl _T2OF2
                            168 	.globl _T2OF1
                            169 	.globl _T2OF0
                            170 	.globl _P2
                            171 	.globl _PSBANK
                            172 	.globl _FMAP
                            173 	.globl _T2PEROF2
                            174 	.globl _T2PEROF1
                            175 	.globl _T2PEROF0
                            176 	.globl _S1CON
                            177 	.globl _IEN2
                            178 	.globl _HSRC
                            179 	.globl _S0CON
                            180 	.globl _ST2
                            181 	.globl _ST1
                            182 	.globl _ST0
                            183 	.globl _T2CMP
                            184 	.globl __XPAGE
                            185 	.globl _DPS
                            186 	.globl _RFIM
                            187 	.globl _P1
                            188 	.globl _P0INP
                            189 	.globl _P1IEN
                            190 	.globl _PICTL
                            191 	.globl _P2IFG
                            192 	.globl _P1IFG
                            193 	.globl _P0IFG
                            194 	.globl _TCON
                            195 	.globl _PCON
                            196 	.globl _U0CSR
                            197 	.globl _DPH1
                            198 	.globl _DPL1
                            199 	.globl _DPH0
                            200 	.globl _DPL0
                            201 	.globl _SP
                            202 	.globl _P0
                            203 	.globl _ADC_SHADOW
                            204 	.globl _U1BUF_SHADOW
                            205 	.globl _RFD_SHADOW
                            206 	.globl _U0BUF_SHADOW
                            207 	.globl _RFSTATUS
                            208 	.globl _CHIPID
                            209 	.globl _CHVER
                            210 	.globl _FSMTC1
                            211 	.globl _RXFIFOCNT
                            212 	.globl _IOCFG3
                            213 	.globl _IOCFG2
                            214 	.globl _IOCFG1
                            215 	.globl _IOCFG0
                            216 	.globl _SHORTADDRL
                            217 	.globl _SHORTADDRH
                            218 	.globl _PANIDL
                            219 	.globl _PANIDH
                            220 	.globl _IEEE_ADDR7
                            221 	.globl _IEEE_ADDR6
                            222 	.globl _IEEE_ADDR5
                            223 	.globl _IEEE_ADDR4
                            224 	.globl _IEEE_ADDR3
                            225 	.globl _IEEE_ADDR2
                            226 	.globl _IEEE_ADDR1
                            227 	.globl _IEEE_ADDR0
                            228 	.globl _DACTSTL
                            229 	.globl _DACTSTH
                            230 	.globl _ADCTSTL
                            231 	.globl _ADCTSTH
                            232 	.globl _FSMSTATE
                            233 	.globl _AGCCTRLL
                            234 	.globl _AGCCTRLH
                            235 	.globl _MANORL
                            236 	.globl _MANORH
                            237 	.globl _MANANDL
                            238 	.globl _MANANDH
                            239 	.globl _FSMTCL
                            240 	.globl _FSMTCH
                            241 	.globl _RFPWR
                            242 	.globl _CSPT
                            243 	.globl _CSPCTRL
                            244 	.globl _CSPZ
                            245 	.globl _CSPY
                            246 	.globl _CSPX
                            247 	.globl _FSCTRLL
                            248 	.globl _FSCTRLH
                            249 	.globl _RXCTRL1L
                            250 	.globl _RXCTRL1H
                            251 	.globl _RXCTRL0L
                            252 	.globl _RXCTRL0H
                            253 	.globl _TXCTRLL
                            254 	.globl _TXCTRLH
                            255 	.globl _SYNCWORDL
                            256 	.globl _SYNCWORDH
                            257 	.globl _RSSIL
                            258 	.globl _RSSIH
                            259 	.globl _MDMCTRL1L
                            260 	.globl _MDMCTRL1H
                            261 	.globl _MDMCTRL0L
                            262 	.globl _MDMCTRL0H
                            263 	.globl _m25p16_wren
                            264 	.globl _m25p16_wrdi
                            265 	.globl _m25p16_rdid
                            266 	.globl _m25p16_rdsr
                            267 	.globl _m25p16_wrsr
                            268 	.globl _m25p16_read
                            269 	.globl _m25p16_pp
                            270 	.globl _m25p16_se
                            271 	.globl _m25p16_be
                            272 	.globl _m25p16_dp
                            273 	.globl _m25p16_res
                            274 	.globl _m25p16_res_res
                            275 ;--------------------------------------------------------
                            276 ; special function registers
                            277 ;--------------------------------------------------------
                            278 	.area RSEG    (ABS,DATA)
   0000                     279 	.org 0x0000
                    0080    280 _P0	=	0x0080
                    0081    281 _SP	=	0x0081
                    0082    282 _DPL0	=	0x0082
                    0083    283 _DPH0	=	0x0083
                    0084    284 _DPL1	=	0x0084
                    0085    285 _DPH1	=	0x0085
                    0086    286 _U0CSR	=	0x0086
                    0087    287 _PCON	=	0x0087
                    0088    288 _TCON	=	0x0088
                    0089    289 _P0IFG	=	0x0089
                    008A    290 _P1IFG	=	0x008a
                    008B    291 _P2IFG	=	0x008b
                    008C    292 _PICTL	=	0x008c
                    008D    293 _P1IEN	=	0x008d
                    008F    294 _P0INP	=	0x008f
                    0090    295 _P1	=	0x0090
                    0091    296 _RFIM	=	0x0091
                    0092    297 _DPS	=	0x0092
                    0093    298 __XPAGE	=	0x0093
                    0094    299 _T2CMP	=	0x0094
                    0095    300 _ST0	=	0x0095
                    0096    301 _ST1	=	0x0096
                    0097    302 _ST2	=	0x0097
                    0098    303 _S0CON	=	0x0098
                    0099    304 _HSRC	=	0x0099
                    009A    305 _IEN2	=	0x009a
                    009B    306 _S1CON	=	0x009b
                    009C    307 _T2PEROF0	=	0x009c
                    009D    308 _T2PEROF1	=	0x009d
                    009E    309 _T2PEROF2	=	0x009e
                    009F    310 _FMAP	=	0x009f
                    009F    311 _PSBANK	=	0x009f
                    00A0    312 _P2	=	0x00a0
                    00A1    313 _T2OF0	=	0x00a1
                    00A2    314 _T2OF1	=	0x00a2
                    00A3    315 _T2OF2	=	0x00a3
                    00A4    316 _T2CAPLPL	=	0x00a4
                    00A5    317 _T2CAPHPH	=	0x00a5
                    00A6    318 _T2TLD	=	0x00a6
                    00A7    319 _T2THD	=	0x00a7
                    00A8    320 _IE	=	0x00a8
                    00A8    321 _IEN0	=	0x00a8
                    00A9    322 _IP0	=	0x00a9
                    00AB    323 _FWT	=	0x00ab
                    00AC    324 _FADDRL	=	0x00ac
                    00AD    325 _FADDRH	=	0x00ad
                    00AE    326 _FCTL	=	0x00ae
                    00AF    327 _FWDATA	=	0x00af
                    00B1    328 _ENCDI	=	0x00b1
                    00B2    329 _ENCDO	=	0x00b2
                    00B3    330 _ENCCS	=	0x00b3
                    00B4    331 _ADCCON1	=	0x00b4
                    00B5    332 _ADCCON2	=	0x00b5
                    00B6    333 _ADCCON3	=	0x00b6
                    00B7    334 _RCCTL	=	0x00b7
                    00B8    335 _IEN1	=	0x00b8
                    00B9    336 _IP1	=	0x00b9
                    00BA    337 _ADCL	=	0x00ba
                    00BB    338 _ADCH	=	0x00bb
                    00BC    339 _RNDL	=	0x00bc
                    00BD    340 _RNDH	=	0x00bd
                    00BE    341 _SLEEP	=	0x00be
                    00C0    342 _IRCON	=	0x00c0
                    00C1    343 _U0BUF	=	0x00c1
                    00C2    344 _U0BAUD	=	0x00c2
                    00C3    345 _T2CNF	=	0x00c3
                    00C4    346 _U0UCR	=	0x00c4
                    00C5    347 _U0GCR	=	0x00c5
                    00C6    348 _CLKCON	=	0x00c6
                    00C7    349 _MEMCTR	=	0x00c7
                    00C8    350 _T2CON	=	0x00c8
                    00C9    351 _WDCTL	=	0x00c9
                    00CA    352 _T3CNT	=	0x00ca
                    00CB    353 _T3CTL	=	0x00cb
                    00CC    354 _T3CCTL0	=	0x00cc
                    00CD    355 _T3CC0	=	0x00cd
                    00CE    356 _T3CCTL1	=	0x00ce
                    00CF    357 _T3CC1	=	0x00cf
                    00D0    358 _PSW	=	0x00d0
                    00D1    359 _DMAIRQ	=	0x00d1
                    00D2    360 _DMA1CFGL	=	0x00d2
                    00D3    361 _DMA1CFGH	=	0x00d3
                    00D4    362 _DMA0CFGL	=	0x00d4
                    00D5    363 _DMA0CFGH	=	0x00d5
                    00D6    364 _DMAARM	=	0x00d6
                    00D7    365 _DMAREQ	=	0x00d7
                    00D8    366 _TIMIF	=	0x00d8
                    00D9    367 _RFD	=	0x00d9
                    00DA    368 _T1CC0L	=	0x00da
                    00DB    369 _T1CC0H	=	0x00db
                    00DC    370 _T1CC1L	=	0x00dc
                    00DD    371 _T1CC1H	=	0x00dd
                    00DE    372 _T1CC2L	=	0x00de
                    00DF    373 _T1CC2H	=	0x00df
                    00E0    374 _ACC	=	0x00e0
                    00E1    375 _RFST	=	0x00e1
                    00E2    376 _T1CNTL	=	0x00e2
                    00E3    377 _T1CNTH	=	0x00e3
                    00E4    378 _T1CTL	=	0x00e4
                    00E5    379 _T1CCTL0	=	0x00e5
                    00E6    380 _T1CCTL1	=	0x00e6
                    00E7    381 _T1CCTL2	=	0x00e7
                    00E8    382 _IRCON2	=	0x00e8
                    00E9    383 _RFIF	=	0x00e9
                    00EA    384 _T4CNT	=	0x00ea
                    00EB    385 _T4CTL	=	0x00eb
                    00EC    386 _T4CCTL0	=	0x00ec
                    00ED    387 _T4CC0	=	0x00ed
                    00EE    388 _T4CCTL1	=	0x00ee
                    00EF    389 _T4CC1	=	0x00ef
                    00F0    390 _B	=	0x00f0
                    00F1    391 _PERCFG	=	0x00f1
                    00F2    392 _ADCCFG	=	0x00f2
                    00F3    393 _P0SEL	=	0x00f3
                    00F4    394 _P1SEL	=	0x00f4
                    00F5    395 _P2SEL	=	0x00f5
                    00F6    396 _P1INP	=	0x00f6
                    00F7    397 _P2INP	=	0x00f7
                    00F8    398 _U1CSR	=	0x00f8
                    00F9    399 _U1BUF	=	0x00f9
                    00FA    400 _U1BAUD	=	0x00fa
                    00FB    401 _U1UCR	=	0x00fb
                    00FC    402 _U1GCR	=	0x00fc
                    00FD    403 _P0DIR	=	0x00fd
                    00FE    404 _P1DIR	=	0x00fe
                    00FF    405 _P2DIR	=	0x00ff
                            406 ;--------------------------------------------------------
                            407 ; special function bits
                            408 ;--------------------------------------------------------
                            409 	.area RSEG    (ABS,DATA)
   0000                     410 	.org 0x0000
                    0087    411 _P0_7	=	0x0087
                    0086    412 _P0_6	=	0x0086
                    0085    413 _P0_5	=	0x0085
                    0084    414 _P0_4	=	0x0084
                    0083    415 _P0_3	=	0x0083
                    0082    416 _P0_2	=	0x0082
                    0081    417 _P0_1	=	0x0081
                    0080    418 _P0_0	=	0x0080
                    008F    419 _TCON_URX1IF	=	0x008f
                    008D    420 _TCON_ADCIF	=	0x008d
                    008B    421 _TCON_URX0IF	=	0x008b
                    008A    422 _TCON_IT1	=	0x008a
                    0089    423 _TCON_RFERRIF	=	0x0089
                    0088    424 _TCON_IT0	=	0x0088
                    0090    425 _P1_0	=	0x0090
                    0091    426 _P1_1	=	0x0091
                    0092    427 _P1_2	=	0x0092
                    0093    428 _P1_3	=	0x0093
                    0094    429 _P1_4	=	0x0094
                    0095    430 _P1_5	=	0x0095
                    0096    431 _P1_6	=	0x0096
                    0097    432 _P1_7	=	0x0097
                    0099    433 _S0CON_ENCIF_1	=	0x0099
                    0098    434 _S0CON_ENCIF_0	=	0x0098
                    00A0    435 _P2_0	=	0x00a0
                    00A1    436 _P2_1	=	0x00a1
                    00A2    437 _P2_2	=	0x00a2
                    00A3    438 _P2_3	=	0x00a3
                    00A4    439 _P2_4	=	0x00a4
                    00AF    440 _EA	=	0x00af
                    00AF    441 _IEN0_EA	=	0x00af
                    00AD    442 _IEN0_STIE	=	0x00ad
                    00AC    443 _IEN0_ENCIE	=	0x00ac
                    00AB    444 _IEN0_URX1IE	=	0x00ab
                    00AA    445 _IEN0_URX0IE	=	0x00aa
                    00A9    446 _IEN0_ADCIE	=	0x00a9
                    00A8    447 _IEN0_RFERRIE	=	0x00a8
                    00BD    448 _IEN1_P0IE	=	0x00bd
                    00BC    449 _IEN1_T4IE	=	0x00bc
                    00BB    450 _IEN1_T3IE	=	0x00bb
                    00BA    451 _IEN1_T2IE	=	0x00ba
                    00B9    452 _IEN1_T1IE	=	0x00b9
                    00B8    453 _IEN1_DMAIE	=	0x00b8
                    00C7    454 _IRCON_STIF	=	0x00c7
                    00C5    455 _IRCON_P0IF	=	0x00c5
                    00C4    456 _IRCON_T4IF	=	0x00c4
                    00C3    457 _IRCON_T3IF	=	0x00c3
                    00C2    458 _IRCON_T2IF	=	0x00c2
                    00C1    459 _IRCON_T1IF	=	0x00c1
                    00C0    460 _IRCON_DMAIF	=	0x00c0
                    00D0    461 _P	=	0x00d0
                    00D1    462 _F1	=	0x00d1
                    00D2    463 _OV	=	0x00d2
                    00D3    464 _RS0	=	0x00d3
                    00D4    465 _RS1	=	0x00d4
                    00D5    466 _F0	=	0x00d5
                    00D6    467 _AC	=	0x00d6
                    00D7    468 _CY	=	0x00d7
                    00EC    469 _IRCON2_WDTIF	=	0x00ec
                    00EB    470 _IRCON2_P1IF	=	0x00eb
                    00EA    471 _IRCON2_UTX1IF	=	0x00ea
                    00E9    472 _IRCON2_UTX0IF	=	0x00e9
                    00E8    473 _IRCON2_P2IF	=	0x00e8
                            474 ;--------------------------------------------------------
                            475 ; overlayable register banks
                            476 ;--------------------------------------------------------
                            477 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     478 	.ds 8
                            479 ;--------------------------------------------------------
                            480 ; internal ram data
                            481 ;--------------------------------------------------------
                            482 	.area DSEG    (DATA)
                            483 ;--------------------------------------------------------
                            484 ; overlayable items in internal ram 
                            485 ;--------------------------------------------------------
                            486 	.area OSEG    (OVR,DATA)
                            487 ;--------------------------------------------------------
                            488 ; indirectly addressable internal ram data
                            489 ;--------------------------------------------------------
                            490 	.area ISEG    (DATA)
                            491 ;--------------------------------------------------------
                            492 ; absolute internal ram data
                            493 ;--------------------------------------------------------
                            494 	.area IABS    (ABS,DATA)
                            495 	.area IABS    (ABS,DATA)
                            496 ;--------------------------------------------------------
                            497 ; bit data
                            498 ;--------------------------------------------------------
                            499 	.area BSEG    (BIT)
                            500 ;--------------------------------------------------------
                            501 ; paged external ram data
                            502 ;--------------------------------------------------------
                            503 	.area PSEG    (PAG,XDATA)
                            504 ;--------------------------------------------------------
                            505 ; external ram data
                            506 ;--------------------------------------------------------
                            507 	.area XSEG    (XDATA)
                    DF02    508 _MDMCTRL0H	=	0xdf02
                    DF03    509 _MDMCTRL0L	=	0xdf03
                    DF04    510 _MDMCTRL1H	=	0xdf04
                    DF05    511 _MDMCTRL1L	=	0xdf05
                    DF06    512 _RSSIH	=	0xdf06
                    DF07    513 _RSSIL	=	0xdf07
                    DF08    514 _SYNCWORDH	=	0xdf08
                    DF09    515 _SYNCWORDL	=	0xdf09
                    DF0A    516 _TXCTRLH	=	0xdf0a
                    DF0B    517 _TXCTRLL	=	0xdf0b
                    DF0C    518 _RXCTRL0H	=	0xdf0c
                    DF0D    519 _RXCTRL0L	=	0xdf0d
                    DF0E    520 _RXCTRL1H	=	0xdf0e
                    DF0F    521 _RXCTRL1L	=	0xdf0f
                    DF10    522 _FSCTRLH	=	0xdf10
                    DF11    523 _FSCTRLL	=	0xdf11
                    DF12    524 _CSPX	=	0xdf12
                    DF13    525 _CSPY	=	0xdf13
                    DF14    526 _CSPZ	=	0xdf14
                    DF15    527 _CSPCTRL	=	0xdf15
                    DF16    528 _CSPT	=	0xdf16
                    DF17    529 _RFPWR	=	0xdf17
                    DF20    530 _FSMTCH	=	0xdf20
                    DF21    531 _FSMTCL	=	0xdf21
                    DF22    532 _MANANDH	=	0xdf22
                    DF23    533 _MANANDL	=	0xdf23
                    DF24    534 _MANORH	=	0xdf24
                    DF25    535 _MANORL	=	0xdf25
                    DF26    536 _AGCCTRLH	=	0xdf26
                    DF27    537 _AGCCTRLL	=	0xdf27
                    DF39    538 _FSMSTATE	=	0xdf39
                    DF3A    539 _ADCTSTH	=	0xdf3a
                    DF3B    540 _ADCTSTL	=	0xdf3b
                    DF3C    541 _DACTSTH	=	0xdf3c
                    DF3D    542 _DACTSTL	=	0xdf3d
                    DF43    543 _IEEE_ADDR0	=	0xdf43
                    DF44    544 _IEEE_ADDR1	=	0xdf44
                    DF45    545 _IEEE_ADDR2	=	0xdf45
                    DF46    546 _IEEE_ADDR3	=	0xdf46
                    DF47    547 _IEEE_ADDR4	=	0xdf47
                    DF48    548 _IEEE_ADDR5	=	0xdf48
                    DF49    549 _IEEE_ADDR6	=	0xdf49
                    DF4A    550 _IEEE_ADDR7	=	0xdf4a
                    DF4B    551 _PANIDH	=	0xdf4b
                    DF4C    552 _PANIDL	=	0xdf4c
                    DF4D    553 _SHORTADDRH	=	0xdf4d
                    DF4E    554 _SHORTADDRL	=	0xdf4e
                    DF4F    555 _IOCFG0	=	0xdf4f
                    DF50    556 _IOCFG1	=	0xdf50
                    DF51    557 _IOCFG2	=	0xdf51
                    DF52    558 _IOCFG3	=	0xdf52
                    DF53    559 _RXFIFOCNT	=	0xdf53
                    DF54    560 _FSMTC1	=	0xdf54
                    DF60    561 _CHVER	=	0xdf60
                    DF61    562 _CHIPID	=	0xdf61
                    DF62    563 _RFSTATUS	=	0xdf62
                    DFC1    564 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    565 _RFD_SHADOW	=	0xdfd9
                    DFF9    566 _U1BUF_SHADOW	=	0xdff9
                    DFBA    567 _ADC_SHADOW	=	0xdfba
                            568 ;--------------------------------------------------------
                            569 ; absolute external ram data
                            570 ;--------------------------------------------------------
                            571 	.area XABS    (ABS,XDATA)
                            572 ;--------------------------------------------------------
                            573 ; external initialized ram data
                            574 ;--------------------------------------------------------
                            575 	.area XISEG   (XDATA)
                            576 	.area HOME    (CODE)
                            577 	.area GSINIT0 (CODE)
                            578 	.area GSINIT1 (CODE)
                            579 	.area GSINIT2 (CODE)
                            580 	.area GSINIT3 (CODE)
                            581 	.area GSINIT4 (CODE)
                            582 	.area GSINIT5 (CODE)
                            583 	.area GSINIT  (CODE)
                            584 	.area GSFINAL (CODE)
                            585 	.area CSEG    (CODE)
                            586 ;--------------------------------------------------------
                            587 ; global & static initialisations
                            588 ;--------------------------------------------------------
                            589 	.area HOME    (CODE)
                            590 	.area GSINIT  (CODE)
                            591 	.area GSFINAL (CODE)
                            592 	.area GSINIT  (CODE)
                            593 ;--------------------------------------------------------
                            594 ; Home
                            595 ;--------------------------------------------------------
                            596 	.area HOME    (CODE)
                            597 	.area HOME    (CODE)
                            598 ;--------------------------------------------------------
                            599 ; code
                            600 ;--------------------------------------------------------
                            601 	.area CSEG    (CODE)
                            602 ;------------------------------------------------------------
                            603 ;Allocation info for local variables in function 'bit_bang_write'
                            604 ;------------------------------------------------------------
                            605 ;byte                      Allocated to registers r7 
                            606 ;i                         Allocated to registers r6 
                            607 ;bit                       Allocated to registers r5 
                            608 ;------------------------------------------------------------
                            609 ;	../../platform/sensinode/dev/m25p16.c:66: bit_bang_write(uint8_t byte) CC_NON_BANKED
                            610 ;	-----------------------------------------
                            611 ;	 function bit_bang_write
                            612 ;	-----------------------------------------
   0000                     613 _bit_bang_write:
                    0007    614 	ar7 = 0x07
                    0006    615 	ar6 = 0x06
                    0005    616 	ar5 = 0x05
                    0004    617 	ar4 = 0x04
                    0003    618 	ar3 = 0x03
                    0002    619 	ar2 = 0x02
                    0001    620 	ar1 = 0x01
                    0000    621 	ar0 = 0x00
   0000 AF 82               622 	mov	r7,dpl
                            623 ;	../../platform/sensinode/dev/m25p16.c:72: for(i = 0x80; i > 0; i >>= 1) {
   0002 7E 80               624 	mov	r6,#0x80
   0004                     625 00103$:
   0004 EE                  626 	mov	a,r6
   0005 60 04               627 	jz	00109$
   0007 7D 01               628 	mov	r5,#0x01
   0009 80 02               629 	sjmp	00110$
   000B                     630 00109$:
   000B 7D 00               631 	mov	r5,#0x00
   000D                     632 00110$:
   000D ED                  633 	mov	a,r5
   000E 60 17               634 	jz	00107$
                            635 ;	../../platform/sensinode/dev/m25p16.c:74: bit = 0;
   0010 7D 00               636 	mov	r5,#0x00
                            637 ;	../../platform/sensinode/dev/m25p16.c:75: if(i & byte) {
   0012 EF                  638 	mov	a,r7
   0013 5E                  639 	anl	a,r6
   0014 60 02               640 	jz	00102$
                            641 ;	../../platform/sensinode/dev/m25p16.c:77: bit = 1;
   0016 7D 01               642 	mov	r5,#0x01
   0018                     643 00102$:
                            644 ;	../../platform/sensinode/dev/m25p16.c:80: M25P16_PIN_SER_I = bit;
   0018 ED                  645 	mov	a,r5
   0019 24 FF               646 	add	a,#0xff
   001B 92 96               647 	mov	_P1_6,c
                            648 ;	../../platform/sensinode/dev/m25p16.c:82: CLOCK_RISING();
   001D D2 95               649 	setb	_P1_5
   001F C2 95               650 	clr	_P1_5
                            651 ;	../../platform/sensinode/dev/m25p16.c:72: for(i = 0x80; i > 0; i >>= 1) {
   0021 EE                  652 	mov	a,r6
   0022 C3                  653 	clr	c
   0023 13                  654 	rrc	a
   0024 FE                  655 	mov	r6,a
   0025 80 DD               656 	sjmp	00103$
   0027                     657 00107$:
   0027 22                  658 	ret
                            659 ;------------------------------------------------------------
                            660 ;Allocation info for local variables in function 'bit_bang_read'
                            661 ;------------------------------------------------------------
                            662 ;i                         Allocated to registers r6 
                            663 ;bits                      Allocated to registers r7 
                            664 ;------------------------------------------------------------
                            665 ;	../../platform/sensinode/dev/m25p16.c:88: bit_bang_read() CC_NON_BANKED
                            666 ;	-----------------------------------------
                            667 ;	 function bit_bang_read
                            668 ;	-----------------------------------------
   0028                     669 _bit_bang_read:
                            670 ;	../../platform/sensinode/dev/m25p16.c:91: uint8_t bits = 0;
   0028 7F 00               671 	mov	r7,#0x00
                            672 ;	../../platform/sensinode/dev/m25p16.c:94: for(i = 7; i >= 0; i--) {
   002A 7E 07               673 	mov	r6,#0x07
   002C                     674 00101$:
   002C EE                  675 	mov	a,r6
   002D 20 E7 1B            676 	jb	acc.7,00104$
                            677 ;	../../platform/sensinode/dev/m25p16.c:96: CLOCK_FALLING();
   0030 C2 95               678 	clr	_P1_5
   0032 D2 95               679 	setb	_P1_5
                            680 ;	../../platform/sensinode/dev/m25p16.c:99: bits |= (M25P16_PIN_SER_O << i);
   0034 A2 97               681 	mov	c,_P1_7
   0036 E4                  682 	clr	a
   0037 33                  683 	rlc	a
   0038 FD                  684 	mov	r5,a
   0039 8E F0               685 	mov	b,r6
   003B 05 F0               686 	inc	b
   003D ED                  687 	mov	a,r5
   003E 80 02               688 	sjmp	00115$
   0040                     689 00113$:
   0040 25 E0               690 	add	a,acc
   0042                     691 00115$:
   0042 D5 F0 FB            692 	djnz	b,00113$
   0045 FD                  693 	mov	r5,a
   0046 42 07               694 	orl	ar7,a
                            695 ;	../../platform/sensinode/dev/m25p16.c:94: for(i = 7; i >= 0; i--) {
   0048 1E                  696 	dec	r6
   0049 80 E1               697 	sjmp	00101$
   004B                     698 00104$:
                            699 ;	../../platform/sensinode/dev/m25p16.c:101: return bits;
   004B 8F 82               700 	mov	dpl,r7
   004D 22                  701 	ret
                            702 ;------------------------------------------------------------
                            703 ;Allocation info for local variables in function 'select'
                            704 ;------------------------------------------------------------
                            705 ;ser_par                   Allocated to registers r7 
                            706 ;------------------------------------------------------------
                            707 ;	../../platform/sensinode/dev/m25p16.c:105: select() CC_NON_BANKED
                            708 ;	-----------------------------------------
                            709 ;	 function select
                            710 ;	-----------------------------------------
   004E                     711 _select:
                            712 ;	../../platform/sensinode/dev/m25p16.c:108: uint8_t ser_par = n740_ser_par_get();
   004E 12s00r00            713 	lcall	_n740_ser_par_get
   0051 AF 82               714 	mov	r7,dpl
                            715 ;	../../platform/sensinode/dev/m25p16.c:110: M25P16_PIN_CLOCK = 0;
   0053 C2 95               716 	clr	_P1_5
                            717 ;	../../platform/sensinode/dev/m25p16.c:112: ser_par &= ~N740_SER_PAR_CHIP_SEL;  /* Select Flash */
   0055 8F 06               718 	mov	ar6,r7
   0057 53 06 FD            719 	anl	ar6,#0xFD
   005A 8E 07               720 	mov	ar7,r6
                            721 ;	../../platform/sensinode/dev/m25p16.c:115: n740_ser_par_set(ser_par);
   005C 8F 82               722 	mov	dpl,r7
   005E 02s00r00            723 	ljmp	_n740_ser_par_set
                            724 ;------------------------------------------------------------
                            725 ;Allocation info for local variables in function 'deselect'
                            726 ;------------------------------------------------------------
                            727 ;ser_par                   Allocated to registers r7 
                            728 ;------------------------------------------------------------
                            729 ;	../../platform/sensinode/dev/m25p16.c:119: deselect() CC_NON_BANKED
                            730 ;	-----------------------------------------
                            731 ;	 function deselect
                            732 ;	-----------------------------------------
   0061                     733 _deselect:
                            734 ;	../../platform/sensinode/dev/m25p16.c:122: uint8_t ser_par = n740_ser_par_get();
   0061 12s00r00            735 	lcall	_n740_ser_par_get
   0064 AF 82               736 	mov	r7,dpl
                            737 ;	../../platform/sensinode/dev/m25p16.c:124: ser_par |= N740_SER_PAR_CHIP_SEL;    /* De-Select Flash  */
   0066 43 07 02            738 	orl	ar7,#0x02
                            739 ;	../../platform/sensinode/dev/m25p16.c:127: n740_ser_par_set(ser_par);
   0069 8F 82               740 	mov	dpl,r7
   006B 02s00r00            741 	ljmp	_n740_ser_par_set
                            742 ;------------------------------------------------------------
                            743 ;Allocation info for local variables in function 'm25p16_wren'
                            744 ;------------------------------------------------------------
                            745 ;	../../platform/sensinode/dev/m25p16.c:131: m25p16_wren()
                            746 ;	-----------------------------------------
                            747 ;	 function m25p16_wren
                            748 ;	-----------------------------------------
   006E                     749 _m25p16_wren:
                            750 ;	../../platform/sensinode/dev/m25p16.c:133: select();
   006E 12s00r4E            751 	lcall	_select
                            752 ;	../../platform/sensinode/dev/m25p16.c:134: bit_bang_write(M25P16_I_WREN);
   0071 75 82 06            753 	mov	dpl,#0x06
   0074 12s00r00            754 	lcall	_bit_bang_write
                            755 ;	../../platform/sensinode/dev/m25p16.c:135: deselect();
   0077 12s00r61            756 	lcall	_deselect
                            757 ;	../../platform/sensinode/dev/m25p16.c:137: while(!M25P16_WEL());
   007A                     758 00101$:
   007A 12s01rA6            759 	lcall	_m25p16_rdsr
   007D E5 82               760 	mov	a,dpl
   007F 30 E1 F8            761 	jnb	acc.1,00101$
   0082 22                  762 	ret
                            763 ;------------------------------------------------------------
                            764 ;Allocation info for local variables in function 'm25p16_wrdi'
                            765 ;------------------------------------------------------------
                            766 ;	../../platform/sensinode/dev/m25p16.c:141: m25p16_wrdi()
                            767 ;	-----------------------------------------
                            768 ;	 function m25p16_wrdi
                            769 ;	-----------------------------------------
   0083                     770 _m25p16_wrdi:
                            771 ;	../../platform/sensinode/dev/m25p16.c:143: select();
   0083 12s00r4E            772 	lcall	_select
                            773 ;	../../platform/sensinode/dev/m25p16.c:144: bit_bang_write(M25P16_I_WRDI);
   0086 75 82 04            774 	mov	dpl,#0x04
   0089 12s00r00            775 	lcall	_bit_bang_write
                            776 ;	../../platform/sensinode/dev/m25p16.c:145: deselect();
   008C 02s00r61            777 	ljmp	_deselect
                            778 ;------------------------------------------------------------
                            779 ;Allocation info for local variables in function 'm25p16_rdid'
                            780 ;------------------------------------------------------------
                            781 ;rdid                      Allocated to registers r5 r6 r7 
                            782 ;i                         Allocated to registers r1 
                            783 ;------------------------------------------------------------
                            784 ;	../../platform/sensinode/dev/m25p16.c:149: m25p16_rdid(struct m25p16_rdid * rdid)
                            785 ;	-----------------------------------------
                            786 ;	 function m25p16_rdid
                            787 ;	-----------------------------------------
   008F                     788 _m25p16_rdid:
   008F AD 82               789 	mov	r5,dpl
   0091 AE 83               790 	mov	r6,dph
   0093 AF F0               791 	mov	r7,b
                            792 ;	../../platform/sensinode/dev/m25p16.c:153: select();
   0095 C0 07               793 	push	ar7
   0097 C0 06               794 	push	ar6
   0099 C0 05               795 	push	ar5
   009B 12s00r4E            796 	lcall	_select
                            797 ;	../../platform/sensinode/dev/m25p16.c:154: bit_bang_write(M25P16_I_RDID);
   009E 75 82 9F            798 	mov	dpl,#0x9F
   00A1 12s00r00            799 	lcall	_bit_bang_write
                            800 ;	../../platform/sensinode/dev/m25p16.c:156: rdid->man_id = bit_bang_read();
   00A4 12s00r28            801 	lcall	_bit_bang_read
   00A7 AC 82               802 	mov	r4,dpl
   00A9 D0 05               803 	pop	ar5
   00AB D0 06               804 	pop	ar6
   00AD D0 07               805 	pop	ar7
   00AF 8D 82               806 	mov	dpl,r5
   00B1 8E 83               807 	mov	dph,r6
   00B3 8F F0               808 	mov	b,r7
   00B5 EC                  809 	mov	a,r4
   00B6 12s00r00            810 	lcall	__gptrput
                            811 ;	../../platform/sensinode/dev/m25p16.c:157: rdid->mem_type = bit_bang_read(); /* Device ID MSB */
   00B9 74 01               812 	mov	a,#0x01
   00BB 2D                  813 	add	a,r5
   00BC FA                  814 	mov	r2,a
   00BD E4                  815 	clr	a
   00BE 3E                  816 	addc	a,r6
   00BF FB                  817 	mov	r3,a
   00C0 8F 04               818 	mov	ar4,r7
   00C2 C0 07               819 	push	ar7
   00C4 C0 06               820 	push	ar6
   00C6 C0 05               821 	push	ar5
   00C8 C0 04               822 	push	ar4
   00CA C0 03               823 	push	ar3
   00CC C0 02               824 	push	ar2
   00CE 12s00r28            825 	lcall	_bit_bang_read
   00D1 A9 82               826 	mov	r1,dpl
   00D3 D0 02               827 	pop	ar2
   00D5 D0 03               828 	pop	ar3
   00D7 D0 04               829 	pop	ar4
   00D9 D0 05               830 	pop	ar5
   00DB D0 06               831 	pop	ar6
   00DD D0 07               832 	pop	ar7
   00DF 8A 82               833 	mov	dpl,r2
   00E1 8B 83               834 	mov	dph,r3
   00E3 8C F0               835 	mov	b,r4
   00E5 E9                  836 	mov	a,r1
   00E6 12s00r00            837 	lcall	__gptrput
                            838 ;	../../platform/sensinode/dev/m25p16.c:158: rdid->mem_size = bit_bang_read(); /* Device ID LSB */
   00E9 74 02               839 	mov	a,#0x02
   00EB 2D                  840 	add	a,r5
   00EC FA                  841 	mov	r2,a
   00ED E4                  842 	clr	a
   00EE 3E                  843 	addc	a,r6
   00EF FB                  844 	mov	r3,a
   00F0 8F 04               845 	mov	ar4,r7
   00F2 C0 07               846 	push	ar7
   00F4 C0 06               847 	push	ar6
   00F6 C0 05               848 	push	ar5
   00F8 C0 04               849 	push	ar4
   00FA C0 03               850 	push	ar3
   00FC C0 02               851 	push	ar2
   00FE 12s00r28            852 	lcall	_bit_bang_read
   0101 A9 82               853 	mov	r1,dpl
   0103 D0 02               854 	pop	ar2
   0105 D0 03               855 	pop	ar3
   0107 D0 04               856 	pop	ar4
   0109 D0 05               857 	pop	ar5
   010B D0 06               858 	pop	ar6
   010D D0 07               859 	pop	ar7
   010F 8A 82               860 	mov	dpl,r2
   0111 8B 83               861 	mov	dph,r3
   0113 8C F0               862 	mov	b,r4
   0115 E9                  863 	mov	a,r1
   0116 12s00r00            864 	lcall	__gptrput
                            865 ;	../../platform/sensinode/dev/m25p16.c:159: rdid->uid_len = bit_bang_read();
   0119 74 03               866 	mov	a,#0x03
   011B 2D                  867 	add	a,r5
   011C FA                  868 	mov	r2,a
   011D E4                  869 	clr	a
   011E 3E                  870 	addc	a,r6
   011F FB                  871 	mov	r3,a
   0120 8F 04               872 	mov	ar4,r7
   0122 C0 07               873 	push	ar7
   0124 C0 06               874 	push	ar6
   0126 C0 05               875 	push	ar5
   0128 C0 04               876 	push	ar4
   012A C0 03               877 	push	ar3
   012C C0 02               878 	push	ar2
   012E 12s00r28            879 	lcall	_bit_bang_read
   0131 A9 82               880 	mov	r1,dpl
   0133 D0 02               881 	pop	ar2
   0135 D0 03               882 	pop	ar3
   0137 D0 04               883 	pop	ar4
   0139 D0 05               884 	pop	ar5
   013B D0 06               885 	pop	ar6
   013D D0 07               886 	pop	ar7
   013F 8A 82               887 	mov	dpl,r2
   0141 8B 83               888 	mov	dph,r3
   0143 8C F0               889 	mov	b,r4
   0145 E9                  890 	mov	a,r1
   0146 12s00r00            891 	lcall	__gptrput
                            892 ;	../../platform/sensinode/dev/m25p16.c:160: for(i = 0; i < rdid->uid_len; i++) {
   0149 74 04               893 	mov	a,#0x04
   014B 2D                  894 	add	a,r5
   014C FD                  895 	mov	r5,a
   014D E4                  896 	clr	a
   014E 3E                  897 	addc	a,r6
   014F FE                  898 	mov	r6,a
   0150 79 00               899 	mov	r1,#0x00
   0152                     900 00101$:
   0152 8A 82               901 	mov	dpl,r2
   0154 8B 83               902 	mov	dph,r3
   0156 8C F0               903 	mov	b,r4
   0158 12s00r00            904 	lcall	__gptrget
   015B F8                  905 	mov	r0,a
   015C C3                  906 	clr	c
   015D E9                  907 	mov	a,r1
   015E 98                  908 	subb	a,r0
   015F 50 42               909 	jnc	00104$
                            910 ;	../../platform/sensinode/dev/m25p16.c:161: rdid->uid[i] = bit_bang_read();
   0161 C0 02               911 	push	ar2
   0163 C0 03               912 	push	ar3
   0165 C0 04               913 	push	ar4
   0167 E9                  914 	mov	a,r1
   0168 2D                  915 	add	a,r5
   0169 F8                  916 	mov	r0,a
   016A E4                  917 	clr	a
   016B 3E                  918 	addc	a,r6
   016C FB                  919 	mov	r3,a
   016D 8F 04               920 	mov	ar4,r7
   016F C0 07               921 	push	ar7
   0171 C0 06               922 	push	ar6
   0173 C0 05               923 	push	ar5
   0175 C0 04               924 	push	ar4
   0177 C0 03               925 	push	ar3
   0179 C0 01               926 	push	ar1
   017B C0 00               927 	push	ar0
   017D 12s00r28            928 	lcall	_bit_bang_read
   0180 AA 82               929 	mov	r2,dpl
   0182 D0 00               930 	pop	ar0
   0184 D0 01               931 	pop	ar1
   0186 D0 03               932 	pop	ar3
   0188 D0 04               933 	pop	ar4
   018A D0 05               934 	pop	ar5
   018C D0 06               935 	pop	ar6
   018E D0 07               936 	pop	ar7
   0190 88 82               937 	mov	dpl,r0
   0192 8B 83               938 	mov	dph,r3
   0194 8C F0               939 	mov	b,r4
   0196 EA                  940 	mov	a,r2
   0197 12s00r00            941 	lcall	__gptrput
                            942 ;	../../platform/sensinode/dev/m25p16.c:160: for(i = 0; i < rdid->uid_len; i++) {
   019A 09                  943 	inc	r1
   019B D0 04               944 	pop	ar4
   019D D0 03               945 	pop	ar3
   019F D0 02               946 	pop	ar2
   01A1 80 AF               947 	sjmp	00101$
   01A3                     948 00104$:
                            949 ;	../../platform/sensinode/dev/m25p16.c:163: deselect();
   01A3 02s00r61            950 	ljmp	_deselect
                            951 ;------------------------------------------------------------
                            952 ;Allocation info for local variables in function 'm25p16_rdsr'
                            953 ;------------------------------------------------------------
                            954 ;rv                        Allocated to registers r7 
                            955 ;------------------------------------------------------------
                            956 ;	../../platform/sensinode/dev/m25p16.c:167: m25p16_rdsr()
                            957 ;	-----------------------------------------
                            958 ;	 function m25p16_rdsr
                            959 ;	-----------------------------------------
   01A6                     960 _m25p16_rdsr:
                            961 ;	../../platform/sensinode/dev/m25p16.c:171: select();
   01A6 12s00r4E            962 	lcall	_select
                            963 ;	../../platform/sensinode/dev/m25p16.c:172: bit_bang_write(M25P16_I_RDSR);
   01A9 75 82 05            964 	mov	dpl,#0x05
   01AC 12s00r00            965 	lcall	_bit_bang_write
                            966 ;	../../platform/sensinode/dev/m25p16.c:173: rv = bit_bang_read();
   01AF 12s00r28            967 	lcall	_bit_bang_read
   01B2 AF 82               968 	mov	r7,dpl
                            969 ;	../../platform/sensinode/dev/m25p16.c:174: deselect();
   01B4 C0 07               970 	push	ar7
   01B6 12s00r61            971 	lcall	_deselect
   01B9 D0 07               972 	pop	ar7
                            973 ;	../../platform/sensinode/dev/m25p16.c:176: return rv;
   01BB 8F 82               974 	mov	dpl,r7
   01BD 22                  975 	ret
                            976 ;------------------------------------------------------------
                            977 ;Allocation info for local variables in function 'm25p16_wrsr'
                            978 ;------------------------------------------------------------
                            979 ;val                       Allocated to registers r7 
                            980 ;------------------------------------------------------------
                            981 ;	../../platform/sensinode/dev/m25p16.c:180: m25p16_wrsr(uint8_t val)
                            982 ;	-----------------------------------------
                            983 ;	 function m25p16_wrsr
                            984 ;	-----------------------------------------
   01BE                     985 _m25p16_wrsr:
   01BE AF 82               986 	mov	r7,dpl
                            987 ;	../../platform/sensinode/dev/m25p16.c:182: m25p16_wren(); /* Write Enable */
   01C0 C0 07               988 	push	ar7
   01C2 12s00r6E            989 	lcall	_m25p16_wren
                            990 ;	../../platform/sensinode/dev/m25p16.c:184: select();
   01C5 12s00r4E            991 	lcall	_select
                            992 ;	../../platform/sensinode/dev/m25p16.c:186: bit_bang_write(M25P16_I_WRSR);
   01C8 75 82 01            993 	mov	dpl,#0x01
   01CB 12s00r00            994 	lcall	_bit_bang_write
   01CE D0 07               995 	pop	ar7
                            996 ;	../../platform/sensinode/dev/m25p16.c:187: bit_bang_write(val);
   01D0 8F 82               997 	mov	dpl,r7
   01D2 12s00r00            998 	lcall	_bit_bang_write
                            999 ;	../../platform/sensinode/dev/m25p16.c:189: deselect();
   01D5 02s00r61           1000 	ljmp	_deselect
                           1001 ;------------------------------------------------------------
                           1002 ;Allocation info for local variables in function 'm25p16_read'
                           1003 ;------------------------------------------------------------
                           1004 ;buff                      Allocated to stack - _bp -5
                           1005 ;buff_len                  Allocated to stack - _bp -6
                           1006 ;addr                      Allocated to stack - _bp +1
                           1007 ;i                         Allocated to registers r4 
                           1008 ;------------------------------------------------------------
                           1009 ;	../../platform/sensinode/dev/m25p16.c:193: m25p16_read(uint8_t * addr, uint8_t * buff, uint8_t buff_len)
                           1010 ;	-----------------------------------------
                           1011 ;	 function m25p16_read
                           1012 ;	-----------------------------------------
   01D8                    1013 _m25p16_read:
   01D8 C0*00              1014 	push	_bp
   01DA 85 81*00           1015 	mov	_bp,sp
   01DD C0 82              1016 	push	dpl
   01DF C0 83              1017 	push	dph
   01E1 C0 F0              1018 	push	b
                           1019 ;	../../platform/sensinode/dev/m25p16.c:197: select();
   01E3 12s00r4E           1020 	lcall	_select
                           1021 ;	../../platform/sensinode/dev/m25p16.c:201: bit_bang_write(M25P16_I_FAST_READ);
   01E6 75 82 0B           1022 	mov	dpl,#0x0B
   01E9 12s00r00           1023 	lcall	_bit_bang_write
                           1024 ;	../../platform/sensinode/dev/m25p16.c:207: for(i = 0; i < 3; i++) {
   01EC 7C 00              1025 	mov	r4,#0x00
   01EE                    1026 00105$:
   01EE BC 03 00           1027 	cjne	r4,#0x03,00125$
   01F1                    1028 00125$:
   01F1 50 22              1029 	jnc	00108$
                           1030 ;	../../platform/sensinode/dev/m25p16.c:208: bit_bang_write(addr[i]);
   01F3 A8*00              1031 	mov	r0,_bp
   01F5 08                 1032 	inc	r0
   01F6 EC                 1033 	mov	a,r4
   01F7 26                 1034 	add	a,@r0
   01F8 FA                 1035 	mov	r2,a
   01F9 E4                 1036 	clr	a
   01FA 08                 1037 	inc	r0
   01FB 36                 1038 	addc	a,@r0
   01FC FB                 1039 	mov	r3,a
   01FD 08                 1040 	inc	r0
   01FE 86 07              1041 	mov	ar7,@r0
   0200 8A 82              1042 	mov	dpl,r2
   0202 8B 83              1043 	mov	dph,r3
   0204 8F F0              1044 	mov	b,r7
   0206 12s00r00           1045 	lcall	__gptrget
   0209 F5 82              1046 	mov	dpl,a
   020B C0 04              1047 	push	ar4
   020D 12s00r00           1048 	lcall	_bit_bang_write
   0210 D0 04              1049 	pop	ar4
                           1050 ;	../../platform/sensinode/dev/m25p16.c:207: for(i = 0; i < 3; i++) {
   0212 0C                 1051 	inc	r4
   0213 80 D9              1052 	sjmp	00105$
   0215                    1053 00108$:
                           1054 ;	../../platform/sensinode/dev/m25p16.c:213: bit_bang_write(M25P16_DUMMY_BYTE);
   0215 75 82 00           1055 	mov	dpl,#0x00
   0218 12s00r00           1056 	lcall	_bit_bang_write
                           1057 ;	../../platform/sensinode/dev/m25p16.c:216: for(i = 0; i < buff_len; i++) {
   021B 7F 00              1058 	mov	r7,#0x00
   021D                    1059 00109$:
   021D E5*00              1060 	mov	a,_bp
   021F 24 FA              1061 	add	a,#0xfa
   0221 F8                 1062 	mov	r0,a
   0222 C3                 1063 	clr	c
   0223 EF                 1064 	mov	a,r7
   0224 96                 1065 	subb	a,@r0
   0225 50 33              1066 	jnc	00103$
                           1067 ;	../../platform/sensinode/dev/m25p16.c:217: buff[i] = ~bit_bang_read();
   0227 E5*00              1068 	mov	a,_bp
   0229 24 FB              1069 	add	a,#0xfb
   022B F8                 1070 	mov	r0,a
   022C EF                 1071 	mov	a,r7
   022D 26                 1072 	add	a,@r0
   022E FC                 1073 	mov	r4,a
   022F E4                 1074 	clr	a
   0230 08                 1075 	inc	r0
   0231 36                 1076 	addc	a,@r0
   0232 FD                 1077 	mov	r5,a
   0233 08                 1078 	inc	r0
   0234 86 06              1079 	mov	ar6,@r0
   0236 C0 07              1080 	push	ar7
   0238 C0 06              1081 	push	ar6
   023A C0 05              1082 	push	ar5
   023C C0 04              1083 	push	ar4
   023E 12s00r28           1084 	lcall	_bit_bang_read
   0241 AB 82              1085 	mov	r3,dpl
   0243 D0 04              1086 	pop	ar4
   0245 D0 05              1087 	pop	ar5
   0247 D0 06              1088 	pop	ar6
   0249 D0 07              1089 	pop	ar7
   024B EB                 1090 	mov	a,r3
   024C F4                 1091 	cpl	a
   024D FB                 1092 	mov	r3,a
   024E 8C 82              1093 	mov	dpl,r4
   0250 8D 83              1094 	mov	dph,r5
   0252 8E F0              1095 	mov	b,r6
   0254 12s00r00           1096 	lcall	__gptrput
                           1097 ;	../../platform/sensinode/dev/m25p16.c:216: for(i = 0; i < buff_len; i++) {
   0257 0F                 1098 	inc	r7
                           1099 ;	../../platform/sensinode/dev/m25p16.c:219: ENERGEST_OFF(ENERGEST_TYPE_FLASH_READ);
   0258 80 C3              1100 	sjmp	00109$
   025A                    1101 00103$:
                           1102 ;	../../platform/sensinode/dev/m25p16.c:220: deselect();
   025A 12s00r61           1103 	lcall	_deselect
   025D 85*00 81           1104 	mov	sp,_bp
   0260 D0*00              1105 	pop	_bp
   0262 22                 1106 	ret
                           1107 ;------------------------------------------------------------
                           1108 ;Allocation info for local variables in function 'm25p16_pp'
                           1109 ;------------------------------------------------------------
                           1110 ;buff                      Allocated to stack - _bp -5
                           1111 ;buff_len                  Allocated to stack - _bp -6
                           1112 ;addr                      Allocated to stack - _bp +1
                           1113 ;i                         Allocated to registers r4 
                           1114 ;------------------------------------------------------------
                           1115 ;	../../platform/sensinode/dev/m25p16.c:224: m25p16_pp(uint8_t * addr, uint8_t * buff, uint8_t buff_len)
                           1116 ;	-----------------------------------------
                           1117 ;	 function m25p16_pp
                           1118 ;	-----------------------------------------
   0263                    1119 _m25p16_pp:
   0263 C0*00              1120 	push	_bp
   0265 85 81*00           1121 	mov	_bp,sp
   0268 C0 82              1122 	push	dpl
   026A C0 83              1123 	push	dph
   026C C0 F0              1124 	push	b
                           1125 ;	../../platform/sensinode/dev/m25p16.c:228: m25p16_wren(); /* Write Enable */
   026E 12s00r6E           1126 	lcall	_m25p16_wren
                           1127 ;	../../platform/sensinode/dev/m25p16.c:230: select();
   0271 12s00r4E           1128 	lcall	_select
                           1129 ;	../../platform/sensinode/dev/m25p16.c:232: bit_bang_write(M25P16_I_PP);
   0274 75 82 02           1130 	mov	dpl,#0x02
   0277 12s00r00           1131 	lcall	_bit_bang_write
                           1132 ;	../../platform/sensinode/dev/m25p16.c:235: for(i = 0; i < 3; i++) {
   027A 7C 00              1133 	mov	r4,#0x00
   027C                    1134 00105$:
   027C BC 03 00           1135 	cjne	r4,#0x03,00125$
   027F                    1136 00125$:
   027F 50 22              1137 	jnc	00108$
                           1138 ;	../../platform/sensinode/dev/m25p16.c:236: bit_bang_write(addr[i]);
   0281 A8*00              1139 	mov	r0,_bp
   0283 08                 1140 	inc	r0
   0284 EC                 1141 	mov	a,r4
   0285 26                 1142 	add	a,@r0
   0286 FA                 1143 	mov	r2,a
   0287 E4                 1144 	clr	a
   0288 08                 1145 	inc	r0
   0289 36                 1146 	addc	a,@r0
   028A FB                 1147 	mov	r3,a
   028B 08                 1148 	inc	r0
   028C 86 07              1149 	mov	ar7,@r0
   028E 8A 82              1150 	mov	dpl,r2
   0290 8B 83              1151 	mov	dph,r3
   0292 8F F0              1152 	mov	b,r7
   0294 12s00r00           1153 	lcall	__gptrget
   0297 F5 82              1154 	mov	dpl,a
   0299 C0 04              1155 	push	ar4
   029B 12s00r00           1156 	lcall	_bit_bang_write
   029E D0 04              1157 	pop	ar4
                           1158 ;	../../platform/sensinode/dev/m25p16.c:235: for(i = 0; i < 3; i++) {
   02A0 0C                 1159 	inc	r4
   02A1 80 D9              1160 	sjmp	00105$
   02A3                    1161 00108$:
                           1162 ;	../../platform/sensinode/dev/m25p16.c:240: for(i=0; i<buff_len; i++) {
   02A3 7F 00              1163 	mov	r7,#0x00
   02A5                    1164 00109$:
   02A5 E5*00              1165 	mov	a,_bp
   02A7 24 FA              1166 	add	a,#0xfa
   02A9 F8                 1167 	mov	r0,a
   02AA C3                 1168 	clr	c
   02AB EF                 1169 	mov	a,r7
   02AC 96                 1170 	subb	a,@r0
   02AD 50 25              1171 	jnc	00103$
                           1172 ;	../../platform/sensinode/dev/m25p16.c:241: bit_bang_write(~buff[i]);
   02AF E5*00              1173 	mov	a,_bp
   02B1 24 FB              1174 	add	a,#0xfb
   02B3 F8                 1175 	mov	r0,a
   02B4 EF                 1176 	mov	a,r7
   02B5 26                 1177 	add	a,@r0
   02B6 FC                 1178 	mov	r4,a
   02B7 E4                 1179 	clr	a
   02B8 08                 1180 	inc	r0
   02B9 36                 1181 	addc	a,@r0
   02BA FD                 1182 	mov	r5,a
   02BB 08                 1183 	inc	r0
   02BC 86 06              1184 	mov	ar6,@r0
   02BE 8C 82              1185 	mov	dpl,r4
   02C0 8D 83              1186 	mov	dph,r5
   02C2 8E F0              1187 	mov	b,r6
   02C4 12s00r00           1188 	lcall	__gptrget
   02C7 F4                 1189 	cpl	a
   02C8 F5 82              1190 	mov	dpl,a
   02CA C0 07              1191 	push	ar7
   02CC 12s00r00           1192 	lcall	_bit_bang_write
   02CF D0 07              1193 	pop	ar7
                           1194 ;	../../platform/sensinode/dev/m25p16.c:240: for(i=0; i<buff_len; i++) {
   02D1 0F                 1195 	inc	r7
                           1196 ;	../../platform/sensinode/dev/m25p16.c:243: ENERGEST_OFF(ENERGEST_TYPE_FLASH_WRITE);
   02D2 80 D1              1197 	sjmp	00109$
   02D4                    1198 00103$:
                           1199 ;	../../platform/sensinode/dev/m25p16.c:244: deselect();
   02D4 12s00r61           1200 	lcall	_deselect
   02D7 85*00 81           1201 	mov	sp,_bp
   02DA D0*00              1202 	pop	_bp
   02DC 22                 1203 	ret
                           1204 ;------------------------------------------------------------
                           1205 ;Allocation info for local variables in function 'm25p16_se'
                           1206 ;------------------------------------------------------------
                           1207 ;s                         Allocated to registers r7 
                           1208 ;------------------------------------------------------------
                           1209 ;	../../platform/sensinode/dev/m25p16.c:248: m25p16_se(uint8_t s)
                           1210 ;	-----------------------------------------
                           1211 ;	 function m25p16_se
                           1212 ;	-----------------------------------------
   02DD                    1213 _m25p16_se:
   02DD AF 82              1214 	mov	r7,dpl
                           1215 ;	../../platform/sensinode/dev/m25p16.c:250: m25p16_wren(); /* Write Enable */
   02DF C0 07              1216 	push	ar7
   02E1 12s00r6E           1217 	lcall	_m25p16_wren
                           1218 ;	../../platform/sensinode/dev/m25p16.c:252: select();
   02E4 12s00r4E           1219 	lcall	_select
                           1220 ;	../../platform/sensinode/dev/m25p16.c:254: bit_bang_write(M25P16_I_SE);
   02E7 75 82 D8           1221 	mov	dpl,#0xD8
   02EA 12s00r00           1222 	lcall	_bit_bang_write
   02ED D0 07              1223 	pop	ar7
                           1224 ;	../../platform/sensinode/dev/m25p16.c:255: bit_bang_write(s);
   02EF 8F 82              1225 	mov	dpl,r7
   02F1 12s00r00           1226 	lcall	_bit_bang_write
                           1227 ;	../../platform/sensinode/dev/m25p16.c:256: bit_bang_write(0x00);
   02F4 75 82 00           1228 	mov	dpl,#0x00
   02F7 12s00r00           1229 	lcall	_bit_bang_write
                           1230 ;	../../platform/sensinode/dev/m25p16.c:257: bit_bang_write(0x00);
   02FA 75 82 00           1231 	mov	dpl,#0x00
   02FD 12s00r00           1232 	lcall	_bit_bang_write
                           1233 ;	../../platform/sensinode/dev/m25p16.c:258: deselect();
                           1234 ;	../../platform/sensinode/dev/m25p16.c:259: ENERGEST_OFF(ENERGEST_TYPE_FLASH_WRITE);
   0300 02s00r61           1235 	ljmp	_deselect
                           1236 ;------------------------------------------------------------
                           1237 ;Allocation info for local variables in function 'm25p16_be'
                           1238 ;------------------------------------------------------------
                           1239 ;	../../platform/sensinode/dev/m25p16.c:263: m25p16_be()
                           1240 ;	-----------------------------------------
                           1241 ;	 function m25p16_be
                           1242 ;	-----------------------------------------
   0303                    1243 _m25p16_be:
                           1244 ;	../../platform/sensinode/dev/m25p16.c:265: m25p16_wren(); /* Write Enable */
   0303 12s00r6E           1245 	lcall	_m25p16_wren
                           1246 ;	../../platform/sensinode/dev/m25p16.c:267: select();
   0306 12s00r4E           1247 	lcall	_select
                           1248 ;	../../platform/sensinode/dev/m25p16.c:268: bit_bang_write(M25P16_I_BE);
   0309 75 82 C7           1249 	mov	dpl,#0xC7
   030C 12s00r00           1250 	lcall	_bit_bang_write
                           1251 ;	../../platform/sensinode/dev/m25p16.c:269: deselect();
   030F 02s00r61           1252 	ljmp	_deselect
                           1253 ;------------------------------------------------------------
                           1254 ;Allocation info for local variables in function 'm25p16_dp'
                           1255 ;------------------------------------------------------------
                           1256 ;	../../platform/sensinode/dev/m25p16.c:273: m25p16_dp()
                           1257 ;	-----------------------------------------
                           1258 ;	 function m25p16_dp
                           1259 ;	-----------------------------------------
   0312                    1260 _m25p16_dp:
                           1261 ;	../../platform/sensinode/dev/m25p16.c:275: select();
   0312 12s00r4E           1262 	lcall	_select
                           1263 ;	../../platform/sensinode/dev/m25p16.c:276: bit_bang_write(M25P16_I_DP);
   0315 75 82 B9           1264 	mov	dpl,#0xB9
   0318 12s00r00           1265 	lcall	_bit_bang_write
                           1266 ;	../../platform/sensinode/dev/m25p16.c:277: deselect();
   031B 02s00r61           1267 	ljmp	_deselect
                           1268 ;------------------------------------------------------------
                           1269 ;Allocation info for local variables in function 'm25p16_res'
                           1270 ;------------------------------------------------------------
                           1271 ;	../../platform/sensinode/dev/m25p16.c:284: m25p16_res() {
                           1272 ;	-----------------------------------------
                           1273 ;	 function m25p16_res
                           1274 ;	-----------------------------------------
   031E                    1275 _m25p16_res:
                           1276 ;	../../platform/sensinode/dev/m25p16.c:285: select();
   031E 12s00r4E           1277 	lcall	_select
                           1278 ;	../../platform/sensinode/dev/m25p16.c:286: bit_bang_write(M25P16_I_RES);
   0321 75 82 AB           1279 	mov	dpl,#0xAB
   0324 12s00r00           1280 	lcall	_bit_bang_write
                           1281 ;	../../platform/sensinode/dev/m25p16.c:287: deselect();
   0327 12s00r61           1282 	lcall	_deselect
                           1283 ;	../../platform/sensinode/dev/m25p16.c:289: while(M25P16_WIP());
   032A                    1284 00101$:
   032A 12s01rA6           1285 	lcall	_m25p16_rdsr
   032D E5 82              1286 	mov	a,dpl
   032F 20 E0 F8           1287 	jb	acc.0,00101$
   0332 22                 1288 	ret
                           1289 ;------------------------------------------------------------
                           1290 ;Allocation info for local variables in function 'm25p16_res_res'
                           1291 ;------------------------------------------------------------
                           1292 ;rv                        Allocated to registers r7 
                           1293 ;------------------------------------------------------------
                           1294 ;	../../platform/sensinode/dev/m25p16.c:299: m25p16_res_res() {
                           1295 ;	-----------------------------------------
                           1296 ;	 function m25p16_res_res
                           1297 ;	-----------------------------------------
   0333                    1298 _m25p16_res_res:
                           1299 ;	../../platform/sensinode/dev/m25p16.c:302: select();
   0333 12s00r4E           1300 	lcall	_select
                           1301 ;	../../platform/sensinode/dev/m25p16.c:303: bit_bang_write(M25P16_I_RES);
   0336 75 82 AB           1302 	mov	dpl,#0xAB
   0339 12s00r00           1303 	lcall	_bit_bang_write
                           1304 ;	../../platform/sensinode/dev/m25p16.c:304: bit_bang_write(M25P16_DUMMY_BYTE);
   033C 75 82 00           1305 	mov	dpl,#0x00
   033F 12s00r00           1306 	lcall	_bit_bang_write
                           1307 ;	../../platform/sensinode/dev/m25p16.c:305: bit_bang_write(M25P16_DUMMY_BYTE);
   0342 75 82 00           1308 	mov	dpl,#0x00
   0345 12s00r00           1309 	lcall	_bit_bang_write
                           1310 ;	../../platform/sensinode/dev/m25p16.c:306: bit_bang_write(M25P16_DUMMY_BYTE);
   0348 75 82 00           1311 	mov	dpl,#0x00
   034B 12s00r00           1312 	lcall	_bit_bang_write
                           1313 ;	../../platform/sensinode/dev/m25p16.c:308: rv = bit_bang_read();
   034E 12s00r28           1314 	lcall	_bit_bang_read
   0351 AF 82              1315 	mov	r7,dpl
                           1316 ;	../../platform/sensinode/dev/m25p16.c:310: deselect();
   0353 C0 07              1317 	push	ar7
   0355 12s00r61           1318 	lcall	_deselect
   0358 D0 07              1319 	pop	ar7
                           1320 ;	../../platform/sensinode/dev/m25p16.c:313: while(M25P16_WIP());
   035A                    1321 00101$:
   035A C0 07              1322 	push	ar7
   035C 12s01rA6           1323 	lcall	_m25p16_rdsr
   035F E5 82              1324 	mov	a,dpl
   0361 D0 07              1325 	pop	ar7
   0363 20 E0 F4           1326 	jb	acc.0,00101$
                           1327 ;	../../platform/sensinode/dev/m25p16.c:314: return rv;
   0366 8F 82              1328 	mov	dpl,r7
   0368 22                 1329 	ret
                           1330 	.area CSEG    (CODE)
                           1331 	.area CONST   (CODE)
                           1332 	.area XINIT   (CODE)
                           1333 	.area CABS    (ABS,CODE)
