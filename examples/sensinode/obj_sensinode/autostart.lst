                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:22 2013
                              5 ;--------------------------------------------------------
                              6 	.module autostart
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _process_exit
                             13 	.globl _process_start
                             14 	.globl _autostart_start
                             15 	.globl _autostart_exit
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 	.area RSEG    (ABS,DATA)
   0000                      20 	.org 0x0000
                             21 ;--------------------------------------------------------
                             22 ; special function bits
                             23 ;--------------------------------------------------------
                             24 	.area RSEG    (ABS,DATA)
   0000                      25 	.org 0x0000
                             26 ;--------------------------------------------------------
                             27 ; overlayable register banks
                             28 ;--------------------------------------------------------
                             29 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      30 	.ds 8
                             31 ;--------------------------------------------------------
                             32 ; internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area DSEG    (DATA)
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in internal ram 
                             37 ;--------------------------------------------------------
                             38 	.area OSEG    (OVR,DATA)
                             39 ;--------------------------------------------------------
                             40 ; indirectly addressable internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area ISEG    (DATA)
                             43 ;--------------------------------------------------------
                             44 ; absolute internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS,DATA)
                             47 	.area IABS    (ABS,DATA)
                             48 ;--------------------------------------------------------
                             49 ; bit data
                             50 ;--------------------------------------------------------
                             51 	.area BSEG    (BIT)
                             52 ;--------------------------------------------------------
                             53 ; paged external ram data
                             54 ;--------------------------------------------------------
                             55 	.area PSEG    (PAG,XDATA)
                             56 ;--------------------------------------------------------
                             57 ; external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG    (XDATA)
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XABS    (ABS,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external initialized ram data
                             66 ;--------------------------------------------------------
                             67 	.area XISEG   (XDATA)
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT0 (CODE)
                             70 	.area GSINIT1 (CODE)
                             71 	.area GSINIT2 (CODE)
                             72 	.area GSINIT3 (CODE)
                             73 	.area GSINIT4 (CODE)
                             74 	.area GSINIT5 (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area CSEG    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; global & static initialisations
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area GSINIT  (CODE)
                             83 	.area GSFINAL (CODE)
                             84 	.area GSINIT  (CODE)
                             85 ;--------------------------------------------------------
                             86 ; Home
                             87 ;--------------------------------------------------------
                             88 	.area HOME    (CODE)
                             89 	.area HOME    (CODE)
                             90 ;--------------------------------------------------------
                             91 ; code
                             92 ;--------------------------------------------------------
                             93 	.area CSEG    (CODE)
                             94 ;------------------------------------------------------------
                             95 ;Allocation info for local variables in function 'autostart_start'
                             96 ;------------------------------------------------------------
                             97 ;processes                 Allocated to registers r5 r6 r7 
                             98 ;i                         Allocated to registers r3 r4 
                             99 ;sloc0                     Allocated to stack - _bp +1
                            100 ;sloc1                     Allocated to stack - _bp +3
                            101 ;------------------------------------------------------------
                            102 ;	../../core/sys/autostart.c:53: autostart_start(struct process * const processes[])
                            103 ;	-----------------------------------------
                            104 ;	 function autostart_start
                            105 ;	-----------------------------------------
   0000                     106 _autostart_start:
                    0007    107 	ar7 = 0x07
                    0006    108 	ar6 = 0x06
                    0005    109 	ar5 = 0x05
                    0004    110 	ar4 = 0x04
                    0003    111 	ar3 = 0x03
                    0002    112 	ar2 = 0x02
                    0001    113 	ar1 = 0x01
                    0000    114 	ar0 = 0x00
   0000 C0*00               115 	push	_bp
   0002 E5 81               116 	mov	a,sp
   0004 F5*00               117 	mov	_bp,a
   0006 24 05               118 	add	a,#0x05
   0008 F5 81               119 	mov	sp,a
   000A AD 82               120 	mov	r5,dpl
   000C AE 83               121 	mov	r6,dph
   000E AF F0               122 	mov	r7,b
                            123 ;	../../core/sys/autostart.c:57: for(i = 0; processes[i] != NULL; ++i) {
   0010 7B 00               124 	mov	r3,#0x00
   0012 7C 00               125 	mov	r4,#0x00
   0014 A8*00               126 	mov	r0,_bp
   0016 08                  127 	inc	r0
   0017 E4                  128 	clr	a
   0018 F6                  129 	mov	@r0,a
   0019 08                  130 	inc	r0
   001A F6                  131 	mov	@r0,a
   001B                     132 00101$:
   001B C0 03               133 	push	ar3
   001D C0 04               134 	push	ar4
   001F A8*00               135 	mov	r0,_bp
   0021 08                  136 	inc	r0
   0022 E5*00               137 	mov	a,_bp
   0024 24 03               138 	add	a,#0x03
   0026 F9                  139 	mov	r1,a
   0027 E6                  140 	mov	a,@r0
   0028 2D                  141 	add	a,r5
   0029 F7                  142 	mov	@r1,a
   002A 08                  143 	inc	r0
   002B E6                  144 	mov	a,@r0
   002C 3E                  145 	addc	a,r6
   002D 09                  146 	inc	r1
   002E F7                  147 	mov	@r1,a
   002F 09                  148 	inc	r1
   0030 A7 07               149 	mov	@r1,ar7
   0032 E5*00               150 	mov	a,_bp
   0034 24 03               151 	add	a,#0x03
   0036 F8                  152 	mov	r0,a
   0037 86 82               153 	mov	dpl,@r0
   0039 08                  154 	inc	r0
   003A 86 83               155 	mov	dph,@r0
   003C 08                  156 	inc	r0
   003D 86 F0               157 	mov	b,@r0
   003F 12s00r00            158 	lcall	__gptrget
   0042 18                  159 	dec	r0
   0043 18                  160 	dec	r0
   0044 F6                  161 	mov	@r0,a
   0045 A3                  162 	inc	dptr
   0046 12s00r00            163 	lcall	__gptrget
   0049 08                  164 	inc	r0
   004A F6                  165 	mov	@r0,a
   004B A3                  166 	inc	dptr
   004C 12s00r00            167 	lcall	__gptrget
   004F 08                  168 	inc	r0
   0050 F6                  169 	mov	@r0,a
   0051 E5*00               170 	mov	a,_bp
   0053 24 03               171 	add	a,#0x03
   0055 F8                  172 	mov	r0,a
   0056 E4                  173 	clr	a
   0057 C0 E0               174 	push	acc
   0059 E4                  175 	clr	a
   005A C0 E0               176 	push	acc
   005C E4                  177 	clr	a
   005D C0 E0               178 	push	acc
   005F 86 82               179 	mov	dpl,@r0
   0061 08                  180 	inc	r0
   0062 86 83               181 	mov	dph,@r0
   0064 08                  182 	inc	r0
   0065 86 F0               183 	mov	b,@r0
   0067 12s00r00            184 	lcall	___gptr_cmp
   006A 15 81               185 	dec	sp
   006C 15 81               186 	dec	sp
   006E 15 81               187 	dec	sp
   0070 70 06               188 	jnz	00112$
   0072 D0 04               189 	pop	ar4
   0074 D0 03               190 	pop	ar3
   0076 80 48               191 	sjmp	00105$
   0078                     192 00112$:
   0078 D0 04               193 	pop	ar4
   007A D0 03               194 	pop	ar3
                            195 ;	../../core/sys/autostart.c:58: process_start(processes[i], NULL);
   007C C0 07               196 	push	ar7
   007E C0 06               197 	push	ar6
   0080 C0 05               198 	push	ar5
   0082 C0 04               199 	push	ar4
   0084 C0 03               200 	push	ar3
   0086 E4                  201 	clr	a
   0087 C0 E0               202 	push	acc
   0089 C0 E0               203 	push	acc
   008B C0 E0               204 	push	acc
   008D E5*00               205 	mov	a,_bp
   008F 24 03               206 	add	a,#0x03
   0091 F8                  207 	mov	r0,a
   0092 86 82               208 	mov	dpl,@r0
   0094 08                  209 	inc	r0
   0095 86 83               210 	mov	dph,@r0
   0097 08                  211 	inc	r0
   0098 86 F0               212 	mov	b,@r0
   009A 12s00r00            213 	lcall	_process_start
   009D 15 81               214 	dec	sp
   009F 15 81               215 	dec	sp
   00A1 15 81               216 	dec	sp
   00A3 D0 03               217 	pop	ar3
   00A5 D0 04               218 	pop	ar4
   00A7 D0 05               219 	pop	ar5
   00A9 D0 06               220 	pop	ar6
   00AB D0 07               221 	pop	ar7
                            222 ;	../../core/sys/autostart.c:57: for(i = 0; processes[i] != NULL; ++i) {
   00AD A8*00               223 	mov	r0,_bp
   00AF 08                  224 	inc	r0
   00B0 74 03               225 	mov	a,#0x03
   00B2 26                  226 	add	a,@r0
   00B3 F6                  227 	mov	@r0,a
   00B4 E4                  228 	clr	a
   00B5 08                  229 	inc	r0
   00B6 36                  230 	addc	a,@r0
   00B7 F6                  231 	mov	@r0,a
   00B8 0B                  232 	inc	r3
   00B9 BB 00 01            233 	cjne	r3,#0x00,00113$
   00BC 0C                  234 	inc	r4
   00BD                     235 00113$:
   00BD 02s00r1B            236 	ljmp	00101$
   00C0                     237 00105$:
   00C0 85*00 81            238 	mov	sp,_bp
   00C3 D0*00               239 	pop	_bp
   00C5 22                  240 	ret
                            241 ;------------------------------------------------------------
                            242 ;Allocation info for local variables in function 'autostart_exit'
                            243 ;------------------------------------------------------------
                            244 ;processes                 Allocated to registers r5 r6 r7 
                            245 ;i                         Allocated to registers r3 r4 
                            246 ;sloc0                     Allocated to stack - _bp +1
                            247 ;sloc1                     Allocated to stack - _bp +3
                            248 ;------------------------------------------------------------
                            249 ;	../../core/sys/autostart.c:64: autostart_exit(struct process * const processes[])
                            250 ;	-----------------------------------------
                            251 ;	 function autostart_exit
                            252 ;	-----------------------------------------
   00C6                     253 _autostart_exit:
   00C6 C0*00               254 	push	_bp
   00C8 E5 81               255 	mov	a,sp
   00CA F5*00               256 	mov	_bp,a
   00CC 24 05               257 	add	a,#0x05
   00CE F5 81               258 	mov	sp,a
   00D0 AD 82               259 	mov	r5,dpl
   00D2 AE 83               260 	mov	r6,dph
   00D4 AF F0               261 	mov	r7,b
                            262 ;	../../core/sys/autostart.c:68: for(i = 0; processes[i] != NULL; ++i) {
   00D6 7B 00               263 	mov	r3,#0x00
   00D8 7C 00               264 	mov	r4,#0x00
   00DA A8*00               265 	mov	r0,_bp
   00DC 08                  266 	inc	r0
   00DD E4                  267 	clr	a
   00DE F6                  268 	mov	@r0,a
   00DF 08                  269 	inc	r0
   00E0 F6                  270 	mov	@r0,a
   00E1                     271 00101$:
   00E1 C0 03               272 	push	ar3
   00E3 C0 04               273 	push	ar4
   00E5 A8*00               274 	mov	r0,_bp
   00E7 08                  275 	inc	r0
   00E8 E5*00               276 	mov	a,_bp
   00EA 24 03               277 	add	a,#0x03
   00EC F9                  278 	mov	r1,a
   00ED E6                  279 	mov	a,@r0
   00EE 2D                  280 	add	a,r5
   00EF F7                  281 	mov	@r1,a
   00F0 08                  282 	inc	r0
   00F1 E6                  283 	mov	a,@r0
   00F2 3E                  284 	addc	a,r6
   00F3 09                  285 	inc	r1
   00F4 F7                  286 	mov	@r1,a
   00F5 09                  287 	inc	r1
   00F6 A7 07               288 	mov	@r1,ar7
   00F8 E5*00               289 	mov	a,_bp
   00FA 24 03               290 	add	a,#0x03
   00FC F8                  291 	mov	r0,a
   00FD 86 82               292 	mov	dpl,@r0
   00FF 08                  293 	inc	r0
   0100 86 83               294 	mov	dph,@r0
   0102 08                  295 	inc	r0
   0103 86 F0               296 	mov	b,@r0
   0105 12s00r00            297 	lcall	__gptrget
   0108 18                  298 	dec	r0
   0109 18                  299 	dec	r0
   010A F6                  300 	mov	@r0,a
   010B A3                  301 	inc	dptr
   010C 12s00r00            302 	lcall	__gptrget
   010F 08                  303 	inc	r0
   0110 F6                  304 	mov	@r0,a
   0111 A3                  305 	inc	dptr
   0112 12s00r00            306 	lcall	__gptrget
   0115 08                  307 	inc	r0
   0116 F6                  308 	mov	@r0,a
   0117 E5*00               309 	mov	a,_bp
   0119 24 03               310 	add	a,#0x03
   011B F8                  311 	mov	r0,a
   011C E4                  312 	clr	a
   011D C0 E0               313 	push	acc
   011F E4                  314 	clr	a
   0120 C0 E0               315 	push	acc
   0122 E4                  316 	clr	a
   0123 C0 E0               317 	push	acc
   0125 86 82               318 	mov	dpl,@r0
   0127 08                  319 	inc	r0
   0128 86 83               320 	mov	dph,@r0
   012A 08                  321 	inc	r0
   012B 86 F0               322 	mov	b,@r0
   012D 12s00r00            323 	lcall	___gptr_cmp
   0130 15 81               324 	dec	sp
   0132 15 81               325 	dec	sp
   0134 15 81               326 	dec	sp
   0136 70 06               327 	jnz	00112$
   0138 D0 04               328 	pop	ar4
   013A D0 03               329 	pop	ar3
   013C 80 3B               330 	sjmp	00105$
   013E                     331 00112$:
   013E D0 04               332 	pop	ar4
   0140 D0 03               333 	pop	ar3
                            334 ;	../../core/sys/autostart.c:69: process_exit(processes[i]);
   0142 E5*00               335 	mov	a,_bp
   0144 24 03               336 	add	a,#0x03
   0146 F8                  337 	mov	r0,a
   0147 86 82               338 	mov	dpl,@r0
   0149 08                  339 	inc	r0
   014A 86 83               340 	mov	dph,@r0
   014C 08                  341 	inc	r0
   014D 86 F0               342 	mov	b,@r0
   014F C0 07               343 	push	ar7
   0151 C0 06               344 	push	ar6
   0153 C0 05               345 	push	ar5
   0155 C0 04               346 	push	ar4
   0157 C0 03               347 	push	ar3
   0159 12s00r00            348 	lcall	_process_exit
   015C D0 03               349 	pop	ar3
   015E D0 04               350 	pop	ar4
   0160 D0 05               351 	pop	ar5
   0162 D0 06               352 	pop	ar6
   0164 D0 07               353 	pop	ar7
                            354 ;	../../core/sys/autostart.c:68: for(i = 0; processes[i] != NULL; ++i) {
   0166 A8*00               355 	mov	r0,_bp
   0168 08                  356 	inc	r0
   0169 74 03               357 	mov	a,#0x03
   016B 26                  358 	add	a,@r0
   016C F6                  359 	mov	@r0,a
   016D E4                  360 	clr	a
   016E 08                  361 	inc	r0
   016F 36                  362 	addc	a,@r0
   0170 F6                  363 	mov	@r0,a
   0171 0B                  364 	inc	r3
   0172 BB 00 01            365 	cjne	r3,#0x00,00113$
   0175 0C                  366 	inc	r4
   0176                     367 00113$:
   0176 02s00rE1            368 	ljmp	00101$
   0179                     369 00105$:
   0179 85*00 81            370 	mov	sp,_bp
   017C D0*00               371 	pop	_bp
   017E 22                  372 	ret
                            373 	.area CSEG    (CODE)
                            374 	.area CONST   (CODE)
                            375 	.area XINIT   (CODE)
                            376 	.area CABS    (ABS,CODE)
