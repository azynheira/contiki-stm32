                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:15 2013
                              5 ;--------------------------------------------------------
                              6 	.module broadcast
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _abc_send
                             13 	.globl _abc_close
                             14 	.globl _abc_open
                             15 	.globl _channel_set_attributes
                             16 	.globl _packetbuf_addr
                             17 	.globl _packetbuf_set_addr
                             18 	.globl _rimeaddr_copy
                             19 	.globl _IRCON2_P2IF
                             20 	.globl _IRCON2_UTX0IF
                             21 	.globl _IRCON2_UTX1IF
                             22 	.globl _IRCON2_P1IF
                             23 	.globl _IRCON2_WDTIF
                             24 	.globl _CY
                             25 	.globl _AC
                             26 	.globl _F0
                             27 	.globl _RS1
                             28 	.globl _RS0
                             29 	.globl _OV
                             30 	.globl _F1
                             31 	.globl _P
                             32 	.globl _IRCON_DMAIF
                             33 	.globl _IRCON_T1IF
                             34 	.globl _IRCON_T2IF
                             35 	.globl _IRCON_T3IF
                             36 	.globl _IRCON_T4IF
                             37 	.globl _IRCON_P0IF
                             38 	.globl _IRCON_STIF
                             39 	.globl _IEN1_DMAIE
                             40 	.globl _IEN1_T1IE
                             41 	.globl _IEN1_T2IE
                             42 	.globl _IEN1_T3IE
                             43 	.globl _IEN1_T4IE
                             44 	.globl _IEN1_P0IE
                             45 	.globl _IEN0_RFERRIE
                             46 	.globl _IEN0_ADCIE
                             47 	.globl _IEN0_URX0IE
                             48 	.globl _IEN0_URX1IE
                             49 	.globl _IEN0_ENCIE
                             50 	.globl _IEN0_STIE
                             51 	.globl _IEN0_EA
                             52 	.globl _EA
                             53 	.globl _P2_4
                             54 	.globl _P2_3
                             55 	.globl _P2_2
                             56 	.globl _P2_1
                             57 	.globl _P2_0
                             58 	.globl _S0CON_ENCIF_0
                             59 	.globl _S0CON_ENCIF_1
                             60 	.globl _P1_7
                             61 	.globl _P1_6
                             62 	.globl _P1_5
                             63 	.globl _P1_4
                             64 	.globl _P1_3
                             65 	.globl _P1_2
                             66 	.globl _P1_1
                             67 	.globl _P1_0
                             68 	.globl _TCON_IT0
                             69 	.globl _TCON_RFERRIF
                             70 	.globl _TCON_IT1
                             71 	.globl _TCON_URX0IF
                             72 	.globl _TCON_ADCIF
                             73 	.globl _TCON_URX1IF
                             74 	.globl _P0_0
                             75 	.globl _P0_1
                             76 	.globl _P0_2
                             77 	.globl _P0_3
                             78 	.globl _P0_4
                             79 	.globl _P0_5
                             80 	.globl _P0_6
                             81 	.globl _P0_7
                             82 	.globl _P2DIR
                             83 	.globl _P1DIR
                             84 	.globl _P0DIR
                             85 	.globl _U1GCR
                             86 	.globl _U1UCR
                             87 	.globl _U1BAUD
                             88 	.globl _U1BUF
                             89 	.globl _U1CSR
                             90 	.globl _P2INP
                             91 	.globl _P1INP
                             92 	.globl _P2SEL
                             93 	.globl _P1SEL
                             94 	.globl _P0SEL
                             95 	.globl _ADCCFG
                             96 	.globl _PERCFG
                             97 	.globl _B
                             98 	.globl _T4CC1
                             99 	.globl _T4CCTL1
                            100 	.globl _T4CC0
                            101 	.globl _T4CCTL0
                            102 	.globl _T4CTL
                            103 	.globl _T4CNT
                            104 	.globl _RFIF
                            105 	.globl _IRCON2
                            106 	.globl _T1CCTL2
                            107 	.globl _T1CCTL1
                            108 	.globl _T1CCTL0
                            109 	.globl _T1CTL
                            110 	.globl _T1CNTH
                            111 	.globl _T1CNTL
                            112 	.globl _RFST
                            113 	.globl _ACC
                            114 	.globl _T1CC2H
                            115 	.globl _T1CC2L
                            116 	.globl _T1CC1H
                            117 	.globl _T1CC1L
                            118 	.globl _T1CC0H
                            119 	.globl _T1CC0L
                            120 	.globl _RFD
                            121 	.globl _TIMIF
                            122 	.globl _DMAREQ
                            123 	.globl _DMAARM
                            124 	.globl _DMA0CFGH
                            125 	.globl _DMA0CFGL
                            126 	.globl _DMA1CFGH
                            127 	.globl _DMA1CFGL
                            128 	.globl _DMAIRQ
                            129 	.globl _PSW
                            130 	.globl _T3CC1
                            131 	.globl _T3CCTL1
                            132 	.globl _T3CC0
                            133 	.globl _T3CCTL0
                            134 	.globl _T3CTL
                            135 	.globl _T3CNT
                            136 	.globl _WDCTL
                            137 	.globl _T2CON
                            138 	.globl _MEMCTR
                            139 	.globl _CLKCON
                            140 	.globl _U0GCR
                            141 	.globl _U0UCR
                            142 	.globl _T2CNF
                            143 	.globl _U0BAUD
                            144 	.globl _U0BUF
                            145 	.globl _IRCON
                            146 	.globl _SLEEP
                            147 	.globl _RNDH
                            148 	.globl _RNDL
                            149 	.globl _ADCH
                            150 	.globl _ADCL
                            151 	.globl _IP1
                            152 	.globl _IEN1
                            153 	.globl _RCCTL
                            154 	.globl _ADCCON3
                            155 	.globl _ADCCON2
                            156 	.globl _ADCCON1
                            157 	.globl _ENCCS
                            158 	.globl _ENCDO
                            159 	.globl _ENCDI
                            160 	.globl _FWDATA
                            161 	.globl _FCTL
                            162 	.globl _FADDRH
                            163 	.globl _FADDRL
                            164 	.globl _FWT
                            165 	.globl _IP0
                            166 	.globl _IEN0
                            167 	.globl _IE
                            168 	.globl _T2THD
                            169 	.globl _T2TLD
                            170 	.globl _T2CAPHPH
                            171 	.globl _T2CAPLPL
                            172 	.globl _T2OF2
                            173 	.globl _T2OF1
                            174 	.globl _T2OF0
                            175 	.globl _P2
                            176 	.globl _PSBANK
                            177 	.globl _FMAP
                            178 	.globl _T2PEROF2
                            179 	.globl _T2PEROF1
                            180 	.globl _T2PEROF0
                            181 	.globl _S1CON
                            182 	.globl _IEN2
                            183 	.globl _HSRC
                            184 	.globl _S0CON
                            185 	.globl _ST2
                            186 	.globl _ST1
                            187 	.globl _ST0
                            188 	.globl _T2CMP
                            189 	.globl __XPAGE
                            190 	.globl _DPS
                            191 	.globl _RFIM
                            192 	.globl _P1
                            193 	.globl _P0INP
                            194 	.globl _P1IEN
                            195 	.globl _PICTL
                            196 	.globl _P2IFG
                            197 	.globl _P1IFG
                            198 	.globl _P0IFG
                            199 	.globl _TCON
                            200 	.globl _PCON
                            201 	.globl _U0CSR
                            202 	.globl _DPH1
                            203 	.globl _DPL1
                            204 	.globl _DPH0
                            205 	.globl _DPL0
                            206 	.globl _SP
                            207 	.globl _P0
                            208 	.globl _ADC_SHADOW
                            209 	.globl _U1BUF_SHADOW
                            210 	.globl _RFD_SHADOW
                            211 	.globl _U0BUF_SHADOW
                            212 	.globl _RFSTATUS
                            213 	.globl _CHIPID
                            214 	.globl _CHVER
                            215 	.globl _FSMTC1
                            216 	.globl _RXFIFOCNT
                            217 	.globl _IOCFG3
                            218 	.globl _IOCFG2
                            219 	.globl _IOCFG1
                            220 	.globl _IOCFG0
                            221 	.globl _SHORTADDRL
                            222 	.globl _SHORTADDRH
                            223 	.globl _PANIDL
                            224 	.globl _PANIDH
                            225 	.globl _IEEE_ADDR7
                            226 	.globl _IEEE_ADDR6
                            227 	.globl _IEEE_ADDR5
                            228 	.globl _IEEE_ADDR4
                            229 	.globl _IEEE_ADDR3
                            230 	.globl _IEEE_ADDR2
                            231 	.globl _IEEE_ADDR1
                            232 	.globl _IEEE_ADDR0
                            233 	.globl _DACTSTL
                            234 	.globl _DACTSTH
                            235 	.globl _ADCTSTL
                            236 	.globl _ADCTSTH
                            237 	.globl _FSMSTATE
                            238 	.globl _AGCCTRLL
                            239 	.globl _AGCCTRLH
                            240 	.globl _MANORL
                            241 	.globl _MANORH
                            242 	.globl _MANANDL
                            243 	.globl _MANANDH
                            244 	.globl _FSMTCL
                            245 	.globl _FSMTCH
                            246 	.globl _RFPWR
                            247 	.globl _CSPT
                            248 	.globl _CSPCTRL
                            249 	.globl _CSPZ
                            250 	.globl _CSPY
                            251 	.globl _CSPX
                            252 	.globl _FSCTRLL
                            253 	.globl _FSCTRLH
                            254 	.globl _RXCTRL1L
                            255 	.globl _RXCTRL1H
                            256 	.globl _RXCTRL0L
                            257 	.globl _RXCTRL0H
                            258 	.globl _TXCTRLL
                            259 	.globl _TXCTRLH
                            260 	.globl _SYNCWORDL
                            261 	.globl _SYNCWORDH
                            262 	.globl _RSSIL
                            263 	.globl _RSSIH
                            264 	.globl _MDMCTRL1L
                            265 	.globl _MDMCTRL1H
                            266 	.globl _MDMCTRL0L
                            267 	.globl _MDMCTRL0H
                            268 	.globl _broadcast_open
                            269 	.globl _broadcast_close
                            270 	.globl _broadcast_send
                            271 ;--------------------------------------------------------
                            272 ; special function registers
                            273 ;--------------------------------------------------------
                            274 	.area RSEG    (ABS,DATA)
   0000                     275 	.org 0x0000
                    0080    276 _P0	=	0x0080
                    0081    277 _SP	=	0x0081
                    0082    278 _DPL0	=	0x0082
                    0083    279 _DPH0	=	0x0083
                    0084    280 _DPL1	=	0x0084
                    0085    281 _DPH1	=	0x0085
                    0086    282 _U0CSR	=	0x0086
                    0087    283 _PCON	=	0x0087
                    0088    284 _TCON	=	0x0088
                    0089    285 _P0IFG	=	0x0089
                    008A    286 _P1IFG	=	0x008a
                    008B    287 _P2IFG	=	0x008b
                    008C    288 _PICTL	=	0x008c
                    008D    289 _P1IEN	=	0x008d
                    008F    290 _P0INP	=	0x008f
                    0090    291 _P1	=	0x0090
                    0091    292 _RFIM	=	0x0091
                    0092    293 _DPS	=	0x0092
                    0093    294 __XPAGE	=	0x0093
                    0094    295 _T2CMP	=	0x0094
                    0095    296 _ST0	=	0x0095
                    0096    297 _ST1	=	0x0096
                    0097    298 _ST2	=	0x0097
                    0098    299 _S0CON	=	0x0098
                    0099    300 _HSRC	=	0x0099
                    009A    301 _IEN2	=	0x009a
                    009B    302 _S1CON	=	0x009b
                    009C    303 _T2PEROF0	=	0x009c
                    009D    304 _T2PEROF1	=	0x009d
                    009E    305 _T2PEROF2	=	0x009e
                    009F    306 _FMAP	=	0x009f
                    009F    307 _PSBANK	=	0x009f
                    00A0    308 _P2	=	0x00a0
                    00A1    309 _T2OF0	=	0x00a1
                    00A2    310 _T2OF1	=	0x00a2
                    00A3    311 _T2OF2	=	0x00a3
                    00A4    312 _T2CAPLPL	=	0x00a4
                    00A5    313 _T2CAPHPH	=	0x00a5
                    00A6    314 _T2TLD	=	0x00a6
                    00A7    315 _T2THD	=	0x00a7
                    00A8    316 _IE	=	0x00a8
                    00A8    317 _IEN0	=	0x00a8
                    00A9    318 _IP0	=	0x00a9
                    00AB    319 _FWT	=	0x00ab
                    00AC    320 _FADDRL	=	0x00ac
                    00AD    321 _FADDRH	=	0x00ad
                    00AE    322 _FCTL	=	0x00ae
                    00AF    323 _FWDATA	=	0x00af
                    00B1    324 _ENCDI	=	0x00b1
                    00B2    325 _ENCDO	=	0x00b2
                    00B3    326 _ENCCS	=	0x00b3
                    00B4    327 _ADCCON1	=	0x00b4
                    00B5    328 _ADCCON2	=	0x00b5
                    00B6    329 _ADCCON3	=	0x00b6
                    00B7    330 _RCCTL	=	0x00b7
                    00B8    331 _IEN1	=	0x00b8
                    00B9    332 _IP1	=	0x00b9
                    00BA    333 _ADCL	=	0x00ba
                    00BB    334 _ADCH	=	0x00bb
                    00BC    335 _RNDL	=	0x00bc
                    00BD    336 _RNDH	=	0x00bd
                    00BE    337 _SLEEP	=	0x00be
                    00C0    338 _IRCON	=	0x00c0
                    00C1    339 _U0BUF	=	0x00c1
                    00C2    340 _U0BAUD	=	0x00c2
                    00C3    341 _T2CNF	=	0x00c3
                    00C4    342 _U0UCR	=	0x00c4
                    00C5    343 _U0GCR	=	0x00c5
                    00C6    344 _CLKCON	=	0x00c6
                    00C7    345 _MEMCTR	=	0x00c7
                    00C8    346 _T2CON	=	0x00c8
                    00C9    347 _WDCTL	=	0x00c9
                    00CA    348 _T3CNT	=	0x00ca
                    00CB    349 _T3CTL	=	0x00cb
                    00CC    350 _T3CCTL0	=	0x00cc
                    00CD    351 _T3CC0	=	0x00cd
                    00CE    352 _T3CCTL1	=	0x00ce
                    00CF    353 _T3CC1	=	0x00cf
                    00D0    354 _PSW	=	0x00d0
                    00D1    355 _DMAIRQ	=	0x00d1
                    00D2    356 _DMA1CFGL	=	0x00d2
                    00D3    357 _DMA1CFGH	=	0x00d3
                    00D4    358 _DMA0CFGL	=	0x00d4
                    00D5    359 _DMA0CFGH	=	0x00d5
                    00D6    360 _DMAARM	=	0x00d6
                    00D7    361 _DMAREQ	=	0x00d7
                    00D8    362 _TIMIF	=	0x00d8
                    00D9    363 _RFD	=	0x00d9
                    00DA    364 _T1CC0L	=	0x00da
                    00DB    365 _T1CC0H	=	0x00db
                    00DC    366 _T1CC1L	=	0x00dc
                    00DD    367 _T1CC1H	=	0x00dd
                    00DE    368 _T1CC2L	=	0x00de
                    00DF    369 _T1CC2H	=	0x00df
                    00E0    370 _ACC	=	0x00e0
                    00E1    371 _RFST	=	0x00e1
                    00E2    372 _T1CNTL	=	0x00e2
                    00E3    373 _T1CNTH	=	0x00e3
                    00E4    374 _T1CTL	=	0x00e4
                    00E5    375 _T1CCTL0	=	0x00e5
                    00E6    376 _T1CCTL1	=	0x00e6
                    00E7    377 _T1CCTL2	=	0x00e7
                    00E8    378 _IRCON2	=	0x00e8
                    00E9    379 _RFIF	=	0x00e9
                    00EA    380 _T4CNT	=	0x00ea
                    00EB    381 _T4CTL	=	0x00eb
                    00EC    382 _T4CCTL0	=	0x00ec
                    00ED    383 _T4CC0	=	0x00ed
                    00EE    384 _T4CCTL1	=	0x00ee
                    00EF    385 _T4CC1	=	0x00ef
                    00F0    386 _B	=	0x00f0
                    00F1    387 _PERCFG	=	0x00f1
                    00F2    388 _ADCCFG	=	0x00f2
                    00F3    389 _P0SEL	=	0x00f3
                    00F4    390 _P1SEL	=	0x00f4
                    00F5    391 _P2SEL	=	0x00f5
                    00F6    392 _P1INP	=	0x00f6
                    00F7    393 _P2INP	=	0x00f7
                    00F8    394 _U1CSR	=	0x00f8
                    00F9    395 _U1BUF	=	0x00f9
                    00FA    396 _U1BAUD	=	0x00fa
                    00FB    397 _U1UCR	=	0x00fb
                    00FC    398 _U1GCR	=	0x00fc
                    00FD    399 _P0DIR	=	0x00fd
                    00FE    400 _P1DIR	=	0x00fe
                    00FF    401 _P2DIR	=	0x00ff
                            402 ;--------------------------------------------------------
                            403 ; special function bits
                            404 ;--------------------------------------------------------
                            405 	.area RSEG    (ABS,DATA)
   0000                     406 	.org 0x0000
                    0087    407 _P0_7	=	0x0087
                    0086    408 _P0_6	=	0x0086
                    0085    409 _P0_5	=	0x0085
                    0084    410 _P0_4	=	0x0084
                    0083    411 _P0_3	=	0x0083
                    0082    412 _P0_2	=	0x0082
                    0081    413 _P0_1	=	0x0081
                    0080    414 _P0_0	=	0x0080
                    008F    415 _TCON_URX1IF	=	0x008f
                    008D    416 _TCON_ADCIF	=	0x008d
                    008B    417 _TCON_URX0IF	=	0x008b
                    008A    418 _TCON_IT1	=	0x008a
                    0089    419 _TCON_RFERRIF	=	0x0089
                    0088    420 _TCON_IT0	=	0x0088
                    0090    421 _P1_0	=	0x0090
                    0091    422 _P1_1	=	0x0091
                    0092    423 _P1_2	=	0x0092
                    0093    424 _P1_3	=	0x0093
                    0094    425 _P1_4	=	0x0094
                    0095    426 _P1_5	=	0x0095
                    0096    427 _P1_6	=	0x0096
                    0097    428 _P1_7	=	0x0097
                    0099    429 _S0CON_ENCIF_1	=	0x0099
                    0098    430 _S0CON_ENCIF_0	=	0x0098
                    00A0    431 _P2_0	=	0x00a0
                    00A1    432 _P2_1	=	0x00a1
                    00A2    433 _P2_2	=	0x00a2
                    00A3    434 _P2_3	=	0x00a3
                    00A4    435 _P2_4	=	0x00a4
                    00AF    436 _EA	=	0x00af
                    00AF    437 _IEN0_EA	=	0x00af
                    00AD    438 _IEN0_STIE	=	0x00ad
                    00AC    439 _IEN0_ENCIE	=	0x00ac
                    00AB    440 _IEN0_URX1IE	=	0x00ab
                    00AA    441 _IEN0_URX0IE	=	0x00aa
                    00A9    442 _IEN0_ADCIE	=	0x00a9
                    00A8    443 _IEN0_RFERRIE	=	0x00a8
                    00BD    444 _IEN1_P0IE	=	0x00bd
                    00BC    445 _IEN1_T4IE	=	0x00bc
                    00BB    446 _IEN1_T3IE	=	0x00bb
                    00BA    447 _IEN1_T2IE	=	0x00ba
                    00B9    448 _IEN1_T1IE	=	0x00b9
                    00B8    449 _IEN1_DMAIE	=	0x00b8
                    00C7    450 _IRCON_STIF	=	0x00c7
                    00C5    451 _IRCON_P0IF	=	0x00c5
                    00C4    452 _IRCON_T4IF	=	0x00c4
                    00C3    453 _IRCON_T3IF	=	0x00c3
                    00C2    454 _IRCON_T2IF	=	0x00c2
                    00C1    455 _IRCON_T1IF	=	0x00c1
                    00C0    456 _IRCON_DMAIF	=	0x00c0
                    00D0    457 _P	=	0x00d0
                    00D1    458 _F1	=	0x00d1
                    00D2    459 _OV	=	0x00d2
                    00D3    460 _RS0	=	0x00d3
                    00D4    461 _RS1	=	0x00d4
                    00D5    462 _F0	=	0x00d5
                    00D6    463 _AC	=	0x00d6
                    00D7    464 _CY	=	0x00d7
                    00EC    465 _IRCON2_WDTIF	=	0x00ec
                    00EB    466 _IRCON2_P1IF	=	0x00eb
                    00EA    467 _IRCON2_UTX1IF	=	0x00ea
                    00E9    468 _IRCON2_UTX0IF	=	0x00e9
                    00E8    469 _IRCON2_P2IF	=	0x00e8
                            470 ;--------------------------------------------------------
                            471 ; overlayable register banks
                            472 ;--------------------------------------------------------
                            473 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     474 	.ds 8
                            475 ;--------------------------------------------------------
                            476 ; internal ram data
                            477 ;--------------------------------------------------------
                            478 	.area DSEG    (DATA)
                            479 ;--------------------------------------------------------
                            480 ; overlayable items in internal ram 
                            481 ;--------------------------------------------------------
                            482 	.area OSEG    (OVR,DATA)
                            483 ;--------------------------------------------------------
                            484 ; indirectly addressable internal ram data
                            485 ;--------------------------------------------------------
                            486 	.area ISEG    (DATA)
                            487 ;--------------------------------------------------------
                            488 ; absolute internal ram data
                            489 ;--------------------------------------------------------
                            490 	.area IABS    (ABS,DATA)
                            491 	.area IABS    (ABS,DATA)
                            492 ;--------------------------------------------------------
                            493 ; bit data
                            494 ;--------------------------------------------------------
                            495 	.area BSEG    (BIT)
                            496 ;--------------------------------------------------------
                            497 ; paged external ram data
                            498 ;--------------------------------------------------------
                            499 	.area PSEG    (PAG,XDATA)
                            500 ;--------------------------------------------------------
                            501 ; external ram data
                            502 ;--------------------------------------------------------
                            503 	.area XSEG    (XDATA)
                    DF02    504 _MDMCTRL0H	=	0xdf02
                    DF03    505 _MDMCTRL0L	=	0xdf03
                    DF04    506 _MDMCTRL1H	=	0xdf04
                    DF05    507 _MDMCTRL1L	=	0xdf05
                    DF06    508 _RSSIH	=	0xdf06
                    DF07    509 _RSSIL	=	0xdf07
                    DF08    510 _SYNCWORDH	=	0xdf08
                    DF09    511 _SYNCWORDL	=	0xdf09
                    DF0A    512 _TXCTRLH	=	0xdf0a
                    DF0B    513 _TXCTRLL	=	0xdf0b
                    DF0C    514 _RXCTRL0H	=	0xdf0c
                    DF0D    515 _RXCTRL0L	=	0xdf0d
                    DF0E    516 _RXCTRL1H	=	0xdf0e
                    DF0F    517 _RXCTRL1L	=	0xdf0f
                    DF10    518 _FSCTRLH	=	0xdf10
                    DF11    519 _FSCTRLL	=	0xdf11
                    DF12    520 _CSPX	=	0xdf12
                    DF13    521 _CSPY	=	0xdf13
                    DF14    522 _CSPZ	=	0xdf14
                    DF15    523 _CSPCTRL	=	0xdf15
                    DF16    524 _CSPT	=	0xdf16
                    DF17    525 _RFPWR	=	0xdf17
                    DF20    526 _FSMTCH	=	0xdf20
                    DF21    527 _FSMTCL	=	0xdf21
                    DF22    528 _MANANDH	=	0xdf22
                    DF23    529 _MANANDL	=	0xdf23
                    DF24    530 _MANORH	=	0xdf24
                    DF25    531 _MANORL	=	0xdf25
                    DF26    532 _AGCCTRLH	=	0xdf26
                    DF27    533 _AGCCTRLL	=	0xdf27
                    DF39    534 _FSMSTATE	=	0xdf39
                    DF3A    535 _ADCTSTH	=	0xdf3a
                    DF3B    536 _ADCTSTL	=	0xdf3b
                    DF3C    537 _DACTSTH	=	0xdf3c
                    DF3D    538 _DACTSTL	=	0xdf3d
                    DF43    539 _IEEE_ADDR0	=	0xdf43
                    DF44    540 _IEEE_ADDR1	=	0xdf44
                    DF45    541 _IEEE_ADDR2	=	0xdf45
                    DF46    542 _IEEE_ADDR3	=	0xdf46
                    DF47    543 _IEEE_ADDR4	=	0xdf47
                    DF48    544 _IEEE_ADDR5	=	0xdf48
                    DF49    545 _IEEE_ADDR6	=	0xdf49
                    DF4A    546 _IEEE_ADDR7	=	0xdf4a
                    DF4B    547 _PANIDH	=	0xdf4b
                    DF4C    548 _PANIDL	=	0xdf4c
                    DF4D    549 _SHORTADDRH	=	0xdf4d
                    DF4E    550 _SHORTADDRL	=	0xdf4e
                    DF4F    551 _IOCFG0	=	0xdf4f
                    DF50    552 _IOCFG1	=	0xdf50
                    DF51    553 _IOCFG2	=	0xdf51
                    DF52    554 _IOCFG3	=	0xdf52
                    DF53    555 _RXFIFOCNT	=	0xdf53
                    DF54    556 _FSMTC1	=	0xdf54
                    DF60    557 _CHVER	=	0xdf60
                    DF61    558 _CHIPID	=	0xdf61
                    DF62    559 _RFSTATUS	=	0xdf62
                    DFC1    560 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    561 _RFD_SHADOW	=	0xdfd9
                    DFF9    562 _U1BUF_SHADOW	=	0xdff9
                    DFBA    563 _ADC_SHADOW	=	0xdfba
                            564 ;--------------------------------------------------------
                            565 ; absolute external ram data
                            566 ;--------------------------------------------------------
                            567 	.area XABS    (ABS,XDATA)
                            568 ;--------------------------------------------------------
                            569 ; external initialized ram data
                            570 ;--------------------------------------------------------
                            571 	.area XISEG   (XDATA)
                            572 	.area HOME    (CODE)
                            573 	.area GSINIT0 (CODE)
                            574 	.area GSINIT1 (CODE)
                            575 	.area GSINIT2 (CODE)
                            576 	.area GSINIT3 (CODE)
                            577 	.area GSINIT4 (CODE)
                            578 	.area GSINIT5 (CODE)
                            579 	.area GSINIT  (CODE)
                            580 	.area GSFINAL (CODE)
                            581 	.area CSEG    (CODE)
                            582 ;--------------------------------------------------------
                            583 ; global & static initialisations
                            584 ;--------------------------------------------------------
                            585 	.area HOME    (CODE)
                            586 	.area GSINIT  (CODE)
                            587 	.area GSFINAL (CODE)
                            588 	.area GSINIT  (CODE)
                            589 ;--------------------------------------------------------
                            590 ; Home
                            591 ;--------------------------------------------------------
                            592 	.area HOME    (CODE)
                            593 	.area HOME    (CODE)
                            594 ;--------------------------------------------------------
                            595 ; code
                            596 ;--------------------------------------------------------
                            597 	.area CSEG    (CODE)
                            598 ;------------------------------------------------------------
                            599 ;Allocation info for local variables in function 'recv_from_abc'
                            600 ;------------------------------------------------------------
                            601 ;bc                        Allocated to registers r5 r6 r7 
                            602 ;sender                    Allocated to stack - _bp +1
                            603 ;c                         Allocated to stack - _bp +3
                            604 ;------------------------------------------------------------
                            605 ;	../../core/net/rime/broadcast.c:64: recv_from_abc(struct abc_conn *bc)
                            606 ;	-----------------------------------------
                            607 ;	 function recv_from_abc
                            608 ;	-----------------------------------------
   0000                     609 _recv_from_abc:
                    0007    610 	ar7 = 0x07
                    0006    611 	ar6 = 0x06
                    0005    612 	ar5 = 0x05
                    0004    613 	ar4 = 0x04
                    0003    614 	ar3 = 0x03
                    0002    615 	ar2 = 0x02
                    0001    616 	ar1 = 0x01
                    0000    617 	ar0 = 0x00
   0000 C0*00               618 	push	_bp
   0002 E5 81               619 	mov	a,sp
   0004 F5*00               620 	mov	_bp,a
   0006 24 05               621 	add	a,#0x05
   0008 F5 81               622 	mov	sp,a
   000A AD 82               623 	mov	r5,dpl
   000C AE 83               624 	mov	r6,dph
   000E AF F0               625 	mov	r7,b
                            626 ;	../../core/net/rime/broadcast.c:67: struct broadcast_conn *c = (struct broadcast_conn *)bc;
   0010 E5*00               627 	mov	a,_bp
   0012 24 03               628 	add	a,#0x03
   0014 F8                  629 	mov	r0,a
   0015 A6 05               630 	mov	@r0,ar5
   0017 08                  631 	inc	r0
   0018 A6 06               632 	mov	@r0,ar6
   001A 08                  633 	inc	r0
   001B A6 07               634 	mov	@r0,ar7
                            635 ;	../../core/net/rime/broadcast.c:69: rimeaddr_copy(&sender, packetbuf_addr(PACKETBUF_ADDR_SENDER));
   001D 75 82 18            636 	mov	dpl,#0x18
   0020 12s00r00            637 	lcall	_packetbuf_addr
   0023 AA 82               638 	mov	r2,dpl
   0025 AB 83               639 	mov	r3,dph
   0027 AC F0               640 	mov	r4,b
   0029 AF*00               641 	mov	r7,_bp
   002B 0F                  642 	inc	r7
   002C 7E 00               643 	mov	r6,#0x00
   002E 7D 40               644 	mov	r5,#0x40
   0030 C0 02               645 	push	ar2
   0032 C0 03               646 	push	ar3
   0034 C0 04               647 	push	ar4
   0036 8F 82               648 	mov	dpl,r7
   0038 8E 83               649 	mov	dph,r6
   003A 8D F0               650 	mov	b,r5
   003C 12s00r00            651 	lcall	_rimeaddr_copy
   003F 15 81               652 	dec	sp
   0041 15 81               653 	dec	sp
   0043 15 81               654 	dec	sp
                            655 ;	../../core/net/rime/broadcast.c:74: c->u->recv(c, &sender);
   0045 E5*00               656 	mov	a,_bp
   0047 24 03               657 	add	a,#0x03
   0049 F8                  658 	mov	r0,a
   004A 74 0C               659 	mov	a,#0x0C
   004C 26                  660 	add	a,@r0
   004D FD                  661 	mov	r5,a
   004E E4                  662 	clr	a
   004F 08                  663 	inc	r0
   0050 36                  664 	addc	a,@r0
   0051 FE                  665 	mov	r6,a
   0052 08                  666 	inc	r0
   0053 86 07               667 	mov	ar7,@r0
   0055 8D 82               668 	mov	dpl,r5
   0057 8E 83               669 	mov	dph,r6
   0059 8F F0               670 	mov	b,r7
   005B 12s00r00            671 	lcall	__gptrget
   005E FD                  672 	mov	r5,a
   005F A3                  673 	inc	dptr
   0060 12s00r00            674 	lcall	__gptrget
   0063 FE                  675 	mov	r6,a
   0064 A3                  676 	inc	dptr
   0065 12s00r00            677 	lcall	__gptrget
   0068 FF                  678 	mov	r7,a
   0069 8D 82               679 	mov	dpl,r5
   006B 8E 83               680 	mov	dph,r6
   006D 8F F0               681 	mov	b,r7
   006F 12s00r00            682 	lcall	__gptrget
   0072 FD                  683 	mov	r5,a
   0073 A3                  684 	inc	dptr
   0074 12s00r00            685 	lcall	__gptrget
   0077 FE                  686 	mov	r6,a
   0078 AF*00               687 	mov	r7,_bp
   007A 0F                  688 	inc	r7
   007B 7C 00               689 	mov	r4,#0x00
   007D 7B 40               690 	mov	r3,#0x40
   007F C0 06               691 	push	ar6
   0081 C0 05               692 	push	ar5
   0083 C0 07               693 	push	ar7
   0085 C0 04               694 	push	ar4
   0087 C0 03               695 	push	ar3
   0089 74rA3               696 	mov	a,#00103$
   008B C0 E0               697 	push	acc
   008D 74s00               698 	mov	a,#(00103$ >> 8)
   008F C0 E0               699 	push	acc
   0091 C0 05               700 	push	ar5
   0093 C0 06               701 	push	ar6
   0095 E5*00               702 	mov	a,_bp
   0097 24 03               703 	add	a,#0x03
   0099 F8                  704 	mov	r0,a
   009A 86 82               705 	mov	dpl,@r0
   009C 08                  706 	inc	r0
   009D 86 83               707 	mov	dph,@r0
   009F 08                  708 	inc	r0
   00A0 86 F0               709 	mov	b,@r0
   00A2 22                  710 	ret
   00A3                     711 00103$:
   00A3 15 81               712 	dec	sp
   00A5 15 81               713 	dec	sp
   00A7 15 81               714 	dec	sp
   00A9 D0 05               715 	pop	ar5
   00AB D0 06               716 	pop	ar6
   00AD 85*00 81            717 	mov	sp,_bp
   00B0 D0*00               718 	pop	_bp
   00B2 22                  719 	ret
                            720 ;------------------------------------------------------------
                            721 ;Allocation info for local variables in function 'sent_by_abc'
                            722 ;------------------------------------------------------------
                            723 ;status                    Allocated to stack - _bp -4
                            724 ;num_tx                    Allocated to stack - _bp -6
                            725 ;bc                        Allocated to registers r5 r6 r7 
                            726 ;c                         Allocated to registers r5 r6 r7 
                            727 ;------------------------------------------------------------
                            728 ;	../../core/net/rime/broadcast.c:78: sent_by_abc(struct abc_conn *bc, int status, int num_tx)
                            729 ;	-----------------------------------------
                            730 ;	 function sent_by_abc
                            731 ;	-----------------------------------------
   00B3                     732 _sent_by_abc:
   00B3 C0*00               733 	push	_bp
   00B5 85 81*00            734 	mov	_bp,sp
   00B8 AD 82               735 	mov	r5,dpl
   00BA AE 83               736 	mov	r6,dph
   00BC AF F0               737 	mov	r7,b
                            738 ;	../../core/net/rime/broadcast.c:80: struct broadcast_conn *c = (struct broadcast_conn *)bc;
                            739 ;	../../core/net/rime/broadcast.c:87: if(c->u->sent) {
   00BE 74 0C               740 	mov	a,#0x0C
   00C0 2D                  741 	add	a,r5
   00C1 FA                  742 	mov	r2,a
   00C2 E4                  743 	clr	a
   00C3 3E                  744 	addc	a,r6
   00C4 FB                  745 	mov	r3,a
   00C5 8F 04               746 	mov	ar4,r7
   00C7 8A 82               747 	mov	dpl,r2
   00C9 8B 83               748 	mov	dph,r3
   00CB 8C F0               749 	mov	b,r4
   00CD 12s00r00            750 	lcall	__gptrget
   00D0 FA                  751 	mov	r2,a
   00D1 A3                  752 	inc	dptr
   00D2 12s00r00            753 	lcall	__gptrget
   00D5 FB                  754 	mov	r3,a
   00D6 A3                  755 	inc	dptr
   00D7 12s00r00            756 	lcall	__gptrget
   00DA FC                  757 	mov	r4,a
   00DB 74 02               758 	mov	a,#0x02
   00DD 2A                  759 	add	a,r2
   00DE FA                  760 	mov	r2,a
   00DF E4                  761 	clr	a
   00E0 3B                  762 	addc	a,r3
   00E1 FB                  763 	mov	r3,a
   00E2 8A 82               764 	mov	dpl,r2
   00E4 8B 83               765 	mov	dph,r3
   00E6 8C F0               766 	mov	b,r4
   00E8 12s00r00            767 	lcall	__gptrget
   00EB FB                  768 	mov	r3,a
   00EC A3                  769 	inc	dptr
   00ED 12s00r00            770 	lcall	__gptrget
   00F0 FC                  771 	mov	r4,a
   00F1 4B                  772 	orl	a,r3
   00F2 60 39               773 	jz	00103$
                            774 ;	../../core/net/rime/broadcast.c:88: c->u->sent(c, status, num_tx);
   00F4 C0 04               775 	push	ar4
   00F6 C0 03               776 	push	ar3
   00F8 E5*00               777 	mov	a,_bp
   00FA 24 FA               778 	add	a,#0xfa
   00FC F8                  779 	mov	r0,a
   00FD E6                  780 	mov	a,@r0
   00FE C0 E0               781 	push	acc
   0100 08                  782 	inc	r0
   0101 E6                  783 	mov	a,@r0
   0102 C0 E0               784 	push	acc
   0104 E5*00               785 	mov	a,_bp
   0106 24 FC               786 	add	a,#0xfc
   0108 F8                  787 	mov	r0,a
   0109 E6                  788 	mov	a,@r0
   010A C0 E0               789 	push	acc
   010C 08                  790 	inc	r0
   010D E6                  791 	mov	a,@r0
   010E C0 E0               792 	push	acc
   0110 74r23               793 	mov	a,#00108$
   0112 C0 E0               794 	push	acc
   0114 74s01               795 	mov	a,#(00108$ >> 8)
   0116 C0 E0               796 	push	acc
   0118 C0 03               797 	push	ar3
   011A C0 04               798 	push	ar4
   011C 8D 82               799 	mov	dpl,r5
   011E 8E 83               800 	mov	dph,r6
   0120 8F F0               801 	mov	b,r7
   0122 22                  802 	ret
   0123                     803 00108$:
   0123 E5 81               804 	mov	a,sp
   0125 24 FC               805 	add	a,#0xfc
   0127 F5 81               806 	mov	sp,a
   0129 D0 03               807 	pop	ar3
   012B D0 04               808 	pop	ar4
   012D                     809 00103$:
   012D D0*00               810 	pop	_bp
   012F 22                  811 	ret
                            812 ;------------------------------------------------------------
                            813 ;Allocation info for local variables in function 'broadcast_open'
                            814 ;------------------------------------------------------------
                            815 ;channel                   Allocated to stack - _bp -4
                            816 ;u                         Allocated to stack - _bp -7
                            817 ;c                         Allocated to registers r5 r6 r7 
                            818 ;------------------------------------------------------------
                            819 ;	../../core/net/rime/broadcast.c:95: broadcast_open(struct broadcast_conn *c, uint16_t channel,
                            820 ;	-----------------------------------------
                            821 ;	 function broadcast_open
                            822 ;	-----------------------------------------
   0130                     823 _broadcast_open:
   0130 C0*00               824 	push	_bp
   0132 85 81*00            825 	mov	_bp,sp
   0135 AD 82               826 	mov	r5,dpl
   0137 AE 83               827 	mov	r6,dph
   0139 AF F0               828 	mov	r7,b
                            829 ;	../../core/net/rime/broadcast.c:98: abc_open(&c->c, channel, &broadcast);
   013B C0 07               830 	push	ar7
   013D C0 06               831 	push	ar6
   013F C0 05               832 	push	ar5
   0141 74r04               833 	mov	a,#_broadcast
   0143 C0 E0               834 	push	acc
   0145 74s00               835 	mov	a,#(_broadcast >> 8)
   0147 C0 E0               836 	push	acc
   0149 74 80               837 	mov	a,#0x80
   014B C0 E0               838 	push	acc
   014D E5*00               839 	mov	a,_bp
   014F 24 FC               840 	add	a,#0xfc
   0151 F8                  841 	mov	r0,a
   0152 E6                  842 	mov	a,@r0
   0153 C0 E0               843 	push	acc
   0155 08                  844 	inc	r0
   0156 E6                  845 	mov	a,@r0
   0157 C0 E0               846 	push	acc
   0159 8D 82               847 	mov	dpl,r5
   015B 8E 83               848 	mov	dph,r6
   015D 8F F0               849 	mov	b,r7
   015F 12s00r00            850 	lcall	_abc_open
   0162 E5 81               851 	mov	a,sp
   0164 24 FB               852 	add	a,#0xfb
   0166 F5 81               853 	mov	sp,a
   0168 D0 05               854 	pop	ar5
   016A D0 06               855 	pop	ar6
   016C D0 07               856 	pop	ar7
                            857 ;	../../core/net/rime/broadcast.c:99: c->u = u;
   016E 74 0C               858 	mov	a,#0x0C
   0170 2D                  859 	add	a,r5
   0171 FD                  860 	mov	r5,a
   0172 E4                  861 	clr	a
   0173 3E                  862 	addc	a,r6
   0174 FE                  863 	mov	r6,a
   0175 8D 82               864 	mov	dpl,r5
   0177 8E 83               865 	mov	dph,r6
   0179 8F F0               866 	mov	b,r7
   017B E5*00               867 	mov	a,_bp
   017D 24 F9               868 	add	a,#0xf9
   017F F8                  869 	mov	r0,a
   0180 E6                  870 	mov	a,@r0
   0181 12s00r00            871 	lcall	__gptrput
   0184 A3                  872 	inc	dptr
   0185 08                  873 	inc	r0
   0186 E6                  874 	mov	a,@r0
   0187 12s00r00            875 	lcall	__gptrput
   018A A3                  876 	inc	dptr
   018B 08                  877 	inc	r0
   018C E6                  878 	mov	a,@r0
   018D 12s00r00            879 	lcall	__gptrput
                            880 ;	../../core/net/rime/broadcast.c:100: channel_set_attributes(channel, attributes);
   0190 74r00               881 	mov	a,#_attributes
   0192 C0 E0               882 	push	acc
   0194 74s00               883 	mov	a,#(_attributes >> 8)
   0196 C0 E0               884 	push	acc
   0198 74 80               885 	mov	a,#0x80
   019A C0 E0               886 	push	acc
   019C E5*00               887 	mov	a,_bp
   019E 24 FC               888 	add	a,#0xfc
   01A0 F8                  889 	mov	r0,a
   01A1 86 82               890 	mov	dpl,@r0
   01A3 08                  891 	inc	r0
   01A4 86 83               892 	mov	dph,@r0
   01A6 12s00r00            893 	lcall	_channel_set_attributes
   01A9 15 81               894 	dec	sp
   01AB 15 81               895 	dec	sp
   01AD 15 81               896 	dec	sp
   01AF D0*00               897 	pop	_bp
   01B1 22                  898 	ret
                            899 ;------------------------------------------------------------
                            900 ;Allocation info for local variables in function 'broadcast_close'
                            901 ;------------------------------------------------------------
                            902 ;c                         Allocated to registers r5 r6 r7 
                            903 ;------------------------------------------------------------
                            904 ;	../../core/net/rime/broadcast.c:104: broadcast_close(struct broadcast_conn *c)
                            905 ;	-----------------------------------------
                            906 ;	 function broadcast_close
                            907 ;	-----------------------------------------
   01B2                     908 _broadcast_close:
                            909 ;	../../core/net/rime/broadcast.c:106: abc_close(&c->c);
   01B2 02s00r00            910 	ljmp	_abc_close
                            911 ;------------------------------------------------------------
                            912 ;Allocation info for local variables in function 'broadcast_send'
                            913 ;------------------------------------------------------------
                            914 ;c                         Allocated to registers r5 r6 r7 
                            915 ;------------------------------------------------------------
                            916 ;	../../core/net/rime/broadcast.c:110: broadcast_send(struct broadcast_conn *c)
                            917 ;	-----------------------------------------
                            918 ;	 function broadcast_send
                            919 ;	-----------------------------------------
   01B5                     920 _broadcast_send:
   01B5 AD 82               921 	mov	r5,dpl
   01B7 AE 83               922 	mov	r6,dph
   01B9 AF F0               923 	mov	r7,b
                            924 ;	../../core/net/rime/broadcast.c:114: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
   01BB C0 07               925 	push	ar7
   01BD C0 06               926 	push	ar6
   01BF C0 05               927 	push	ar5
   01C1 74r00               928 	mov	a,#_rimeaddr_node_addr
   01C3 C0 E0               929 	push	acc
   01C5 74s00               930 	mov	a,#(_rimeaddr_node_addr >> 8)
   01C7 C0 E0               931 	push	acc
   01C9 E4                  932 	clr	a
   01CA C0 E0               933 	push	acc
   01CC 75 82 18            934 	mov	dpl,#0x18
   01CF 12s00r00            935 	lcall	_packetbuf_set_addr
   01D2 15 81               936 	dec	sp
   01D4 15 81               937 	dec	sp
   01D6 15 81               938 	dec	sp
   01D8 D0 05               939 	pop	ar5
   01DA D0 06               940 	pop	ar6
   01DC D0 07               941 	pop	ar7
                            942 ;	../../core/net/rime/broadcast.c:115: return abc_send(&c->c);
   01DE 8D 82               943 	mov	dpl,r5
   01E0 8E 83               944 	mov	dph,r6
   01E2 8F F0               945 	mov	b,r7
   01E4 02s00r00            946 	ljmp	_abc_send
                            947 	.area CSEG    (CODE)
                            948 	.area CONST   (CODE)
   0000                     949 _attributes:
   0000 18                  950 	.db #0x18	; 24
   0001 10                  951 	.db #0x10	; 16
   0002 00                  952 	.db #0x00	; 0
   0003 00                  953 	.db #0x00	; 0
   0004                     954 _broadcast:
   0004r00s00               955 	.byte _recv_from_abc,(_recv_from_abc >> 8)
   0006rB3s00               956 	.byte _sent_by_abc,(_sent_by_abc >> 8)
                            957 	.area XINIT   (CODE)
                            958 	.area CABS    (ABS,CODE)
