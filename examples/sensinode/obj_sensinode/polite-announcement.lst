                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Apr  1 2013) (Linux)
                              4 ; This file was generated Tue Apr 23 09:41:15 2013
                              5 ;--------------------------------------------------------
                              6 	.module polite_announcement
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _polite_announcement_stop
                             13 	.globl _ipolite_send
                             14 	.globl _ipolite_close
                             15 	.globl _ipolite_open
                             16 	.globl _packetbuf_set_datalen
                             17 	.globl _packetbuf_datalen
                             18 	.globl _packetbuf_dataptr
                             19 	.globl _packetbuf_clear
                             20 	.globl _announcement_register_observer_callback
                             21 	.globl _announcement_heard
                             22 	.globl _announcement_list
                             23 	.globl _list_item_next
                             24 	.globl _ctimer_stop
                             25 	.globl _ctimer_set
                             26 	.globl _memcpy
                             27 	.globl _IRCON2_P2IF
                             28 	.globl _IRCON2_UTX0IF
                             29 	.globl _IRCON2_UTX1IF
                             30 	.globl _IRCON2_P1IF
                             31 	.globl _IRCON2_WDTIF
                             32 	.globl _CY
                             33 	.globl _AC
                             34 	.globl _F0
                             35 	.globl _RS1
                             36 	.globl _RS0
                             37 	.globl _OV
                             38 	.globl _F1
                             39 	.globl _P
                             40 	.globl _IRCON_DMAIF
                             41 	.globl _IRCON_T1IF
                             42 	.globl _IRCON_T2IF
                             43 	.globl _IRCON_T3IF
                             44 	.globl _IRCON_T4IF
                             45 	.globl _IRCON_P0IF
                             46 	.globl _IRCON_STIF
                             47 	.globl _IEN1_DMAIE
                             48 	.globl _IEN1_T1IE
                             49 	.globl _IEN1_T2IE
                             50 	.globl _IEN1_T3IE
                             51 	.globl _IEN1_T4IE
                             52 	.globl _IEN1_P0IE
                             53 	.globl _IEN0_RFERRIE
                             54 	.globl _IEN0_ADCIE
                             55 	.globl _IEN0_URX0IE
                             56 	.globl _IEN0_URX1IE
                             57 	.globl _IEN0_ENCIE
                             58 	.globl _IEN0_STIE
                             59 	.globl _IEN0_EA
                             60 	.globl _EA
                             61 	.globl _P2_4
                             62 	.globl _P2_3
                             63 	.globl _P2_2
                             64 	.globl _P2_1
                             65 	.globl _P2_0
                             66 	.globl _S0CON_ENCIF_0
                             67 	.globl _S0CON_ENCIF_1
                             68 	.globl _P1_7
                             69 	.globl _P1_6
                             70 	.globl _P1_5
                             71 	.globl _P1_4
                             72 	.globl _P1_3
                             73 	.globl _P1_2
                             74 	.globl _P1_1
                             75 	.globl _P1_0
                             76 	.globl _TCON_IT0
                             77 	.globl _TCON_RFERRIF
                             78 	.globl _TCON_IT1
                             79 	.globl _TCON_URX0IF
                             80 	.globl _TCON_ADCIF
                             81 	.globl _TCON_URX1IF
                             82 	.globl _P0_0
                             83 	.globl _P0_1
                             84 	.globl _P0_2
                             85 	.globl _P0_3
                             86 	.globl _P0_4
                             87 	.globl _P0_5
                             88 	.globl _P0_6
                             89 	.globl _P0_7
                             90 	.globl _P2DIR
                             91 	.globl _P1DIR
                             92 	.globl _P0DIR
                             93 	.globl _U1GCR
                             94 	.globl _U1UCR
                             95 	.globl _U1BAUD
                             96 	.globl _U1BUF
                             97 	.globl _U1CSR
                             98 	.globl _P2INP
                             99 	.globl _P1INP
                            100 	.globl _P2SEL
                            101 	.globl _P1SEL
                            102 	.globl _P0SEL
                            103 	.globl _ADCCFG
                            104 	.globl _PERCFG
                            105 	.globl _B
                            106 	.globl _T4CC1
                            107 	.globl _T4CCTL1
                            108 	.globl _T4CC0
                            109 	.globl _T4CCTL0
                            110 	.globl _T4CTL
                            111 	.globl _T4CNT
                            112 	.globl _RFIF
                            113 	.globl _IRCON2
                            114 	.globl _T1CCTL2
                            115 	.globl _T1CCTL1
                            116 	.globl _T1CCTL0
                            117 	.globl _T1CTL
                            118 	.globl _T1CNTH
                            119 	.globl _T1CNTL
                            120 	.globl _RFST
                            121 	.globl _ACC
                            122 	.globl _T1CC2H
                            123 	.globl _T1CC2L
                            124 	.globl _T1CC1H
                            125 	.globl _T1CC1L
                            126 	.globl _T1CC0H
                            127 	.globl _T1CC0L
                            128 	.globl _RFD
                            129 	.globl _TIMIF
                            130 	.globl _DMAREQ
                            131 	.globl _DMAARM
                            132 	.globl _DMA0CFGH
                            133 	.globl _DMA0CFGL
                            134 	.globl _DMA1CFGH
                            135 	.globl _DMA1CFGL
                            136 	.globl _DMAIRQ
                            137 	.globl _PSW
                            138 	.globl _T3CC1
                            139 	.globl _T3CCTL1
                            140 	.globl _T3CC0
                            141 	.globl _T3CCTL0
                            142 	.globl _T3CTL
                            143 	.globl _T3CNT
                            144 	.globl _WDCTL
                            145 	.globl _T2CON
                            146 	.globl _MEMCTR
                            147 	.globl _CLKCON
                            148 	.globl _U0GCR
                            149 	.globl _U0UCR
                            150 	.globl _T2CNF
                            151 	.globl _U0BAUD
                            152 	.globl _U0BUF
                            153 	.globl _IRCON
                            154 	.globl _SLEEP
                            155 	.globl _RNDH
                            156 	.globl _RNDL
                            157 	.globl _ADCH
                            158 	.globl _ADCL
                            159 	.globl _IP1
                            160 	.globl _IEN1
                            161 	.globl _RCCTL
                            162 	.globl _ADCCON3
                            163 	.globl _ADCCON2
                            164 	.globl _ADCCON1
                            165 	.globl _ENCCS
                            166 	.globl _ENCDO
                            167 	.globl _ENCDI
                            168 	.globl _FWDATA
                            169 	.globl _FCTL
                            170 	.globl _FADDRH
                            171 	.globl _FADDRL
                            172 	.globl _FWT
                            173 	.globl _IP0
                            174 	.globl _IEN0
                            175 	.globl _IE
                            176 	.globl _T2THD
                            177 	.globl _T2TLD
                            178 	.globl _T2CAPHPH
                            179 	.globl _T2CAPLPL
                            180 	.globl _T2OF2
                            181 	.globl _T2OF1
                            182 	.globl _T2OF0
                            183 	.globl _P2
                            184 	.globl _PSBANK
                            185 	.globl _FMAP
                            186 	.globl _T2PEROF2
                            187 	.globl _T2PEROF1
                            188 	.globl _T2PEROF0
                            189 	.globl _S1CON
                            190 	.globl _IEN2
                            191 	.globl _HSRC
                            192 	.globl _S0CON
                            193 	.globl _ST2
                            194 	.globl _ST1
                            195 	.globl _ST0
                            196 	.globl _T2CMP
                            197 	.globl __XPAGE
                            198 	.globl _DPS
                            199 	.globl _RFIM
                            200 	.globl _P1
                            201 	.globl _P0INP
                            202 	.globl _P1IEN
                            203 	.globl _PICTL
                            204 	.globl _P2IFG
                            205 	.globl _P1IFG
                            206 	.globl _P0IFG
                            207 	.globl _TCON
                            208 	.globl _PCON
                            209 	.globl _U0CSR
                            210 	.globl _DPH1
                            211 	.globl _DPL1
                            212 	.globl _DPH0
                            213 	.globl _DPL0
                            214 	.globl _SP
                            215 	.globl _P0
                            216 	.globl _ADC_SHADOW
                            217 	.globl _U1BUF_SHADOW
                            218 	.globl _RFD_SHADOW
                            219 	.globl _U0BUF_SHADOW
                            220 	.globl _RFSTATUS
                            221 	.globl _CHIPID
                            222 	.globl _CHVER
                            223 	.globl _FSMTC1
                            224 	.globl _RXFIFOCNT
                            225 	.globl _IOCFG3
                            226 	.globl _IOCFG2
                            227 	.globl _IOCFG1
                            228 	.globl _IOCFG0
                            229 	.globl _SHORTADDRL
                            230 	.globl _SHORTADDRH
                            231 	.globl _PANIDL
                            232 	.globl _PANIDH
                            233 	.globl _IEEE_ADDR7
                            234 	.globl _IEEE_ADDR6
                            235 	.globl _IEEE_ADDR5
                            236 	.globl _IEEE_ADDR4
                            237 	.globl _IEEE_ADDR3
                            238 	.globl _IEEE_ADDR2
                            239 	.globl _IEEE_ADDR1
                            240 	.globl _IEEE_ADDR0
                            241 	.globl _DACTSTL
                            242 	.globl _DACTSTH
                            243 	.globl _ADCTSTL
                            244 	.globl _ADCTSTH
                            245 	.globl _FSMSTATE
                            246 	.globl _AGCCTRLL
                            247 	.globl _AGCCTRLH
                            248 	.globl _MANORL
                            249 	.globl _MANORH
                            250 	.globl _MANANDL
                            251 	.globl _MANANDH
                            252 	.globl _FSMTCL
                            253 	.globl _FSMTCH
                            254 	.globl _RFPWR
                            255 	.globl _CSPT
                            256 	.globl _CSPCTRL
                            257 	.globl _CSPZ
                            258 	.globl _CSPY
                            259 	.globl _CSPX
                            260 	.globl _FSCTRLL
                            261 	.globl _FSCTRLH
                            262 	.globl _RXCTRL1L
                            263 	.globl _RXCTRL1H
                            264 	.globl _RXCTRL0L
                            265 	.globl _RXCTRL0H
                            266 	.globl _TXCTRLL
                            267 	.globl _TXCTRLH
                            268 	.globl _SYNCWORDL
                            269 	.globl _SYNCWORDH
                            270 	.globl _RSSIL
                            271 	.globl _RSSIH
                            272 	.globl _MDMCTRL1L
                            273 	.globl _MDMCTRL1H
                            274 	.globl _MDMCTRL0L
                            275 	.globl _MDMCTRL0H
                            276 	.globl _polite_announcement_init
                            277 ;--------------------------------------------------------
                            278 ; special function registers
                            279 ;--------------------------------------------------------
                            280 	.area RSEG    (ABS,DATA)
   0000                     281 	.org 0x0000
                    0080    282 _P0	=	0x0080
                    0081    283 _SP	=	0x0081
                    0082    284 _DPL0	=	0x0082
                    0083    285 _DPH0	=	0x0083
                    0084    286 _DPL1	=	0x0084
                    0085    287 _DPH1	=	0x0085
                    0086    288 _U0CSR	=	0x0086
                    0087    289 _PCON	=	0x0087
                    0088    290 _TCON	=	0x0088
                    0089    291 _P0IFG	=	0x0089
                    008A    292 _P1IFG	=	0x008a
                    008B    293 _P2IFG	=	0x008b
                    008C    294 _PICTL	=	0x008c
                    008D    295 _P1IEN	=	0x008d
                    008F    296 _P0INP	=	0x008f
                    0090    297 _P1	=	0x0090
                    0091    298 _RFIM	=	0x0091
                    0092    299 _DPS	=	0x0092
                    0093    300 __XPAGE	=	0x0093
                    0094    301 _T2CMP	=	0x0094
                    0095    302 _ST0	=	0x0095
                    0096    303 _ST1	=	0x0096
                    0097    304 _ST2	=	0x0097
                    0098    305 _S0CON	=	0x0098
                    0099    306 _HSRC	=	0x0099
                    009A    307 _IEN2	=	0x009a
                    009B    308 _S1CON	=	0x009b
                    009C    309 _T2PEROF0	=	0x009c
                    009D    310 _T2PEROF1	=	0x009d
                    009E    311 _T2PEROF2	=	0x009e
                    009F    312 _FMAP	=	0x009f
                    009F    313 _PSBANK	=	0x009f
                    00A0    314 _P2	=	0x00a0
                    00A1    315 _T2OF0	=	0x00a1
                    00A2    316 _T2OF1	=	0x00a2
                    00A3    317 _T2OF2	=	0x00a3
                    00A4    318 _T2CAPLPL	=	0x00a4
                    00A5    319 _T2CAPHPH	=	0x00a5
                    00A6    320 _T2TLD	=	0x00a6
                    00A7    321 _T2THD	=	0x00a7
                    00A8    322 _IE	=	0x00a8
                    00A8    323 _IEN0	=	0x00a8
                    00A9    324 _IP0	=	0x00a9
                    00AB    325 _FWT	=	0x00ab
                    00AC    326 _FADDRL	=	0x00ac
                    00AD    327 _FADDRH	=	0x00ad
                    00AE    328 _FCTL	=	0x00ae
                    00AF    329 _FWDATA	=	0x00af
                    00B1    330 _ENCDI	=	0x00b1
                    00B2    331 _ENCDO	=	0x00b2
                    00B3    332 _ENCCS	=	0x00b3
                    00B4    333 _ADCCON1	=	0x00b4
                    00B5    334 _ADCCON2	=	0x00b5
                    00B6    335 _ADCCON3	=	0x00b6
                    00B7    336 _RCCTL	=	0x00b7
                    00B8    337 _IEN1	=	0x00b8
                    00B9    338 _IP1	=	0x00b9
                    00BA    339 _ADCL	=	0x00ba
                    00BB    340 _ADCH	=	0x00bb
                    00BC    341 _RNDL	=	0x00bc
                    00BD    342 _RNDH	=	0x00bd
                    00BE    343 _SLEEP	=	0x00be
                    00C0    344 _IRCON	=	0x00c0
                    00C1    345 _U0BUF	=	0x00c1
                    00C2    346 _U0BAUD	=	0x00c2
                    00C3    347 _T2CNF	=	0x00c3
                    00C4    348 _U0UCR	=	0x00c4
                    00C5    349 _U0GCR	=	0x00c5
                    00C6    350 _CLKCON	=	0x00c6
                    00C7    351 _MEMCTR	=	0x00c7
                    00C8    352 _T2CON	=	0x00c8
                    00C9    353 _WDCTL	=	0x00c9
                    00CA    354 _T3CNT	=	0x00ca
                    00CB    355 _T3CTL	=	0x00cb
                    00CC    356 _T3CCTL0	=	0x00cc
                    00CD    357 _T3CC0	=	0x00cd
                    00CE    358 _T3CCTL1	=	0x00ce
                    00CF    359 _T3CC1	=	0x00cf
                    00D0    360 _PSW	=	0x00d0
                    00D1    361 _DMAIRQ	=	0x00d1
                    00D2    362 _DMA1CFGL	=	0x00d2
                    00D3    363 _DMA1CFGH	=	0x00d3
                    00D4    364 _DMA0CFGL	=	0x00d4
                    00D5    365 _DMA0CFGH	=	0x00d5
                    00D6    366 _DMAARM	=	0x00d6
                    00D7    367 _DMAREQ	=	0x00d7
                    00D8    368 _TIMIF	=	0x00d8
                    00D9    369 _RFD	=	0x00d9
                    00DA    370 _T1CC0L	=	0x00da
                    00DB    371 _T1CC0H	=	0x00db
                    00DC    372 _T1CC1L	=	0x00dc
                    00DD    373 _T1CC1H	=	0x00dd
                    00DE    374 _T1CC2L	=	0x00de
                    00DF    375 _T1CC2H	=	0x00df
                    00E0    376 _ACC	=	0x00e0
                    00E1    377 _RFST	=	0x00e1
                    00E2    378 _T1CNTL	=	0x00e2
                    00E3    379 _T1CNTH	=	0x00e3
                    00E4    380 _T1CTL	=	0x00e4
                    00E5    381 _T1CCTL0	=	0x00e5
                    00E6    382 _T1CCTL1	=	0x00e6
                    00E7    383 _T1CCTL2	=	0x00e7
                    00E8    384 _IRCON2	=	0x00e8
                    00E9    385 _RFIF	=	0x00e9
                    00EA    386 _T4CNT	=	0x00ea
                    00EB    387 _T4CTL	=	0x00eb
                    00EC    388 _T4CCTL0	=	0x00ec
                    00ED    389 _T4CC0	=	0x00ed
                    00EE    390 _T4CCTL1	=	0x00ee
                    00EF    391 _T4CC1	=	0x00ef
                    00F0    392 _B	=	0x00f0
                    00F1    393 _PERCFG	=	0x00f1
                    00F2    394 _ADCCFG	=	0x00f2
                    00F3    395 _P0SEL	=	0x00f3
                    00F4    396 _P1SEL	=	0x00f4
                    00F5    397 _P2SEL	=	0x00f5
                    00F6    398 _P1INP	=	0x00f6
                    00F7    399 _P2INP	=	0x00f7
                    00F8    400 _U1CSR	=	0x00f8
                    00F9    401 _U1BUF	=	0x00f9
                    00FA    402 _U1BAUD	=	0x00fa
                    00FB    403 _U1UCR	=	0x00fb
                    00FC    404 _U1GCR	=	0x00fc
                    00FD    405 _P0DIR	=	0x00fd
                    00FE    406 _P1DIR	=	0x00fe
                    00FF    407 _P2DIR	=	0x00ff
                            408 ;--------------------------------------------------------
                            409 ; special function bits
                            410 ;--------------------------------------------------------
                            411 	.area RSEG    (ABS,DATA)
   0000                     412 	.org 0x0000
                    0087    413 _P0_7	=	0x0087
                    0086    414 _P0_6	=	0x0086
                    0085    415 _P0_5	=	0x0085
                    0084    416 _P0_4	=	0x0084
                    0083    417 _P0_3	=	0x0083
                    0082    418 _P0_2	=	0x0082
                    0081    419 _P0_1	=	0x0081
                    0080    420 _P0_0	=	0x0080
                    008F    421 _TCON_URX1IF	=	0x008f
                    008D    422 _TCON_ADCIF	=	0x008d
                    008B    423 _TCON_URX0IF	=	0x008b
                    008A    424 _TCON_IT1	=	0x008a
                    0089    425 _TCON_RFERRIF	=	0x0089
                    0088    426 _TCON_IT0	=	0x0088
                    0090    427 _P1_0	=	0x0090
                    0091    428 _P1_1	=	0x0091
                    0092    429 _P1_2	=	0x0092
                    0093    430 _P1_3	=	0x0093
                    0094    431 _P1_4	=	0x0094
                    0095    432 _P1_5	=	0x0095
                    0096    433 _P1_6	=	0x0096
                    0097    434 _P1_7	=	0x0097
                    0099    435 _S0CON_ENCIF_1	=	0x0099
                    0098    436 _S0CON_ENCIF_0	=	0x0098
                    00A0    437 _P2_0	=	0x00a0
                    00A1    438 _P2_1	=	0x00a1
                    00A2    439 _P2_2	=	0x00a2
                    00A3    440 _P2_3	=	0x00a3
                    00A4    441 _P2_4	=	0x00a4
                    00AF    442 _EA	=	0x00af
                    00AF    443 _IEN0_EA	=	0x00af
                    00AD    444 _IEN0_STIE	=	0x00ad
                    00AC    445 _IEN0_ENCIE	=	0x00ac
                    00AB    446 _IEN0_URX1IE	=	0x00ab
                    00AA    447 _IEN0_URX0IE	=	0x00aa
                    00A9    448 _IEN0_ADCIE	=	0x00a9
                    00A8    449 _IEN0_RFERRIE	=	0x00a8
                    00BD    450 _IEN1_P0IE	=	0x00bd
                    00BC    451 _IEN1_T4IE	=	0x00bc
                    00BB    452 _IEN1_T3IE	=	0x00bb
                    00BA    453 _IEN1_T2IE	=	0x00ba
                    00B9    454 _IEN1_T1IE	=	0x00b9
                    00B8    455 _IEN1_DMAIE	=	0x00b8
                    00C7    456 _IRCON_STIF	=	0x00c7
                    00C5    457 _IRCON_P0IF	=	0x00c5
                    00C4    458 _IRCON_T4IF	=	0x00c4
                    00C3    459 _IRCON_T3IF	=	0x00c3
                    00C2    460 _IRCON_T2IF	=	0x00c2
                    00C1    461 _IRCON_T1IF	=	0x00c1
                    00C0    462 _IRCON_DMAIF	=	0x00c0
                    00D0    463 _P	=	0x00d0
                    00D1    464 _F1	=	0x00d1
                    00D2    465 _OV	=	0x00d2
                    00D3    466 _RS0	=	0x00d3
                    00D4    467 _RS1	=	0x00d4
                    00D5    468 _F0	=	0x00d5
                    00D6    469 _AC	=	0x00d6
                    00D7    470 _CY	=	0x00d7
                    00EC    471 _IRCON2_WDTIF	=	0x00ec
                    00EB    472 _IRCON2_P1IF	=	0x00eb
                    00EA    473 _IRCON2_UTX1IF	=	0x00ea
                    00E9    474 _IRCON2_UTX0IF	=	0x00e9
                    00E8    475 _IRCON2_P2IF	=	0x00e8
                            476 ;--------------------------------------------------------
                            477 ; overlayable register banks
                            478 ;--------------------------------------------------------
                            479 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     480 	.ds 8
                            481 ;--------------------------------------------------------
                            482 ; internal ram data
                            483 ;--------------------------------------------------------
                            484 	.area DSEG    (DATA)
                            485 ;--------------------------------------------------------
                            486 ; overlayable items in internal ram 
                            487 ;--------------------------------------------------------
                            488 	.area OSEG    (OVR,DATA)
                            489 ;--------------------------------------------------------
                            490 ; indirectly addressable internal ram data
                            491 ;--------------------------------------------------------
                            492 	.area ISEG    (DATA)
                            493 ;--------------------------------------------------------
                            494 ; absolute internal ram data
                            495 ;--------------------------------------------------------
                            496 	.area IABS    (ABS,DATA)
                            497 	.area IABS    (ABS,DATA)
                            498 ;--------------------------------------------------------
                            499 ; bit data
                            500 ;--------------------------------------------------------
                            501 	.area BSEG    (BIT)
                            502 ;--------------------------------------------------------
                            503 ; paged external ram data
                            504 ;--------------------------------------------------------
                            505 	.area PSEG    (PAG,XDATA)
                            506 ;--------------------------------------------------------
                            507 ; external ram data
                            508 ;--------------------------------------------------------
                            509 	.area XSEG    (XDATA)
                    DF02    510 _MDMCTRL0H	=	0xdf02
                    DF03    511 _MDMCTRL0L	=	0xdf03
                    DF04    512 _MDMCTRL1H	=	0xdf04
                    DF05    513 _MDMCTRL1L	=	0xdf05
                    DF06    514 _RSSIH	=	0xdf06
                    DF07    515 _RSSIL	=	0xdf07
                    DF08    516 _SYNCWORDH	=	0xdf08
                    DF09    517 _SYNCWORDL	=	0xdf09
                    DF0A    518 _TXCTRLH	=	0xdf0a
                    DF0B    519 _TXCTRLL	=	0xdf0b
                    DF0C    520 _RXCTRL0H	=	0xdf0c
                    DF0D    521 _RXCTRL0L	=	0xdf0d
                    DF0E    522 _RXCTRL1H	=	0xdf0e
                    DF0F    523 _RXCTRL1L	=	0xdf0f
                    DF10    524 _FSCTRLH	=	0xdf10
                    DF11    525 _FSCTRLL	=	0xdf11
                    DF12    526 _CSPX	=	0xdf12
                    DF13    527 _CSPY	=	0xdf13
                    DF14    528 _CSPZ	=	0xdf14
                    DF15    529 _CSPCTRL	=	0xdf15
                    DF16    530 _CSPT	=	0xdf16
                    DF17    531 _RFPWR	=	0xdf17
                    DF20    532 _FSMTCH	=	0xdf20
                    DF21    533 _FSMTCL	=	0xdf21
                    DF22    534 _MANANDH	=	0xdf22
                    DF23    535 _MANANDL	=	0xdf23
                    DF24    536 _MANORH	=	0xdf24
                    DF25    537 _MANORL	=	0xdf25
                    DF26    538 _AGCCTRLH	=	0xdf26
                    DF27    539 _AGCCTRLL	=	0xdf27
                    DF39    540 _FSMSTATE	=	0xdf39
                    DF3A    541 _ADCTSTH	=	0xdf3a
                    DF3B    542 _ADCTSTL	=	0xdf3b
                    DF3C    543 _DACTSTH	=	0xdf3c
                    DF3D    544 _DACTSTL	=	0xdf3d
                    DF43    545 _IEEE_ADDR0	=	0xdf43
                    DF44    546 _IEEE_ADDR1	=	0xdf44
                    DF45    547 _IEEE_ADDR2	=	0xdf45
                    DF46    548 _IEEE_ADDR3	=	0xdf46
                    DF47    549 _IEEE_ADDR4	=	0xdf47
                    DF48    550 _IEEE_ADDR5	=	0xdf48
                    DF49    551 _IEEE_ADDR6	=	0xdf49
                    DF4A    552 _IEEE_ADDR7	=	0xdf4a
                    DF4B    553 _PANIDH	=	0xdf4b
                    DF4C    554 _PANIDL	=	0xdf4c
                    DF4D    555 _SHORTADDRH	=	0xdf4d
                    DF4E    556 _SHORTADDRL	=	0xdf4e
                    DF4F    557 _IOCFG0	=	0xdf4f
                    DF50    558 _IOCFG1	=	0xdf50
                    DF51    559 _IOCFG2	=	0xdf51
                    DF52    560 _IOCFG3	=	0xdf52
                    DF53    561 _RXFIFOCNT	=	0xdf53
                    DF54    562 _FSMTC1	=	0xdf54
                    DF60    563 _CHVER	=	0xdf60
                    DF61    564 _CHIPID	=	0xdf61
                    DF62    565 _RFSTATUS	=	0xdf62
                    DFC1    566 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    567 _RFD_SHADOW	=	0xdfd9
                    DFF9    568 _U1BUF_SHADOW	=	0xdff9
                    DFBA    569 _ADC_SHADOW	=	0xdfba
   0000                     570 _c:
   0000                     571 	.ds 72
                            572 ;--------------------------------------------------------
                            573 ; absolute external ram data
                            574 ;--------------------------------------------------------
                            575 	.area XABS    (ABS,XDATA)
                            576 ;--------------------------------------------------------
                            577 ; external initialized ram data
                            578 ;--------------------------------------------------------
                            579 	.area XISEG   (XDATA)
                            580 	.area HOME    (CODE)
                            581 	.area GSINIT0 (CODE)
                            582 	.area GSINIT1 (CODE)
                            583 	.area GSINIT2 (CODE)
                            584 	.area GSINIT3 (CODE)
                            585 	.area GSINIT4 (CODE)
                            586 	.area GSINIT5 (CODE)
                            587 	.area GSINIT  (CODE)
                            588 	.area GSFINAL (CODE)
                            589 	.area CSEG    (CODE)
                            590 ;--------------------------------------------------------
                            591 ; global & static initialisations
                            592 ;--------------------------------------------------------
                            593 	.area HOME    (CODE)
                            594 	.area GSINIT  (CODE)
                            595 	.area GSFINAL (CODE)
                            596 	.area GSINIT  (CODE)
                            597 ;--------------------------------------------------------
                            598 ; Home
                            599 ;--------------------------------------------------------
                            600 	.area HOME    (CODE)
                            601 	.area HOME    (CODE)
                            602 ;--------------------------------------------------------
                            603 ; code
                            604 ;--------------------------------------------------------
                            605 	.area CSEG    (CODE)
                            606 ;------------------------------------------------------------
                            607 ;Allocation info for local variables in function 'send_adv'
                            608 ;------------------------------------------------------------
                            609 ;interval                  Allocated to stack - _bp +1
                            610 ;adata                     Allocated to stack - _bp +3
                            611 ;a                         Allocated to stack - _bp +6
                            612 ;sloc0                     Allocated to stack - _bp +9
                            613 ;sloc1                     Allocated to stack - _bp +11
                            614 ;------------------------------------------------------------
                            615 ;	../../core/net/rime/polite-announcement.c:98: send_adv(clock_time_t interval)
                            616 ;	-----------------------------------------
                            617 ;	 function send_adv
                            618 ;	-----------------------------------------
   0000                     619 _send_adv:
                    0007    620 	ar7 = 0x07
                    0006    621 	ar6 = 0x06
                    0005    622 	ar5 = 0x05
                    0004    623 	ar4 = 0x04
                    0003    624 	ar3 = 0x03
                    0002    625 	ar2 = 0x02
                    0001    626 	ar1 = 0x01
                    0000    627 	ar0 = 0x00
   0000 C0*00               628 	push	_bp
   0002 85 81*00            629 	mov	_bp,sp
   0005 C0 82               630 	push	dpl
   0007 C0 83               631 	push	dph
   0009 E5 81               632 	mov	a,sp
   000B 24 0B               633 	add	a,#0x0B
   000D F5 81               634 	mov	sp,a
                            635 ;	../../core/net/rime/polite-announcement.c:103: packetbuf_clear();
   000F 12s00r00            636 	lcall	_packetbuf_clear
                            637 ;	../../core/net/rime/polite-announcement.c:104: adata = packetbuf_dataptr();
   0012 12s00r00            638 	lcall	_packetbuf_dataptr
   0015 AB 82               639 	mov	r3,dpl
   0017 AC 83               640 	mov	r4,dph
   0019 AD F0               641 	mov	r5,b
   001B E5*00               642 	mov	a,_bp
   001D 24 03               643 	add	a,#0x03
   001F F8                  644 	mov	r0,a
   0020 A6 03               645 	mov	@r0,ar3
   0022 08                  646 	inc	r0
   0023 A6 04               647 	mov	@r0,ar4
   0025 08                  648 	inc	r0
   0026 A6 05               649 	mov	@r0,ar5
                            650 ;	../../core/net/rime/polite-announcement.c:105: adata->num = 0;
   0028 E5*00               651 	mov	a,_bp
   002A 24 03               652 	add	a,#0x03
   002C F8                  653 	mov	r0,a
   002D 86 82               654 	mov	dpl,@r0
   002F 08                  655 	inc	r0
   0030 86 83               656 	mov	dph,@r0
   0032 08                  657 	inc	r0
   0033 86 F0               658 	mov	b,@r0
   0035 E4                  659 	clr	a
   0036 12s00r00            660 	lcall	__gptrput
   0039 A3                  661 	inc	dptr
   003A E4                  662 	clr	a
   003B 12s00r00            663 	lcall	__gptrput
                            664 ;	../../core/net/rime/polite-announcement.c:106: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
   003E 12s00r00            665 	lcall	_announcement_list
   0041 AA 82               666 	mov	r2,dpl
   0043 AE 83               667 	mov	r6,dph
   0045 AF F0               668 	mov	r7,b
   0047 E5*00               669 	mov	a,_bp
   0049 24 06               670 	add	a,#0x06
   004B F8                  671 	mov	r0,a
   004C A6 02               672 	mov	@r0,ar2
   004E 08                  673 	inc	r0
   004F A6 06               674 	mov	@r0,ar6
   0051 08                  675 	inc	r0
   0052 A6 07               676 	mov	@r0,ar7
   0054 E5*00               677 	mov	a,_bp
   0056 24 03               678 	add	a,#0x03
   0058 F8                  679 	mov	r0,a
   0059 74 02               680 	mov	a,#0x02
   005B 26                  681 	add	a,@r0
   005C FA                  682 	mov	r2,a
   005D E4                  683 	clr	a
   005E 08                  684 	inc	r0
   005F 36                  685 	addc	a,@r0
   0060 FE                  686 	mov	r6,a
   0061 08                  687 	inc	r0
   0062 86 07               688 	mov	ar7,@r0
   0064                     689 00103$:
   0064 E5*00               690 	mov	a,_bp
   0066 24 06               691 	add	a,#0x06
   0068 F8                  692 	mov	r0,a
   0069 E4                  693 	clr	a
   006A C0 E0               694 	push	acc
   006C E4                  695 	clr	a
   006D C0 E0               696 	push	acc
   006F E4                  697 	clr	a
   0070 C0 E0               698 	push	acc
   0072 86 82               699 	mov	dpl,@r0
   0074 08                  700 	inc	r0
   0075 86 83               701 	mov	dph,@r0
   0077 08                  702 	inc	r0
   0078 86 F0               703 	mov	b,@r0
   007A 12s00r00            704 	lcall	___gptr_cmp
   007D 15 81               705 	dec	sp
   007F 15 81               706 	dec	sp
   0081 15 81               707 	dec	sp
   0083 70 03               708 	jnz	00115$
   0085 02s01rAC            709 	ljmp	00106$
   0088                     710 00115$:
                            711 ;	../../core/net/rime/polite-announcement.c:107: adata->data[adata->num].id = a->id;
   0088 E5*00               712 	mov	a,_bp
   008A 24 03               713 	add	a,#0x03
   008C F8                  714 	mov	r0,a
   008D 86 82               715 	mov	dpl,@r0
   008F 08                  716 	inc	r0
   0090 86 83               717 	mov	dph,@r0
   0092 08                  718 	inc	r0
   0093 86 F0               719 	mov	b,@r0
   0095 12s00r00            720 	lcall	__gptrget
   0098 FC                  721 	mov	r4,a
   0099 A3                  722 	inc	dptr
   009A 12s00r00            723 	lcall	__gptrget
   009D FD                  724 	mov	r5,a
   009E E5*00               725 	mov	a,_bp
   00A0 24 09               726 	add	a,#0x09
   00A2 F8                  727 	mov	r0,a
   00A3 A6 04               728 	mov	@r0,ar4
   00A5 ED                  729 	mov	a,r5
   00A6 C6                  730 	xch	a,@r0
   00A7 25 E0               731 	add	a,acc
   00A9 C6                  732 	xch	a,@r0
   00AA 33                  733 	rlc	a
   00AB C6                  734 	xch	a,@r0
   00AC 25 E0               735 	add	a,acc
   00AE C6                  736 	xch	a,@r0
   00AF 33                  737 	rlc	a
   00B0 08                  738 	inc	r0
   00B1 F6                  739 	mov	@r0,a
   00B2 E5*00               740 	mov	a,_bp
   00B4 24 09               741 	add	a,#0x09
   00B6 F8                  742 	mov	r0,a
   00B7 E5*00               743 	mov	a,_bp
   00B9 24 0B               744 	add	a,#0x0b
   00BB F9                  745 	mov	r1,a
   00BC E6                  746 	mov	a,@r0
   00BD 2A                  747 	add	a,r2
   00BE F7                  748 	mov	@r1,a
   00BF 08                  749 	inc	r0
   00C0 E6                  750 	mov	a,@r0
   00C1 3E                  751 	addc	a,r6
   00C2 09                  752 	inc	r1
   00C3 F7                  753 	mov	@r1,a
   00C4 09                  754 	inc	r1
   00C5 A7 07               755 	mov	@r1,ar7
   00C7 E5*00               756 	mov	a,_bp
   00C9 24 06               757 	add	a,#0x06
   00CB F8                  758 	mov	r0,a
   00CC 74 03               759 	mov	a,#0x03
   00CE 26                  760 	add	a,@r0
   00CF FB                  761 	mov	r3,a
   00D0 E4                  762 	clr	a
   00D1 08                  763 	inc	r0
   00D2 36                  764 	addc	a,@r0
   00D3 FC                  765 	mov	r4,a
   00D4 08                  766 	inc	r0
   00D5 86 05               767 	mov	ar5,@r0
   00D7 8B 82               768 	mov	dpl,r3
   00D9 8C 83               769 	mov	dph,r4
   00DB 8D F0               770 	mov	b,r5
   00DD 12s00r00            771 	lcall	__gptrget
   00E0 FB                  772 	mov	r3,a
   00E1 A3                  773 	inc	dptr
   00E2 12s00r00            774 	lcall	__gptrget
   00E5 FC                  775 	mov	r4,a
   00E6 E5*00               776 	mov	a,_bp
   00E8 24 0B               777 	add	a,#0x0b
   00EA F8                  778 	mov	r0,a
   00EB 86 82               779 	mov	dpl,@r0
   00ED 08                  780 	inc	r0
   00EE 86 83               781 	mov	dph,@r0
   00F0 08                  782 	inc	r0
   00F1 86 F0               783 	mov	b,@r0
   00F3 EB                  784 	mov	a,r3
   00F4 12s00r00            785 	lcall	__gptrput
   00F7 A3                  786 	inc	dptr
   00F8 EC                  787 	mov	a,r4
   00F9 12s00r00            788 	lcall	__gptrput
                            789 ;	../../core/net/rime/polite-announcement.c:108: adata->data[adata->num].value = a->value;
   00FC E5*00               790 	mov	a,_bp
   00FE 24 09               791 	add	a,#0x09
   0100 F8                  792 	mov	r0,a
   0101 E6                  793 	mov	a,@r0
   0102 2A                  794 	add	a,r2
   0103 FB                  795 	mov	r3,a
   0104 08                  796 	inc	r0
   0105 E6                  797 	mov	a,@r0
   0106 3E                  798 	addc	a,r6
   0107 FC                  799 	mov	r4,a
   0108 8F 05               800 	mov	ar5,r7
   010A 74 02               801 	mov	a,#0x02
   010C 2B                  802 	add	a,r3
   010D FB                  803 	mov	r3,a
   010E E4                  804 	clr	a
   010F 3C                  805 	addc	a,r4
   0110 FC                  806 	mov	r4,a
   0111 C0 02               807 	push	ar2
   0113 C0 06               808 	push	ar6
   0115 C0 07               809 	push	ar7
   0117 E5*00               810 	mov	a,_bp
   0119 24 06               811 	add	a,#0x06
   011B F8                  812 	mov	r0,a
   011C 74 05               813 	mov	a,#0x05
   011E 26                  814 	add	a,@r0
   011F FA                  815 	mov	r2,a
   0120 E4                  816 	clr	a
   0121 08                  817 	inc	r0
   0122 36                  818 	addc	a,@r0
   0123 FE                  819 	mov	r6,a
   0124 08                  820 	inc	r0
   0125 86 07               821 	mov	ar7,@r0
   0127 8A 82               822 	mov	dpl,r2
   0129 8E 83               823 	mov	dph,r6
   012B 8F F0               824 	mov	b,r7
   012D 12s00r00            825 	lcall	__gptrget
   0130 FA                  826 	mov	r2,a
   0131 A3                  827 	inc	dptr
   0132 12s00r00            828 	lcall	__gptrget
   0135 FE                  829 	mov	r6,a
   0136 8B 82               830 	mov	dpl,r3
   0138 8C 83               831 	mov	dph,r4
   013A 8D F0               832 	mov	b,r5
   013C EA                  833 	mov	a,r2
   013D 12s00r00            834 	lcall	__gptrput
   0140 A3                  835 	inc	dptr
   0141 EE                  836 	mov	a,r6
   0142 12s00r00            837 	lcall	__gptrput
                            838 ;	../../core/net/rime/polite-announcement.c:109: adata->num++;
   0145 E5*00               839 	mov	a,_bp
   0147 24 03               840 	add	a,#0x03
   0149 F8                  841 	mov	r0,a
   014A 86 82               842 	mov	dpl,@r0
   014C 08                  843 	inc	r0
   014D 86 83               844 	mov	dph,@r0
   014F 08                  845 	inc	r0
   0150 86 F0               846 	mov	b,@r0
   0152 12s00r00            847 	lcall	__gptrget
   0155 FE                  848 	mov	r6,a
   0156 A3                  849 	inc	dptr
   0157 12s00r00            850 	lcall	__gptrget
   015A FF                  851 	mov	r7,a
   015B 0E                  852 	inc	r6
   015C BE 00 01            853 	cjne	r6,#0x00,00116$
   015F 0F                  854 	inc	r7
   0160                     855 00116$:
   0160 E5*00               856 	mov	a,_bp
   0162 24 03               857 	add	a,#0x03
   0164 F8                  858 	mov	r0,a
   0165 86 82               859 	mov	dpl,@r0
   0167 08                  860 	inc	r0
   0168 86 83               861 	mov	dph,@r0
   016A 08                  862 	inc	r0
   016B 86 F0               863 	mov	b,@r0
   016D EE                  864 	mov	a,r6
   016E 12s00r00            865 	lcall	__gptrput
   0171 A3                  866 	inc	dptr
   0172 EF                  867 	mov	a,r7
   0173 12s00r00            868 	lcall	__gptrput
                            869 ;	../../core/net/rime/polite-announcement.c:106: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
   0176 E5*00               870 	mov	a,_bp
   0178 24 06               871 	add	a,#0x06
   017A F8                  872 	mov	r0,a
   017B 86 02               873 	mov	ar2,@r0
   017D 08                  874 	inc	r0
   017E 86 06               875 	mov	ar6,@r0
   0180 08                  876 	inc	r0
   0181 86 07               877 	mov	ar7,@r0
   0183 8A 82               878 	mov	dpl,r2
   0185 8E 83               879 	mov	dph,r6
   0187 8F F0               880 	mov	b,r7
   0189 C0 02               881 	push	ar2
   018B 12s00r00            882 	lcall	_list_item_next
   018E AD 82               883 	mov	r5,dpl
   0190 AE 83               884 	mov	r6,dph
   0192 AF F0               885 	mov	r7,b
   0194 D0 02               886 	pop	ar2
   0196 E5*00               887 	mov	a,_bp
   0198 24 06               888 	add	a,#0x06
   019A F8                  889 	mov	r0,a
   019B A6 05               890 	mov	@r0,ar5
   019D 08                  891 	inc	r0
   019E A6 06               892 	mov	@r0,ar6
   01A0 08                  893 	inc	r0
   01A1 A6 07               894 	mov	@r0,ar7
   01A3 D0 07               895 	pop	ar7
   01A5 D0 06               896 	pop	ar6
   01A7 D0 02               897 	pop	ar2
   01A9 02s00r64            898 	ljmp	00103$
   01AC                     899 00106$:
                            900 ;	../../core/net/rime/polite-announcement.c:113: sizeof(struct announcement_data) * adata->num);
   01AC E5*00               901 	mov	a,_bp
   01AE 24 03               902 	add	a,#0x03
   01B0 F8                  903 	mov	r0,a
   01B1 86 82               904 	mov	dpl,@r0
   01B3 08                  905 	inc	r0
   01B4 86 83               906 	mov	dph,@r0
   01B6 08                  907 	inc	r0
   01B7 86 F0               908 	mov	b,@r0
   01B9 12s00r00            909 	lcall	__gptrget
   01BC FE                  910 	mov	r6,a
   01BD A3                  911 	inc	dptr
   01BE 12s00r00            912 	lcall	__gptrget
   01C1 CE                  913 	xch	a,r6
   01C2 25 E0               914 	add	a,acc
   01C4 CE                  915 	xch	a,r6
   01C5 33                  916 	rlc	a
   01C6 CE                  917 	xch	a,r6
   01C7 25 E0               918 	add	a,acc
   01C9 CE                  919 	xch	a,r6
   01CA 33                  920 	rlc	a
   01CB FF                  921 	mov	r7,a
   01CC 74 02               922 	mov	a,#0x02
   01CE 2E                  923 	add	a,r6
   01CF FE                  924 	mov	r6,a
   01D0 E4                  925 	clr	a
   01D1 3F                  926 	addc	a,r7
   01D2 FF                  927 	mov	r7,a
   01D3 8E 82               928 	mov	dpl,r6
   01D5 8F 83               929 	mov	dph,r7
   01D7 12s00r00            930 	lcall	_packetbuf_set_datalen
                            931 ;	../../core/net/rime/polite-announcement.c:118: if(adata->num > 0) {
   01DA E5*00               932 	mov	a,_bp
   01DC 24 03               933 	add	a,#0x03
   01DE F8                  934 	mov	r0,a
   01DF 86 82               935 	mov	dpl,@r0
   01E1 08                  936 	inc	r0
   01E2 86 83               937 	mov	dph,@r0
   01E4 08                  938 	inc	r0
   01E5 86 F0               939 	mov	b,@r0
   01E7 12s00r00            940 	lcall	__gptrget
   01EA FE                  941 	mov	r6,a
   01EB A3                  942 	inc	dptr
   01EC 12s00r00            943 	lcall	__gptrget
   01EF FF                  944 	mov	r7,a
   01F0 4E                  945 	orl	a,r6
   01F1 60 20               946 	jz	00107$
                            947 ;	../../core/net/rime/polite-announcement.c:120: ipolite_send(&c.c, interval, packetbuf_datalen());
   01F3 12s00r00            948 	lcall	_packetbuf_datalen
   01F6 AE 82               949 	mov	r6,dpl
   01F8 C0 06               950 	push	ar6
   01FA A8*00               951 	mov	r0,_bp
   01FC 08                  952 	inc	r0
   01FD E6                  953 	mov	a,@r0
   01FE C0 E0               954 	push	acc
   0200 08                  955 	inc	r0
   0201 E6                  956 	mov	a,@r0
   0202 C0 E0               957 	push	acc
   0204 90s00r00            958 	mov	dptr,#_c
   0207 75 F0 00            959 	mov	b,#0x00
   020A 12s00r00            960 	lcall	_ipolite_send
   020D 15 81               961 	dec	sp
   020F 15 81               962 	dec	sp
   0211 15 81               963 	dec	sp
   0213                     964 00107$:
   0213 85*00 81            965 	mov	sp,_bp
   0216 D0*00               966 	pop	_bp
   0218 22                  967 	ret
                            968 ;------------------------------------------------------------
                            969 ;Allocation info for local variables in function 'adv_packet_received'
                            970 ;------------------------------------------------------------
                            971 ;from                      Allocated to stack - _bp -5
                            972 ;ipolite                   Allocated to registers 
                            973 ;adata                     Allocated to stack - _bp +1
                            974 ;data                      Allocated to stack - _bp +3
                            975 ;ptr                       Allocated to stack - _bp +7
                            976 ;i                         Allocated to stack - _bp +10
                            977 ;sloc0                     Allocated to stack - _bp +12
                            978 ;------------------------------------------------------------
                            979 ;	../../core/net/rime/polite-announcement.c:125: adv_packet_received(struct ipolite_conn *ipolite, const rimeaddr_t *from)
                            980 ;	-----------------------------------------
                            981 ;	 function adv_packet_received
                            982 ;	-----------------------------------------
   0219                     983 _adv_packet_received:
   0219 C0*00               984 	push	_bp
   021B E5 81               985 	mov	a,sp
   021D F5*00               986 	mov	_bp,a
   021F 24 0E               987 	add	a,#0x0E
   0221 F5 81               988 	mov	sp,a
                            989 ;	../../core/net/rime/polite-announcement.c:132: ptr = packetbuf_dataptr();
   0223 12s00r00            990 	lcall	_packetbuf_dataptr
   0226 AD 82               991 	mov	r5,dpl
   0228 AE 83               992 	mov	r6,dph
   022A AF F0               993 	mov	r7,b
   022C E5*00               994 	mov	a,_bp
   022E 24 07               995 	add	a,#0x07
   0230 F8                  996 	mov	r0,a
   0231 A6 05               997 	mov	@r0,ar5
   0233 08                  998 	inc	r0
   0234 A6 06               999 	mov	@r0,ar6
   0236 08                 1000 	inc	r0
   0237 A6 07              1001 	mov	@r0,ar7
                           1002 ;	../../core/net/rime/polite-announcement.c:135: memcpy(&adata, ptr, sizeof(struct announcement_msg));
   0239 E5*00              1003 	mov	a,_bp
   023B 24 07              1004 	add	a,#0x07
   023D F8                 1005 	mov	r0,a
   023E 86 02              1006 	mov	ar2,@r0
   0240 08                 1007 	inc	r0
   0241 86 03              1008 	mov	ar3,@r0
   0243 08                 1009 	inc	r0
   0244 86 04              1010 	mov	ar4,@r0
   0246 AF*00              1011 	mov	r7,_bp
   0248 0F                 1012 	inc	r7
   0249 7E 00              1013 	mov	r6,#0x00
   024B 7D 40              1014 	mov	r5,#0x40
   024D 74 02              1015 	mov	a,#0x02
   024F C0 E0              1016 	push	acc
   0251 E4                 1017 	clr	a
   0252 C0 E0              1018 	push	acc
   0254 C0 02              1019 	push	ar2
   0256 C0 03              1020 	push	ar3
   0258 C0 04              1021 	push	ar4
   025A 8F 82              1022 	mov	dpl,r7
   025C 8E 83              1023 	mov	dph,r6
   025E 8D F0              1024 	mov	b,r5
   0260 12s00r00           1025 	lcall	_memcpy
   0263 E5 81              1026 	mov	a,sp
   0265 24 FB              1027 	add	a,#0xfb
   0267 F5 81              1028 	mov	sp,a
                           1029 ;	../../core/net/rime/polite-announcement.c:140: if(ANNOUNCEMENT_MSG_HEADERLEN + adata.num * sizeof(struct announcement_data) > packetbuf_datalen()) {
   0269 A9*00              1030 	mov	r1,_bp
   026B 09                 1031 	inc	r1
   026C 87 06              1032 	mov	ar6,@r1
   026E 09                 1033 	inc	r1
   026F E7                 1034 	mov	a,@r1
   0270 CE                 1035 	xch	a,r6
   0271 25 E0              1036 	add	a,acc
   0273 CE                 1037 	xch	a,r6
   0274 33                 1038 	rlc	a
   0275 CE                 1039 	xch	a,r6
   0276 25 E0              1040 	add	a,acc
   0278 CE                 1041 	xch	a,r6
   0279 33                 1042 	rlc	a
   027A FF                 1043 	mov	r7,a
   027B 74 02              1044 	mov	a,#0x02
   027D 2E                 1045 	add	a,r6
   027E FE                 1046 	mov	r6,a
   027F E4                 1047 	clr	a
   0280 3F                 1048 	addc	a,r7
   0281 FF                 1049 	mov	r7,a
   0282 C0 07              1050 	push	ar7
   0284 C0 06              1051 	push	ar6
   0286 12s00r00           1052 	lcall	_packetbuf_datalen
   0289 AC 82              1053 	mov	r4,dpl
   028B AD 83              1054 	mov	r5,dph
   028D D0 06              1055 	pop	ar6
   028F D0 07              1056 	pop	ar7
   0291 C3                 1057 	clr	c
   0292 EC                 1058 	mov	a,r4
   0293 9E                 1059 	subb	a,r6
   0294 ED                 1060 	mov	a,r5
   0295 9F                 1061 	subb	a,r7
   0296 50 03              1062 	jnc	00102$
                           1063 ;	../../core/net/rime/polite-announcement.c:144: return;
   0298 02s03r96           1064 	ljmp	00107$
   029B                    1065 00102$:
                           1066 ;	../../core/net/rime/polite-announcement.c:147: ptr += ANNOUNCEMENT_MSG_HEADERLEN;
   029B E5*00              1067 	mov	a,_bp
   029D 24 07              1068 	add	a,#0x07
   029F F8                 1069 	mov	r0,a
   02A0 74 02              1070 	mov	a,#0x02
   02A2 26                 1071 	add	a,@r0
   02A3 FD                 1072 	mov	r5,a
   02A4 E4                 1073 	clr	a
   02A5 08                 1074 	inc	r0
   02A6 36                 1075 	addc	a,@r0
   02A7 FE                 1076 	mov	r6,a
   02A8 08                 1077 	inc	r0
   02A9 86 07              1078 	mov	ar7,@r0
                           1079 ;	../../core/net/rime/polite-announcement.c:148: for(i = 0; i < adata.num; ++i) {
   02AB A9*00              1080 	mov	r1,_bp
   02AD 09                 1081 	inc	r1
   02AE E5*00              1082 	mov	a,_bp
   02B0 24 0A              1083 	add	a,#0x0a
   02B2 F8                 1084 	mov	r0,a
   02B3 E4                 1085 	clr	a
   02B4 F6                 1086 	mov	@r0,a
   02B5 08                 1087 	inc	r0
   02B6 F6                 1088 	mov	@r0,a
   02B7                    1089 00103$:
   02B7 C0 05              1090 	push	ar5
   02B9 C0 06              1091 	push	ar6
   02BB C0 07              1092 	push	ar7
   02BD 87 02              1093 	mov	ar2,@r1
   02BF 09                 1094 	inc	r1
   02C0 87 07              1095 	mov	ar7,@r1
   02C2 19                 1096 	dec	r1
   02C3 E5*00              1097 	mov	a,_bp
   02C5 24 0A              1098 	add	a,#0x0a
   02C7 F8                 1099 	mov	r0,a
   02C8 86 05              1100 	mov	ar5,@r0
   02CA 08                 1101 	inc	r0
   02CB 86 06              1102 	mov	ar6,@r0
   02CD C3                 1103 	clr	c
   02CE ED                 1104 	mov	a,r5
   02CF 9A                 1105 	subb	a,r2
   02D0 EE                 1106 	mov	a,r6
   02D1 9F                 1107 	subb	a,r7
   02D2 D0 07              1108 	pop	ar7
   02D4 D0 06              1109 	pop	ar6
   02D6 D0 05              1110 	pop	ar5
   02D8 40 03              1111 	jc	00117$
   02DA 02s03r96           1112 	ljmp	00107$
   02DD                    1113 00117$:
                           1114 ;	../../core/net/rime/polite-announcement.c:150: memcpy(&data, ptr, sizeof(struct announcement_data));
   02DD C0 01              1115 	push	ar1
   02DF E5*00              1116 	mov	a,_bp
   02E1 24 0C              1117 	add	a,#0x0c
   02E3 F8                 1118 	mov	r0,a
   02E4 A6 05              1119 	mov	@r0,ar5
   02E6 08                 1120 	inc	r0
   02E7 A6 06              1121 	mov	@r0,ar6
   02E9 08                 1122 	inc	r0
   02EA A6 07              1123 	mov	@r0,ar7
   02EC E5*00              1124 	mov	a,_bp
   02EE 24 03              1125 	add	a,#0x03
   02F0 FC                 1126 	mov	r4,a
   02F1 7B 00              1127 	mov	r3,#0x00
   02F3 7A 40              1128 	mov	r2,#0x40
   02F5 C0 07              1129 	push	ar7
   02F7 C0 06              1130 	push	ar6
   02F9 C0 05              1131 	push	ar5
   02FB C0 01              1132 	push	ar1
   02FD 74 04              1133 	mov	a,#0x04
   02FF C0 E0              1134 	push	acc
   0301 E4                 1135 	clr	a
   0302 C0 E0              1136 	push	acc
   0304 E5*00              1137 	mov	a,_bp
   0306 24 0C              1138 	add	a,#0x0c
   0308 F8                 1139 	mov	r0,a
   0309 E6                 1140 	mov	a,@r0
   030A C0 E0              1141 	push	acc
   030C 08                 1142 	inc	r0
   030D E6                 1143 	mov	a,@r0
   030E C0 E0              1144 	push	acc
   0310 08                 1145 	inc	r0
   0311 E6                 1146 	mov	a,@r0
   0312 C0 E0              1147 	push	acc
   0314 8C 82              1148 	mov	dpl,r4
   0316 8B 83              1149 	mov	dph,r3
   0318 8A F0              1150 	mov	b,r2
   031A 12s00r00           1151 	lcall	_memcpy
   031D E5 81              1152 	mov	a,sp
   031F 24 FB              1153 	add	a,#0xfb
   0321 F5 81              1154 	mov	sp,a
   0323 D0 01              1155 	pop	ar1
   0325 D0 05              1156 	pop	ar5
   0327 D0 06              1157 	pop	ar6
   0329 D0 07              1158 	pop	ar7
                           1159 ;	../../core/net/rime/polite-announcement.c:151: announcement_heard(from, data.id, data.value);
   032B E5*00              1160 	mov	a,_bp
   032D 24 03              1161 	add	a,#0x03
   032F F9                 1162 	mov	r1,a
   0330 24 02              1163 	add	a,#0x02
   0332 F8                 1164 	mov	r0,a
   0333 C0 01              1165 	push	ar1
   0335 E5*00              1166 	mov	a,_bp
   0337 24 0C              1167 	add	a,#0x0c
   0339 F9                 1168 	mov	r1,a
   033A E6                 1169 	mov	a,@r0
   033B F7                 1170 	mov	@r1,a
   033C 08                 1171 	inc	r0
   033D E6                 1172 	mov	a,@r0
   033E 09                 1173 	inc	r1
   033F F7                 1174 	mov	@r1,a
   0340 18                 1175 	dec	r0
   0341 D0 01              1176 	pop	ar1
   0343 87 02              1177 	mov	ar2,@r1
   0345 09                 1178 	inc	r1
   0346 87 04              1179 	mov	ar4,@r1
   0348 19                 1180 	dec	r1
   0349 C0 07              1181 	push	ar7
   034B C0 06              1182 	push	ar6
   034D C0 05              1183 	push	ar5
   034F C0 01              1184 	push	ar1
   0351 E5*00              1185 	mov	a,_bp
   0353 24 0C              1186 	add	a,#0x0c
   0355 F8                 1187 	mov	r0,a
   0356 E6                 1188 	mov	a,@r0
   0357 C0 E0              1189 	push	acc
   0359 08                 1190 	inc	r0
   035A E6                 1191 	mov	a,@r0
   035B C0 E0              1192 	push	acc
   035D C0 02              1193 	push	ar2
   035F C0 04              1194 	push	ar4
   0361 E5*00              1195 	mov	a,_bp
   0363 24 FB              1196 	add	a,#0xfb
   0365 F8                 1197 	mov	r0,a
   0366 86 82              1198 	mov	dpl,@r0
   0368 08                 1199 	inc	r0
   0369 86 83              1200 	mov	dph,@r0
   036B 08                 1201 	inc	r0
   036C 86 F0              1202 	mov	b,@r0
   036E 12s00r00           1203 	lcall	_announcement_heard
   0371 E5 81              1204 	mov	a,sp
   0373 24 FC              1205 	add	a,#0xfc
   0375 F5 81              1206 	mov	sp,a
   0377 D0 01              1207 	pop	ar1
   0379 D0 05              1208 	pop	ar5
   037B D0 06              1209 	pop	ar6
   037D D0 07              1210 	pop	ar7
                           1211 ;	../../core/net/rime/polite-announcement.c:152: ptr += sizeof(struct announcement_data);
   037F 74 04              1212 	mov	a,#0x04
   0381 2D                 1213 	add	a,r5
   0382 FD                 1214 	mov	r5,a
   0383 E4                 1215 	clr	a
   0384 3E                 1216 	addc	a,r6
   0385 FE                 1217 	mov	r6,a
                           1218 ;	../../core/net/rime/polite-announcement.c:148: for(i = 0; i < adata.num; ++i) {
   0386 E5*00              1219 	mov	a,_bp
   0388 24 0A              1220 	add	a,#0x0a
   038A F8                 1221 	mov	r0,a
   038B 06                 1222 	inc	@r0
   038C B6 00 02           1223 	cjne	@r0,#0x00,00118$
   038F 08                 1224 	inc	r0
   0390 06                 1225 	inc	@r0
   0391                    1226 00118$:
   0391 D0 01              1227 	pop	ar1
   0393 02s02rB7           1228 	ljmp	00103$
   0396                    1229 00107$:
   0396 85*00 81           1230 	mov	sp,_bp
   0399 D0*00              1231 	pop	_bp
   039B 22                 1232 	ret
                           1233 ;------------------------------------------------------------
                           1234 ;Allocation info for local variables in function 'send_timer'
                           1235 ;------------------------------------------------------------
                           1236 ;ptr                       Allocated to registers 
                           1237 ;------------------------------------------------------------
                           1238 ;	../../core/net/rime/polite-announcement.c:157: send_timer(void *ptr)
                           1239 ;	-----------------------------------------
                           1240 ;	 function send_timer
                           1241 ;	-----------------------------------------
   039C                    1242 _send_timer:
                           1243 ;	../../core/net/rime/polite-announcement.c:159: send_adv(c.interval);
   039C 90s00r42           1244 	mov	dptr,#(_c + 0x0042)
   039F E0                 1245 	movx	a,@dptr
   03A0 FE                 1246 	mov	r6,a
   03A1 A3                 1247 	inc	dptr
   03A2 E0                 1248 	movx	a,@dptr
   03A3 FF                 1249 	mov	r7,a
   03A4 8E 82              1250 	mov	dpl,r6
   03A6 8F 83              1251 	mov	dph,r7
   03A8 12s00r00           1252 	lcall	_send_adv
                           1253 ;	../../core/net/rime/polite-announcement.c:162: send_timer, &c);
                           1254 ;	../../core/net/rime/polite-announcement.c:161: c.interval,
   03AB 90s00r42           1255 	mov	dptr,#(_c + 0x0042)
   03AE E0                 1256 	movx	a,@dptr
   03AF FE                 1257 	mov	r6,a
   03B0 A3                 1258 	inc	dptr
   03B1 E0                 1259 	movx	a,@dptr
   03B2 FF                 1260 	mov	r7,a
                           1261 ;	../../core/net/rime/polite-announcement.c:160: ctimer_set(&c.t,
   03B3 74r00              1262 	mov	a,#_c
   03B5 C0 E0              1263 	push	acc
   03B7 74s00              1264 	mov	a,#(_c >> 8)
   03B9 C0 E0              1265 	push	acc
   03BB E4                 1266 	clr	a
   03BC C0 E0              1267 	push	acc
   03BE 74r9C              1268 	mov	a,#_send_timer
   03C0 C0 E0              1269 	push	acc
   03C2 74s03              1270 	mov	a,#(_send_timer >> 8)
   03C4 C0 E0              1271 	push	acc
   03C6 C0 06              1272 	push	ar6
   03C8 C0 07              1273 	push	ar7
   03CA 90s00r2D           1274 	mov	dptr,#(_c + 0x002d)
   03CD 75 F0 00           1275 	mov	b,#0x00
   03D0 12s00r00           1276 	lcall	_ctimer_set
   03D3 E5 81              1277 	mov	a,sp
   03D5 24 F9              1278 	add	a,#0xf9
   03D7 F5 81              1279 	mov	sp,a
                           1280 ;	../../core/net/rime/polite-announcement.c:164: c.interval = MIN(c.interval * 2, c.max_interval);
   03D9 90s00r42           1281 	mov	dptr,#(_c + 0x0042)
   03DC E0                 1282 	movx	a,@dptr
   03DD FE                 1283 	mov	r6,a
   03DE A3                 1284 	inc	dptr
   03DF E0                 1285 	movx	a,@dptr
   03E0 CE                 1286 	xch	a,r6
   03E1 25 E0              1287 	add	a,acc
   03E3 CE                 1288 	xch	a,r6
   03E4 33                 1289 	rlc	a
   03E5 FF                 1290 	mov	r7,a
   03E6 90s00r46           1291 	mov	dptr,#(_c + 0x0046)
   03E9 E0                 1292 	movx	a,@dptr
   03EA FC                 1293 	mov	r4,a
   03EB A3                 1294 	inc	dptr
   03EC E0                 1295 	movx	a,@dptr
   03ED FD                 1296 	mov	r5,a
   03EE C3                 1297 	clr	c
   03EF EE                 1298 	mov	a,r6
   03F0 9C                 1299 	subb	a,r4
   03F1 EF                 1300 	mov	a,r7
   03F2 9D                 1301 	subb	a,r5
   03F3 50 02              1302 	jnc	00103$
   03F5 80 04              1303 	sjmp	00104$
   03F7                    1304 00103$:
   03F7 8C 06              1305 	mov	ar6,r4
   03F9 8D 07              1306 	mov	ar7,r5
   03FB                    1307 00104$:
   03FB 90s00r42           1308 	mov	dptr,#(_c + 0x0042)
   03FE EE                 1309 	mov	a,r6
   03FF F0                 1310 	movx	@dptr,a
   0400 A3                 1311 	inc	dptr
   0401 EF                 1312 	mov	a,r7
   0402 F0                 1313 	movx	@dptr,a
   0403 22                 1314 	ret
                           1315 ;------------------------------------------------------------
                           1316 ;Allocation info for local variables in function 'new_announcement'
                           1317 ;------------------------------------------------------------
                           1318 ;has_value                 Allocated to stack - _bp -3
                           1319 ;newval                    Allocated to stack - _bp -5
                           1320 ;oldval                    Allocated to stack - _bp -7
                           1321 ;bump                      Allocated to stack - _bp -8
                           1322 ;id                        Allocated to registers 
                           1323 ;------------------------------------------------------------
                           1324 ;	../../core/net/rime/polite-announcement.c:168: new_announcement(uint16_t id, uint8_t has_value, uint16_t newval,
                           1325 ;	-----------------------------------------
                           1326 ;	 function new_announcement
                           1327 ;	-----------------------------------------
   0404                    1328 _new_announcement:
   0404 C0*00              1329 	push	_bp
   0406 85 81*00           1330 	mov	_bp,sp
                           1331 ;	../../core/net/rime/polite-announcement.c:171: if(newval != oldval) {
   0409 E5*00              1332 	mov	a,_bp
   040B 24 FB              1333 	add	a,#0xfb
   040D F8                 1334 	mov	r0,a
   040E E5*00              1335 	mov	a,_bp
   0410 24 F9              1336 	add	a,#0xf9
   0412 F9                 1337 	mov	r1,a
   0413 86 F0              1338 	mov	b,@r0
   0415 E7                 1339 	mov	a,@r1
   0416 B5 F0 0A           1340 	cjne	a,b,00107$
   0419 08                 1341 	inc	r0
   041A 86 F0              1342 	mov	b,@r0
   041C 09                 1343 	inc	r1
   041D E7                 1344 	mov	a,@r1
   041E B5 F0 02           1345 	cjne	a,b,00107$
   0421 80 19              1346 	sjmp	00103$
   0423                    1347 00107$:
                           1348 ;	../../core/net/rime/polite-announcement.c:172: c.interval = c.min_interval;
   0423 90s00r44           1349 	mov	dptr,#(_c + 0x0044)
   0426 E0                 1350 	movx	a,@dptr
   0427 FE                 1351 	mov	r6,a
   0428 A3                 1352 	inc	dptr
   0429 E0                 1353 	movx	a,@dptr
   042A FF                 1354 	mov	r7,a
   042B 90s00r42           1355 	mov	dptr,#(_c + 0x0042)
   042E EE                 1356 	mov	a,r6
   042F F0                 1357 	movx	@dptr,a
   0430 A3                 1358 	inc	dptr
   0431 EF                 1359 	mov	a,r7
   0432 F0                 1360 	movx	@dptr,a
                           1361 ;	../../core/net/rime/polite-announcement.c:173: send_timer(&c);
   0433 90s00r00           1362 	mov	dptr,#_c
   0436 75 F0 00           1363 	mov	b,#0x00
   0439 12s03r9C           1364 	lcall	_send_timer
   043C                    1365 00103$:
   043C D0*00              1366 	pop	_bp
   043E 22                 1367 	ret
                           1368 ;------------------------------------------------------------
                           1369 ;Allocation info for local variables in function 'polite_announcement_init'
                           1370 ;------------------------------------------------------------
                           1371 ;min                       Allocated to stack - _bp -4
                           1372 ;max                       Allocated to stack - _bp -6
                           1373 ;channel                   Allocated to registers r6 r7 
                           1374 ;------------------------------------------------------------
                           1375 ;	../../core/net/rime/polite-announcement.c:181: polite_announcement_init(uint16_t channel,
                           1376 ;	-----------------------------------------
                           1377 ;	 function polite_announcement_init
                           1378 ;	-----------------------------------------
   043F                    1379 _polite_announcement_init:
   043F C0*00              1380 	push	_bp
   0441 85 81*00           1381 	mov	_bp,sp
   0444 AE 82              1382 	mov	r6,dpl
   0446 AF 83              1383 	mov	r7,dph
                           1384 ;	../../core/net/rime/polite-announcement.c:185: ipolite_open(&c.c, channel, NUM_DUPS, &ipolite_callbacks);
   0448 74r00              1385 	mov	a,#_ipolite_callbacks
   044A C0 E0              1386 	push	acc
   044C 74s00              1387 	mov	a,#(_ipolite_callbacks >> 8)
   044E C0 E0              1388 	push	acc
   0450 74 80              1389 	mov	a,#0x80
   0452 C0 E0              1390 	push	acc
   0454 74 05              1391 	mov	a,#0x05
   0456 C0 E0              1392 	push	acc
   0458 C0 06              1393 	push	ar6
   045A C0 07              1394 	push	ar7
   045C 90s00r00           1395 	mov	dptr,#_c
   045F 75 F0 00           1396 	mov	b,#0x00
   0462 12s00r00           1397 	lcall	_ipolite_open
   0465 E5 81              1398 	mov	a,sp
   0467 24 FA              1399 	add	a,#0xfa
   0469 F5 81              1400 	mov	sp,a
                           1401 ;	../../core/net/rime/polite-announcement.c:187: c.min_interval = min;
   046B 90s00r44           1402 	mov	dptr,#(_c + 0x0044)
   046E E5*00              1403 	mov	a,_bp
   0470 24 FC              1404 	add	a,#0xfc
   0472 F8                 1405 	mov	r0,a
   0473 E6                 1406 	mov	a,@r0
   0474 F0                 1407 	movx	@dptr,a
   0475 A3                 1408 	inc	dptr
   0476 08                 1409 	inc	r0
   0477 E6                 1410 	mov	a,@r0
   0478 F0                 1411 	movx	@dptr,a
                           1412 ;	../../core/net/rime/polite-announcement.c:188: c.max_interval = max;
   0479 90s00r46           1413 	mov	dptr,#(_c + 0x0046)
   047C E5*00              1414 	mov	a,_bp
   047E 24 FA              1415 	add	a,#0xfa
   0480 F8                 1416 	mov	r0,a
   0481 E6                 1417 	mov	a,@r0
   0482 F0                 1418 	movx	@dptr,a
   0483 A3                 1419 	inc	dptr
   0484 08                 1420 	inc	r0
   0485 E6                 1421 	mov	a,@r0
   0486 F0                 1422 	movx	@dptr,a
                           1423 ;	../../core/net/rime/polite-announcement.c:190: announcement_register_observer_callback(new_announcement);
   0487 90s04r04           1424 	mov	dptr,#_new_announcement
   048A 12s00r00           1425 	lcall	_announcement_register_observer_callback
   048D D0*00              1426 	pop	_bp
   048F 22                 1427 	ret
                           1428 ;------------------------------------------------------------
                           1429 ;Allocation info for local variables in function 'polite_announcement_stop'
                           1430 ;------------------------------------------------------------
                           1431 ;	../../core/net/rime/polite-announcement.c:194: polite_announcement_stop(void)
                           1432 ;	-----------------------------------------
                           1433 ;	 function polite_announcement_stop
                           1434 ;	-----------------------------------------
   0490                    1435 _polite_announcement_stop:
                           1436 ;	../../core/net/rime/polite-announcement.c:196: ctimer_stop(&c.t);
   0490 90s00r2D           1437 	mov	dptr,#(_c + 0x002d)
   0493 75 F0 00           1438 	mov	b,#0x00
   0496 12s00r00           1439 	lcall	_ctimer_stop
                           1440 ;	../../core/net/rime/polite-announcement.c:197: ipolite_close(&c.c);
   0499 90s00r00           1441 	mov	dptr,#_c
   049C 75 F0 00           1442 	mov	b,#0x00
   049F 02s00r00           1443 	ljmp	_ipolite_close
                           1444 	.area CSEG    (CODE)
                           1445 	.area CONST   (CODE)
   0000                    1446 _ipolite_callbacks:
   0000r19s02              1447 	.byte _adv_packet_received,(_adv_packet_received >> 8)
   0002 00 00              1448 	.byte #0x00,#0x00
   0004 00 00              1449 	.byte #0x00,#0x00
                           1450 	.area XINIT   (CODE)
                           1451 	.area CABS    (ABS,CODE)
